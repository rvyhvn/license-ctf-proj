# r2 rdb project file
# eval
"e anal.a2f = false"
"e anal.arch = x86"
"e anal.armthumb = false"
"e anal.autoname = false"
"e anal.bb.maxsize = 512K"
"e anal.brokenrefs = false"
"e anal.calls = false"
"e anal.cc = "
"e anal.cs = 0"
"e anal.cxxabi = itanium"
"e anal.datarefs = false"
"e anal.delay = true"
"e anal.depth = 128"
"e anal.emu = false"
"e anal.esil = false"
"e anal.fcnprefix = fcn"
"e anal.from = 0xffffffffffffffff"
"e anal.gp = 0"
"e anal.gpfixed = true"
"e anal.graph_depth = 256"
"e anal.hasnext = false"
"e anal.hpskip = false"
"e anal.ignbithints = false"
"e anal.imports = true"
"e anal.in = io.maps.x"
"e anal.jmp.above = true"
"e anal.jmp.cref = false"
"e anal.jmp.indir = false"
"e anal.jmp.mid = true"
"e anal.jmp.ref = true"
"e anal.jmp.retpoline = true"
"e anal.jmp.tailcall = true"
"e anal.jmp.tailcall.delta = 0"
"e anal.jmp.tbl = true"
"e anal.limits = false"
"e anal.loads = false"
"e anal.mask = false"
"e anal.nonull = 0"
"e anal.nopskip = true"
"e anal.noret = true"
"e anal.noret.refs = false"
"e anal.norevisit = false"
"e anal.onchange = false"
"e anal.prelude = "
"e anal.ptrdepth = 3"
"e anal.pushret = false"
"e anal.recont = false"
"e anal.refstr = false"
"e anal.roregs = gp,zero"
"e anal.sleep = 0"
"e anal.slow = true"
"e anal.strings = false"
"e anal.syscc = "
"e anal.timeout = 0"
"e anal.to = 0xffffffffffffffff"
"e anal.trycatch = false"
"e anal.types.constraint = false"
"e anal.types.spec = gcc"
"e anal.types.verbose = false"
"e anal.vars = true"
"e anal.vars.newstack = false"
"e anal.vars.stackname = false"
"e anal.verbose = false"
"e anal.vinfun = true"
"e anal.vinfunrange = false"
"e arch.bits = 32"
"e arch.decoder = null"
"e arch.endian = little"
"e arch.platform = "
"e asm.abi = "
"e asm.anal = false"
"e asm.arch = x86"
"e asm.assembler = "
"e asm.bbmiddle = true"
"e asm.bits = 64"
"e asm.bytes = true"
"e asm.bytes.align = false"
"e asm.bytes.asbits = false"
"e asm.bytes.ascii = false"
"e asm.bytes.opcolor = false"
"e asm.bytes.right = false"
"e asm.bytes.space = false"
"e asm.capitalize = false"
"e asm.cmt.calls = true"
"e asm.cmt.col = 71"
"e asm.cmt.esil = false"
"e asm.cmt.flgrefs = true"
"e asm.cmt.fold = false"
"e asm.cmt.off = nodup"
"e asm.cmt.patch = false"
"e asm.cmt.refs = true"
"e asm.cmt.right = true"
"e asm.cmt.token = ;"
"e asm.cmt.user = false"
"e asm.codealign = 1"
"e asm.comments = true"
"e asm.cpu = x86"
"e asm.cycles = false"
"e asm.cyclespace = false"
"e asm.decode = false"
"e asm.demangle = true"
"e asm.describe = true"
"e asm.dwarf = false"
"e asm.dwarf.abspath = false"
"e asm.dwarf.file = true"
"e asm.emu = false"
"e asm.esil = false"
"e asm.family = false"
"e asm.fcnsig = true"
"e asm.flags = true"
"e asm.flags.inbytes = false"
"e asm.flags.inline = false"
"e asm.flags.inoffset = false"
"e asm.flags.limit = 0"
"e asm.flags.maxname = 0"
"e asm.flags.middle = 2"
"e asm.flags.offset = false"
"e asm.flags.prefix = true"
"e asm.flags.real = false"
"e asm.flags.right = false"
"e asm.functions = true"
"e asm.highlight = "
"e asm.hint.call = true"
"e asm.hint.call.indirect = true"
"e asm.hint.cdiv = false"
"e asm.hint.emu = false"
"e asm.hint.imm = false"
"e asm.hint.jmp = false"
"e asm.hint.lea = false"
"e asm.hint.pos = 1"
"e asm.hints = true"
"e asm.imm.str = true"
"e asm.imm.trim = false"
"e asm.indent = false"
"e asm.indentspace = 2"
"e asm.instr = true"
"e asm.invhex = false"
"e asm.lbytes = true"
"e asm.lines = true"
"e asm.lines.bb = true"
"e asm.lines.call = true"
"e asm.lines.fcn = true"
"e asm.lines.jmp = true"
"e asm.lines.limit = 0x00004000"
"e asm.lines.maxref = 0"
"e asm.lines.out = true"
"e asm.lines.ret = true"
"e asm.lines.right = false"
"e asm.lines.wide = false"
"e asm.lines.width = 7"
"e asm.marks = true"
"e asm.meta = true"
"e asm.midcursor = false"
"e asm.middle = false"
"e asm.nbytes = 6"
"e asm.nodup = false"
"e asm.noisy = true"
"e asm.offset = true"
"e asm.offset.base10 = false"
"e asm.offset.base36 = false"
"e asm.offset.focus = false"
"e asm.offset.relto = "
"e asm.offset.segment = false"
"e asm.offset.segment.bits = 4"
"e asm.optype = false"
"e asm.os = linux"
"e asm.parser = x86.pseudo"
"e asm.payloads = false"
"e asm.pseudo = false"
"e asm.refptr = true"
"e asm.section = true"
"e asm.section.col = 20"
"e asm.section.name = true"
"e asm.section.perm = false"
"e asm.size = false"
"e asm.slow = true"
"e asm.stackptr = false"
"e asm.strip = "
"e asm.sub.jmp = true"
"e asm.sub.names = true"
"e asm.sub.reg = false"
"e asm.sub.rel = true"
"e asm.sub.section = false"
"e asm.sub.tail = false"
"e asm.sub.var = true"
"e asm.sub.varmin = 256"
"e asm.sub.varonly = true"
"e asm.symbol = false"
"e asm.symbol.col = 40"
"e asm.syntax = intel"
"e asm.tabs = 0"
"e asm.tabs.off = 0"
"e asm.tabs.once = false"
"e asm.trace = false"
"e asm.trace.color = true"
"e asm.trace.space = false"
"e asm.trace.stats = true"
"e asm.types = 1"
"e asm.ucase = false"
"e asm.var = true"
"e asm.var.access = false"
"e asm.var.summary = 0"
"e asm.xrefs = true"
"e asm.xrefs.code = true"
"e asm.xrefs.fold = 5"
"e asm.xrefs.max = 20"
"e bin.at = false"
"e bin.baddr = 0"
"e bin.cache = false"
"e bin.classes = true"
"e bin.dbginfo = true"
"e bin.demangle = true"
"e bin.demangle.libs = false"
"e bin.demangle.trylib = true"
"e bin.filter = true"
"e bin.force = "
"e bin.hashlimit = 10M"
"e bin.lang = c"
"e bin.libs = false"
"e bin.limit = 0"
"e bin.maxsymlen = 0"
"e bin.prefix = "
"e bin.relocs = true"
"e bin.relocs.apply = false"
"e bin.str.debase64 = false"
"e bin.str.enc = guess"
"e bin.str.filter = "
"e bin.str.max = 0"
"e bin.str.maxbuf = 0x00a00000"
"e bin.str.min = 0"
"e bin.str.nofp = false"
"e bin.str.purge = "
"e bin.str.raw = false"
"e bin.str.real = false"
"e bin.strings = true"
"e bin.types = true"
"e bin.useldr = true"
"e bin.usextr = true"
"e bin.verbose = false"
"e cfg.bigendian = false"
"e cfg.charset = "
"e cfg.codevar = "
"e cfg.corelog = false"
"e cfg.cpuaffinity = 0"
"e cfg.debug = false"
"e cfg.editor = vi"
"e cfg.fortunes = true"
"e cfg.fortunes.clippy = false"
"e cfg.fortunes.tts = false"
"e cfg.fortunes.type = fun,tips"
"e cfg.json.num = none"
"e cfg.json.str = none"
"e cfg.newtab = false"
"e cfg.plugins = true"
"e cfg.prefixdump = dump"
"e cfg.r2wars = false"
"e cfg.sandbox = false"
"e cfg.sandbox.grain = all"
"e cfg.user = hanshi"
"e cfg.wseek = false"
"e cmd.bbgraph = "
"e cmd.bp = "
"e cmd.cprompt = "
"e cmd.demangle = false"
"e cmd.depth = 10"
"e cmd.esil.intr = "
"e cmd.esil.ioer = "
"e cmd.esil.mdev = "
"e cmd.esil.pin = "
"e cmd.esil.step = "
"e cmd.esil.stepout = "
"e cmd.esil.todo = "
"e cmd.esil.trap = "
"e cmd.fcn.delete = "
"e cmd.fcn.new = "
"e cmd.fcn.rename = "
"e cmd.gprompt = "
"e cmd.hexcursor = "
"e cmd.hit = "
"e cmd.hitinfo = 1"
"e cmd.load = "
"e cmd.log = "
"e cmd.onsyscall = "
"e cmd.open = "
"e cmd.pdc = "
"e cmd.prompt = "
"e cmd.repeat = false"
"e cmd.stack = "
"e cmd.step = "
"e cmd.times = "
"e cmd.undo = true"
"e cmd.usr1 = "
"e cmd.usr2 = "
"e cmd.visual = "
"e cmd.vprompt = "
"e cmd.vprompt2 = "
"e dbg.aftersyscall = true"
"e dbg.args = "
"e dbg.backend = native"
"e dbg.bep = loader"
"e dbg.bpinmaps = true"
"e dbg.bpsize = 1"
"e dbg.bpsysign = false"
"e dbg.btalgo = fuzzy"
"e dbg.btdepth = 128"
"e dbg.clone = false"
"e dbg.consbreak = false"
"e dbg.exe.path = "
"e dbg.execs = false"
"e dbg.exitkills = true"
"e dbg.follow = 64"
"e dbg.follow.child = false"
"e dbg.forks = false"
"e dbg.funcarg = false"
"e dbg.gdb.page_size = 0x00001000"
"e dbg.gdb.retries = 10"
"e dbg.glibc.demangle = false"
"e dbg.glibc.fc_offset = 640"
"e dbg.glibc.ma_offset = 0"
"e dbg.glibc.main_arena = 0"
"e dbg.glibc.path = "
"e dbg.glibc.tcache = true"
"e dbg.glibc.version = "
"e dbg.hwbp = false"
"e dbg.libs = "
"e dbg.malloc = glibc"
"e dbg.maxsnapsize = 32M"
"e dbg.profile = "
"e dbg.rebase = true"
"e dbg.skipover = false"
"e dbg.slow = false"
"e dbg.status = false"
"e dbg.swstep = false"
"e dbg.threads = false"
"e dbg.trace = false"
"e dbg.trace.continue = true"
"e dbg.trace.eval = true"
"e dbg.trace.inrange = false"
"e dbg.trace.libs = true"
"e dbg.trace.tag = 0"
"e dbg.unlibs = "
"e dbg.verbose = false"
"e dbg.wrap = false"
"e diff.bare = false"
"e diff.from = 0"
"e diff.levenstein = false"
"e diff.sort = addr"
"e diff.to = 0"
"e emu.bb = false"
"e emu.lazy = false"
"e emu.pre = false"
"e emu.skip = ds"
"e emu.ssa = false"
"e emu.stack = false"
"e emu.str = false"
"e emu.str.flag = true"
"e emu.str.inv = true"
"e emu.str.lea = true"
"e emu.str.off = false"
"e emu.write = false"
"e esil.addr.size = 64"
"e esil.breakoninvalid = false"
"e esil.dfg.mapinfo = false"
"e esil.dfg.maps = false"
"e esil.exectrap = false"
"e esil.fillstack = "
"e esil.gotolimit = 0x00001000"
"e esil.iotrap = true"
"e esil.maxsteps = 0"
"e esil.mdev.range = "
"e esil.nonull = false"
"e esil.prestep = true"
"e esil.romem = false"
"e esil.stack.addr = 0x00100000"
"e esil.stack.depth = 256"
"e esil.stack.pattern = 0"
"e esil.stack.size = 0x000f0000"
"e esil.stats = false"
"e esil.timeout = 0"
"e esil.verbose = 0"
"e file.info = true"
"e file.loadalign = 0x00000400"
"e file.type = elf"
"e fs.cwd = /"
"e fs.view = normal"
"e graph.aeab = false"
"e graph.bb.maxwidth = 0"
"e graph.body = true"
"e graph.bubble = false"
"e graph.bytes = false"
"e graph.cmtright = false"
"e graph.comments = true"
"e graph.dotted = false"
"e graph.dummy = true"
"e graph.edges = 2"
"e graph.few = false"
"e graph.font = Courier"
"e graph.from = 0xffffffffffffffff"
"e graph.gv.current = false"
"e graph.gv.edge = "
"e graph.gv.format = gif"
"e graph.gv.graph = "
"e graph.gv.node = "
"e graph.gv.spline = "
"e graph.hints = true"
"e graph.invscroll = false"
"e graph.json.usenames = true"
"e graph.layout = 0"
"e graph.linemode = 1"
"e graph.mini = false"
"e graph.nodejmps = true"
"e graph.ntitles = true"
"e graph.offset = false"
"e graph.refs = false"
"e graph.scroll = 5"
"e graph.title = "
"e graph.to = 0xffffffffffffffff"
"e graph.trace = false"
"e graph.zoom = 0"
"e hex.align = false"
"e hex.ascii = true"
"e hex.bytes = true"
"e hex.cols = 16"
"e hex.comments = true"
"e hex.compact = false"
"e hex.depth = 5"
"e hex.flagsz = 0"
"e hex.hdroff = true"
"e hex.header = true"
"e hex.offset = true"
"e hex.onechar = false"
"e hex.pairs = true"
"e hex.section = false"
"e hex.stride = 0"
"e hex.style = false"
"e http.allow = "
"e http.auth = false"
"e http.authfile = "
"e http.authtok = r2admin:r2admin"
"e http.basepath = /"
"e http.bind = localhost"
"e http.browser = "
"e http.channel = false"
"e http.colon = false"
"e http.cors = false"
"e http.dietime = 0"
"e http.dirlist = false"
"e http.homeroot = /home/hanshi/.local/share//radare2/www"
"e http.index = index.html"
"e http.log = true"
"e http.logfile = "
"e http.maxport = 9999"
"e http.maxsize = 0"
"e http.port = 9090"
"e http.referer = "
"e http.root = /usr/local/share/radare2/5.9.3/www"
"e http.sandbox = true"
"e http.sync = "
"e http.timeout = 3"
"e http.ui = m"
"e http.upget = false"
"e http.upload = false"
"e http.uproot = /tmp"
"e http.uri = "
"e http.verbose = false"
"e hud.path = "
"e io.0xff = 255"
"e io.aslr = false"
"e io.autofd = true"
"e io.basemap = false"
"e io.cache = false"
"e io.cache.auto = false"
"e io.cache.nodup = false"
"e io.cache.read = true"
"e io.cache.write = true"
"e io.exec = true"
"e io.ff = true"
"e io.mask = 0"
"e io.overlay = true"
"e io.pava = false"
"e io.pcache = false"
"e io.pcache.read = false"
"e io.pcache.write = false"
"e io.unalloc = false"
"e io.unalloc.ch = ."
"e io.va = true"
"e key.S = "
"e key.f1 = "
"e key.f10 = "
"e key.f11 = "
"e key.f12 = "
"e key.f2 = "
"e key.f3 = "
"e key.f4 = "
"e key.f5 = "
"e key.f6 = "
"e key.f7 = "
"e key.f8 = "
"e key.f9 = "
"e key.s = "
"e lines.abs = false"
"e lines.from = 0"
"e lines.to = $s"
"e log.color = false"
"e log.cons = false"
"e log.file = "
"e log.filter = "
"e log.level = 4"
"e log.origin = false"
"e log.quiet = false"
"e log.source = false"
"e log.traplevel = 0"
"e log.ts = false"
"e pdb.autoload = 0"
"e pdb.extract = 1"
"e pdb.server = https://msdl.microsoft.com/download/symbols"
"e pdb.symstore = /home/hanshi/.local/share//radare2/pdb"
"e pdb.useragent = microsoft-symbol-server/6.11.0001.402"
"e prj.alwasyprompt = false"
"e prj.files = false"
"e prj.gpg = false"
"e prj.name = license"
"e prj.sandbox = false"
"e prj.vc = true"
"e prj.vc.message = "
"e prj.vc.type = git"
"e prj.zip = false"
"e r2dec.asm = false"
"e r2dec.blocks = false"
"e r2dec.casts = false"
"e r2dec.debug = false"
"e r2dec.highlight = default"
"e r2dec.paddr = false"
"e r2dec.slow = false"
"e r2dec.xrefs = false"
"e r2ghidra.casts = false"
"e r2ghidra.cmt.cpp = true"
"e r2ghidra.cmt.indent = 4"
"e r2ghidra.indent = 4"
"e r2ghidra.lang = "
"e r2ghidra.linelen = 120"
"e r2ghidra.maximplref = 2"
"e r2ghidra.rawptr = true"
"e r2ghidra.roprop = 0"
"e r2ghidra.sleighhome = /home/hanshi/.local/share/radare2/plugins/r2ghidra_sleigh"
"e r2ghidra.timeout = 0"
"e r2ghidra.vars = false"
"e r2ghidra.verbose = false"
"e rap.loop = true"
"e rop.comments = false"
"e rop.conditional = false"
"e rop.db = true"
"e rop.len = 5"
"e rop.sdb = false"
"e rop.subchains = false"
"e scr.analbar = false"
"e scr.bgfill = false"
"e scr.breaklines = false"
"e scr.breakword = "
"e scr.color = 1"
"e scr.color.args = true"
"e scr.color.bytes = true"
"e scr.color.grep = false"
"e scr.color.ophex = false"
"e scr.color.ops = true"
"e scr.color.pipe = false"
"e scr.cols = 0"
"e scr.cols.fix = 0"
"e scr.confirmquit = false"
"e scr.cursor = false"
"e scr.demo = false"
"e scr.dumpcols = false"
"e scr.echo = false"
"e scr.feedback = 1"
"e scr.fgets = false"
"e scr.flush = false"
"e scr.fps = false"
"e scr.gadgets = true"
"e scr.highlight = "
"e scr.highlight.grep = false"
"e scr.hist.block = true"
"e scr.hist.filter = true"
"e scr.hist.save = true"
"e scr.hist.size = 256"
"e scr.html = false"
"e scr.interactive = true"
"e scr.last = true"
"e scr.layout = "
"e scr.linesleep = 0"
"e scr.loopnl = false"
"e scr.maxpage = 0x00019000"
"e scr.maxtab = 0x00001000"
"e scr.nkey = flag"
"e scr.notch = 0"
"e scr.null = false"
"e scr.optimize = 0"
"e scr.pager = "
"e scr.pagesize = 1"
"e scr.panelborder = false"
"e scr.progressbar = false"
"e scr.prompt = true"
"e scr.prompt.code = false"
"e scr.prompt.file = false"
"e scr.prompt.flag = false"
"e scr.prompt.mode = false"
"e scr.prompt.popup = false"
"e scr.prompt.sect = false"
"e scr.prompt.tabhelp = true"
"e scr.prompt.vi = false"
"e scr.rainbow = false"
"e scr.randpal = false"
"e scr.responsive = false"
"e scr.rows = 0"
"e scr.rows.fix = 0"
"e scr.scrollbar = 0"
"e scr.slow = true"
"e scr.square = true"
"e scr.strconv = asciiesc"
"e scr.tee = "
"e scr.theme = default"
"e scr.timeout = 0"
"e scr.tts = false"
"e scr.utf8 = true"
"e scr.utf8.curvy = false"
"e scr.vtmode = 0"
"e scr.wheel = true"
"e scr.wheel.nkey = false"
"e scr.wheel.speed = 4"
"e scr.wideoff = false"
"e search.align = 0"
"e search.badpages = true"
"e search.chunk = 0"
"e search.contiguous = true"
"e search.distance = 0"
"e search.esilcombo = 8"
"e search.flags = true"
"e search.from = 0xffffffffffffffff"
"e search.in = io.maps"
"e search.kwidx = 0"
"e search.maxhits = 0"
"e search.named = false"
"e search.overlap = false"
"e search.prefix = hit"
"e search.show = true"
"e search.to = 0xffffffffffffffff"
"e search.verbose = false"
"e stack.annotated = false"
"e stack.bytes = true"
"e stack.delta = 0"
"e stack.reg = SP"
"e stack.size = 64"
"e str.escbslash = false"
"e tcp.islocal = false"
"e time.fmt = %Y-%m-%d %H:%M:%S %u"
"e time.zone = 0"
"e zign.autoload = false"
"e zign.bytes = true"
"e zign.diff.bthresh = 1.0"
"e zign.diff.gthresh = 1.0"
"e zign.graph = true"
"e zign.hash = true"
"e zign.mangled = false"
"e zign.maxsz = 500"
"e zign.mincc = 10"
"e zign.minsz = 16"
"e zign.offset = false"
"e zign.prefix = sign"
"e zign.refs = true"
"e zign.threshold = 0.0"
"e zign.types = true"
"e zoom.byte = h"
"e zoom.from = 0"
"e zoom.in = io.map"
"e zoom.maxsz = 512"
"e zoom.to = 0"
o "license" 0x00000000 r-x
om $d 0x00006b10 0x000002a1 0x00000000 r-- fmap.LOAD3
onnu null://119 rw-
onnu malloc://983040 rw-
om $d 0x00100000 0x000f0000 0x00000000 rw- mem.0x100000_0xf0000
omu 4 0x00004029 0x00000077 0x00000000 rw- mmap.LOAD3
omu 3 0x00003d88 0x000002a1 0x00002d88 r-- fmap.LOAD3
omu 3 0x00002000 0x00000194 0x00002000 r-- fmap.LOAD2
omu 3 0x00001000 0x00000611 0x00001000 r-x fmap.LOAD1
omu 3 0x00000000 0x000007f8 0x00000000 r-- fmap.LOAD0
omu 5 0x00100000 0x000f0000 0x00000000 rw- mem.0x100000_0xf0000
tcc rax amd64 (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4);
tcc rax amd64syscall (rdi, rsi, rdx, r10, r8, r9);
tcc rax:rdx dlang (rdi, rsi, rdx, rcx, r8d, r9d, stack);
tcc rax ms (rcx, rdx, r8, r9, stack);
tcc rax p9 (rbp, stack);
tcc rax reg (rdi, rsi, rdx, rcx);
tcc rax r13.swift (rdi, rsi, rdx, rcx, r8, r9, xmm0, xmm1, xmm2, xmm3, xmm4) r12;
# functions
fs functions
"f sym.imp.strncpy 11 0x000010b0"
"af+ 0x000010b0 sym.imp.strncpy f n"
afb+ 0x000010b0 0x000010b0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010b0
s 0x10b0
"afc amd64"
s-
axc 0x3fa0 0x10b4
afS 0 @ 0x10b0
"f sym.imp.puts 11 0x000010c0"
"af+ 0x000010c0 sym.imp.puts f n"
afb+ 0x000010c0 0x000010c0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010c0
s 0x10c0
"afc amd64"
s-
axc 0x3fa8 0x10c4
afS 0 @ 0x10c0
"f sym.imp.strlen 11 0x000010d0"
"af+ 0x000010d0 sym.imp.strlen f n"
afb+ 0x000010d0 0x000010d0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010d0
s 0x10d0
"afc amd64"
s-
axc 0x3fb0 0x10d4
afS 0 @ 0x10d0
"f sym.imp.__stack_chk_fail 11 0x000010e0"
"af+ 0x000010e0 sym.imp.__stack_chk_fail f n"
afb+ 0x000010e0 0x000010e0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010e0
s 0x10e0
"afc amd64"
s-
axc 0x3fb8 0x10e4
afS 0 @ 0x10e0
"f sym.imp.fgets 11 0x000010f0"
"af+ 0x000010f0 sym.imp.fgets f n"
afb+ 0x000010f0 0x000010f0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010f0
s 0x10f0
"afc amd64"
s-
axc 0x3fc0 0x10f4
afS 0 @ 0x10f0
"f sym.imp.exit 11 0x00001100"
"af+ 0x00001100 sym.imp.exit f n"
afb+ 0x00001100 0x00001100 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001100
s 0x1100
"afc amd64"
s-
axc 0x3fc8 0x1104
afS 0 @ 0x1100
"f sym.imp.__ctype_b_loc 11 0x00001110"
"af+ 0x00001110 sym.imp.__ctype_b_loc f n"
afb+ 0x00001110 0x00001110 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001110
s 0x1110
"afc amd64"
s-
axc 0x3fd0 0x1114
afS 0 @ 0x1110
"f entry0 37 0x00001120"
"af+ 0x00001120 entry0 f n"
afb+ 0x00001120 0x00001120 37 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001120
s 0x1120
"afc amd64"
s-
s 0x1120
"afvr rdx arg3 int64_t"
s-
axd 0x14ae 0x1138
axC 0x3fd8 0x113f
afS 8 @ 0x1120
"f main 342 0x000014ae"
"af+ 0x000014ae main f n"
afb+ 0x000014ae 0x000014ae 83 0x0000150b 0x00001501
afb+ 0x000014ae 0x00001501 10 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x000014ae 0x0000150b 7 0x0000153c 0x00001512
afb+ 0x000014ae 0x00001512 23 0x0000153c 0x00001529
afb+ 0x000014ae 0x00001529 19 0x0000153c 0xffffffffffffffff
afb+ 0x000014ae 0x0000153c 57 0x0000158e 0x00001575
afb+ 0x000014ae 0x00001575 25 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x000014ae 0x0000158e 11 0x000015a3 0x00001599
afb+ 0x000014ae 0x00001599 10 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x000014ae 0x000015a3 50 0x000015ee 0x000015d5
afb+ 0x000014ae 0x000015d5 25 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x000014ae 0x000015ee 22 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000014ae
s 0x14ae
"afc amd64"
s-
s 0x14ae
"afvb -8 input_len size_t"
s-
axd 0x2008 0x14ba
axC 0x10c0 0x14c4
axd 0x4040 0x14c9
axd 0x12 0x14d3
axd 0x4060 0x14d8
axC 0x10f0 0x14e2
axd 0x4060 0x14e7
axC 0x10d0 0x14f1
axc 0x150b 0x14ff
axC 0x1100 0x1506
axc 0x153c 0x1510
axd 0x4060 0x151a
axd 0xa 0x1525
axc 0x153c 0x1527
axd 0x4060 0x1531
axd 0x4060 0x1541
axd 0x4080 0x154b
axC 0x10b0 0x1555
axd 0x4088 0x155a
axd 0x4080 0x1561
axC 0x1209 0x156b
axd 0x1 0x1570
axc 0x158e 0x1573
axd 0x203b 0x1575
axC 0x10c0 0x157f
axC 0x1100 0x1589
axd 0x4068 0x158e
axd 0x2d 0x1595
axc 0x15a3 0x1597
axC 0x1100 0x159e
axd 0x4069 0x15a3
axd 0x4090 0x15b2
axC 0x10b0 0x15bc
axd 0x4090 0x15c1
axC 0x1345 0x15cb
axd 0x1 0x15d0
axc 0x15ee 0x15d3
axd 0x203b 0x15d5
axC 0x10c0 0x15df
axC 0x1100 0x15e9
axd 0x2040 0x15ee
axC 0x10c0 0x15f8
afS 24 @ 0x14ae
"f check1 316 0x00001209"
"af+ 0x00001209 check1 f n"
afb+ 0x00001209 0x00001209 43 0x000012e2 0xffffffffffffffff
afb+ 0x00001209 0x00001234 39 0x000012a9 0x0000125b
afb+ 0x00001209 0x0000125b 5 0x000012c6 0x00001260
afb+ 0x00001209 0x00001260 4 0x0000126b 0x00001264
afb+ 0x00001209 0x00001264 5 0x0000128b 0x00001269
afb+ 0x00001209 0x00001269 2 0x000012c6 0xffffffffffffffff
afb+ 0x00001209 0x0000126b 32 0x000012c6 0xffffffffffffffff
afb+ 0x00001209 0x0000128b 30 0x000012c6 0xffffffffffffffff
afb+ 0x00001209 0x000012a9 29 0x000012c6 0xffffffffffffffff
afb+ 0x00001209 0x000012c6 28 0x000012e2 0xffffffffffffffff
afb+ 0x00001209 0x000012e2 10 0x00001234 0x000012ec
afb+ 0x00001209 0x000012ec 9 0x00001324 0xffffffffffffffff
afb+ 0x00001209 0x000012f5 36 0x00001320 0x00001319
afb+ 0x00001209 0x00001319 7 0x0000132f 0xffffffffffffffff
afb+ 0x00001209 0x00001320 4 0x00001324 0xffffffffffffffff
afb+ 0x00001209 0x00001324 6 0x000012f5 0x0000132a
afb+ 0x00001209 0x0000132a 5 0x0000132f 0xffffffffffffffff
afb+ 0x00001209 0x0000132f 15 0x00001343 0x0000133e
afb+ 0x00001209 0x0000133e 5 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00001209 0x00001343 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001209
s 0x1209
"afc amd64"
s-
s 0x1209
"afvb -8 canary int64_t"
"afvb -16 var_10h int64_t"
"afvb -20 var_14h signed int64_t"
"afvb -24 counter signed int64_t"
"afvb -40 user_input_28h int64_t"
s-
s 0x1209
"afvr rdi user_input int64_t"
s-
axc 0x12e2 0x122f
axd 0x2 0x1256
axc 0x12a9 0x1259
axd 0x2 0x125b
axc 0x12c6 0x125e
axc 0x126b 0x1262
axd 0x1 0x1264
axc 0x128b 0x1267
axc 0x12c6 0x1269
axd 0x5a 0x127b
axc 0x12c6 0x1289
axc 0x12c6 0x12a7
axd 0x33 0x12d0
axc 0x1234 0x12e6
axc 0x1324 0x12f3
axd 0x4010 0x1307
axc 0x1320 0x1317
axc 0x132f 0x131e
axc 0x12f5 0x1328
axc 0x1343 0x133c
axC 0x10e0 0x133e
afS 56 @ 0x1209
"f check2 361 0x00001345"
"af+ 0x00001345 check2 f n"
afb+ 0x00001345 0x00001345 28 0x0000145f 0xffffffffffffffff
afb+ 0x00001345 0x00001361 49 0x000013df 0x00001392
afb+ 0x00001345 0x00001392 77 0x0000145b 0xffffffffffffffff
afb+ 0x00001345 0x000013df 49 0x0000145b 0x00001410
afb+ 0x00001345 0x00001410 75 0x0000145b 0xffffffffffffffff
afb+ 0x00001345 0x0000145b 4 0x0000145f 0xffffffffffffffff
afb+ 0x00001345 0x0000145f 10 0x00001361 0x00001469
afb+ 0x00001345 0x00001469 9 0x000014a1 0xffffffffffffffff
afb+ 0x00001345 0x00001472 36 0x0000149d 0x00001496
afb+ 0x00001345 0x00001496 7 0x000014ac 0xffffffffffffffff
afb+ 0x00001345 0x0000149d 4 0x000014a1 0xffffffffffffffff
afb+ 0x00001345 0x000014a1 6 0x00001472 0x000014a7
afb+ 0x00001345 0x000014a7 5 0x000014ac 0xffffffffffffffff
afb+ 0x00001345 0x000014ac 2 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001345
s 0x1345
"afc amd64"
s-
s 0x1345
"afvb -4 var_4h signed int64_t"
"afvb -8 counter signed int64_t"
"afvb -24 user_input_18h int64_t"
s-
s 0x1345
"afvr rdi user_input int64_t"
s-
axc 0x145f 0x135c
axC 0x1110 0x1361
axd 0x200 0x1389
axc 0x13df 0x1390
axd 0x5c 0x13a5
axc 0x145b 0x13dd
axC 0x1110 0x13df
axd 0x100 0x1407
axc 0x145b 0x140e
axd 0x30 0x1423
axc 0x1361 0x1463
axc 0x14a1 0x1470
axd 0x4020 0x1487
axc 0x149d 0x1494
axc 0x14ac 0x149b
axc 0x1472 0x14a5
afS 40 @ 0x1345
"f entry.init0 137 0x00001200"
"af+ 0x00001200 entry.init0 f n"
afb+ 0x00001200 0x00001180 36 0x000011b8 0x000011a4
afb+ 0x00001200 0x000011a4 12 0x000011b8 0x000011b0
afb+ 0x00001200 0x000011b0 2 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00001200 0x000011b8 1 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00001200 0x00001200 9 0x00001180 0xffffffffffffffff
afB 64 @ 0x00001200
s 0x1200
"afc amd64"
s-
axd 0x4030 0x1180
axd 0x4030 0x1187
axc 0x11b8 0x11a2
axd 0x3ff0 0x11a4
axc 0x11b8 0x11ae
axc 0x1180 0x1204
afS 0 @ 0x1200
"f entry.fini0 57 0x000011c0"
"af+ 0x000011c0 entry.fini0 f n"
afb+ 0x000011c0 0x000011c0 13 0x000011f8 0x000011cd
afb+ 0x000011c0 0x000011cd 14 0x000011e7 0x000011db
afb+ 0x000011c0 0x000011db 12 0x000011e7 0xffffffffffffffff
afb+ 0x000011c0 0x000011e7 14 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x000011c0 0x000011f8 1 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000011c0
s 0x11c0
"afc amd64"
s-
axd 0x4048 0x11c4
axc 0x11f8 0x11cb
axd 0x3ff8 0x11ce
axc 0x11e7 0x11d9
axd 0x4008 0x11db
axC 0x10a0 0x11e2
axC 0x1150 0x11e7
axd 0x4048 0x11ec
afS 8 @ 0x11c0
"f fcn.000010a0 11 0x000010a0"
"af+ 0x000010a0 fcn.000010a0 f n"
afb+ 0x000010a0 0x000010a0 11 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x000010a0
s 0x10a0
"afc amd64"
s-
axc 0x3ff8 0x10a4
afS 0 @ 0x10a0
"f fcn.00001150 41 0x00001150"
"af+ 0x00001150 fcn.00001150 f n"
afb+ 0x00001150 0x00001150 19 0x00001178 0x00001163
afb+ 0x00001150 0x00001163 12 0x00001178 0x0000116f
afb+ 0x00001150 0x0000116f 2 0xffffffffffffffff 0xffffffffffffffff
afb+ 0x00001150 0x00001178 1 0xffffffffffffffff 0xffffffffffffffff
afB 64 @ 0x00001150
s 0x1150
"afc amd64"
s-
axd 0x4030 0x1150
axd 0x4030 0x1157
axc 0x1178 0x1161
axd 0x3fe0 0x1163
axc 0x1178 0x116d
afS 0 @ 0x1150

# registers
fs+registers
f rax 8 0x00000000
f rbx 8 0x00000000
f rcx 8 0x00000000
f rdx 8 0x00000000
f rsi 8 0x00000000
f rdi 8 0x00000000
f r8 8 0x00000000
f r9 8 0x00000000
f r10 8 0x00000000
f r11 8 0x00000000
f r12 8 0x00000000
f r13 8 0x00000000
f r14 8 0x00000000
f r15 8 0x00000000
f rip 8 0x00001120
f rbp 8 0x00000000
f rflags 8 0x00000000
f rsp 8 0x00000000
fs-
aer rax = 0x00000000
aer rbx = 0x00000000
aer rcx = 0x00000000
aer rdx = 0x00000000
aer rsi = 0x00000000
aer rdi = 0x00000000
aer r8 = 0x00000000
aer r9 = 0x00000000
aer r10 = 0x00000000
aer r11 = 0x00000000
aer r12 = 0x00000000
aer r13 = 0x00000000
aer r14 = 0x00000000
aer r15 = 0x00000000
aer rip = 0x00001120
aer rbp = 0x00000000
aer rflags = 0x00000000
aer rsp = 0x00000000
# flags
fs sections
f section. 0 0x00000000 
f section..comment 43 0x00000000 
f section..shstrtab 266 0x00000000 
fs segments
f segment.LOAD0 2040 0x00000000 
f segment.GNU_STACK 0 0x00000000 
f segment.ehdr 64 0x00000000 
fs format
f elf_header 64 0x00000000 
fs registers
f rax 8 0x00000000 
f rbx 8 0x00000000 
f rcx 8 0x00000000 
f rdx 8 0x00000000 
f rsi 8 0x00000000 
f rdi 8 0x00000000 
f r8 8 0x00000000 
f r9 8 0x00000000 
f r10 8 0x00000000 
f r11 8 0x00000000 
f r12 8 0x00000000 
f r13 8 0x00000000 
f r14 8 0x00000000 
f r15 8 0x00000000 
f rflags 8 0x00000000 
f rbp 8 0x00000000 
f rsp 8 0x00000000 
fs segments
f segment.PHDR 728 0x00000040 
fs format
f elf_phdr 56 0x00000040 
fs sections
f section..interp 28 0x00000318 
fs segments
f segment.INTERP 28 0x00000318 
fs sections
f section..note.gnu.property 48 0x00000338 
fs segments
f segment.NOTE 48 0x00000338 
f segment.GNU_PROPERTY 48 0x00000338 
fs sections
f section..note.gnu.build_id 36 0x00000368 
fs segments
f segment.NOTE_1 68 0x00000368 
fs sections
f section..note.ABI_tag 32 0x0000038c 
f section..gnu.hash 40 0x000003b0 
f section..dynsym 336 0x000003d8 
f section..dynstr 224 0x00000528 
fs format
f elf_strtab 224 0x00000528 
fs sections
f section..gnu.version 28 0x00000608 
f section..gnu.version_r 80 0x00000628 
f section..rela.dyn 216 0x00000678 
f section..rela.plt 168 0x00000750 
f section..init 27 0x00001000 
fs segments
f segment.LOAD1 1553 0x00001000 
fs sections
f section..plt 128 0x00001020 
f section..plt.got 16 0x000010a0 
fs functions
f fcn.000010a0 11 0x000010a0 
fs sections
f section..plt.sec 112 0x000010b0 
fs imports
f sym.imp.strncpy 11 0x000010b0 
f sym.imp.puts 11 0x000010c0 
f sym.imp.strlen 11 0x000010d0 
f sym.imp.__stack_chk_fail 11 0x000010e0 
f sym.imp.fgets 11 0x000010f0 
f sym.imp.exit 11 0x00001100 
f sym.imp.__ctype_b_loc 11 0x00001110 
fs symbols
f entry0 37 0x00001120 
fs sections
f section..text 1252 0x00001120 
fs registers
f rip 8 0x00001120 
fs functions
f fcn.00001150 41 0x00001150 
fs symbols
f entry.fini0 57 0x000011c0 
f entry.init0 9 0x00001200 
fs functions
f check1 316 0x00001209 
f check2 361 0x00001345 
fs symbols
f main 342 0x000014ae 
fs sections
f section..fini 13 0x00001604 
f section..rodata 98 0x00002000 
fs segments
f segment.LOAD2 404 0x00002000 
fs strings
f str.Please_enter_your_license_key_to_use_this_program_ 51 0x00002008 
f str.Nope 5 0x0000203b 
f str.Congrats__Get_the_flag_on_remote. 34 0x00002040 
fs sections
f section..eh_frame_hdr 68 0x00002064 
fs segments
f segment.GNU_EH_FRAME 68 0x00002064 
fs sections
f section..eh_frame 236 0x000020a8 
fs format
f elf_shstrtab 266 0x00003054 
f elf_shdr 64 0x00003160 
fs sections
f section..init_array 8 0x00003d88 
fs segments
f segment.LOAD3 792 0x00003d88 
f segment.GNU_RELRO 632 0x00003d88 
fs sections
f section..fini_array 8 0x00003d90 
f section..dynamic 496 0x00003d98 
fs segments
f segment.DYNAMIC 496 0x00003d98 
fs sections
f section..got 120 0x00003f88 
fs relocs
f reloc.strncpy 8 0x00003fa0 
f reloc.puts 8 0x00003fa8 
f reloc.strlen 8 0x00003fb0 
f reloc.__stack_chk_fail 8 0x00003fb8 
f reloc.fgets 8 0x00003fc0 
f reloc.exit 8 0x00003fc8 
f reloc.__ctype_b_loc 8 0x00003fd0 
f reloc.__libc_start_main 8 0x00003fd8 
f reloc._ITM_deregisterTMCloneTable 8 0x00003fe0 
f reloc.__gmon_start__ 8 0x00003fe8 
f reloc._ITM_registerTMCloneTable 8 0x00003ff0 
f reloc.__cxa_finalize 8 0x00003ff8 
fs sections
f section..data 41 0x00004000 
fs strings
f str.Xsl3BDxP 9 0x00004010 
f str.mzXaPLzR 9 0x00004020 
fs sections
f section..bss 96 0x00004040 
fs relocs
f reloc.stdin 8 0x00004040 
fs symbols
f obj.stdin 8 0x00004040 
# meta
CCu base64:WzI4XSAtLS0tIHNlY3Rpb24gc2l6ZSAyNjYgbmFtZWQgLnNoc3RydGFi @ 0x00000000
CCu base64:WzAxXSAtci0tIHNlY3Rpb24gc2l6ZSAyOCBuYW1lZCAuaW50ZXJw @ 0x00000318
CCu base64:WzAyXSAtci0tIHNlY3Rpb24gc2l6ZSA0OCBuYW1lZCAubm90ZS5nbnUucHJvcGVydHk= @ 0x00000338
CCu base64:WzAzXSAtci0tIHNlY3Rpb24gc2l6ZSAzNiBuYW1lZCAubm90ZS5nbnUuYnVpbGQtaWQ= @ 0x00000368
CCu base64:WzA0XSAtci0tIHNlY3Rpb24gc2l6ZSAzMiBuYW1lZCAubm90ZS5BQkktdGFn @ 0x0000038c
CCu base64:WzA1XSAtci0tIHNlY3Rpb24gc2l6ZSA0MCBuYW1lZCAuZ251Lmhhc2g= @ 0x000003b0
CCu base64:WzA2XSAtci0tIHNlY3Rpb24gc2l6ZSAzMzYgbmFtZWQgLmR5bnN5bQ== @ 0x000003d8
CCu base64:WzA3XSAtci0tIHNlY3Rpb24gc2l6ZSAyMjQgbmFtZWQgLmR5bnN0cg== @ 0x00000528
Cs 15 @ 0x00000529 # __cxa_finalize
Cs 6 @ 0x00000538 # fgets
Cs 18 @ 0x0000053e # __libc_start_main
Cs 14 @ 0x00000550 # __ctype_b_loc
Cs 5 @ 0x0000055e # puts
Cs 8 @ 0x00000563 # strncpy
Cs 7 @ 0x0000056b # strlen
Cs 6 @ 0x00000572 # stdin
Cs 5 @ 0x00000578 # exit
Cs 17 @ 0x0000057d # __stack_chk_fail
Cs 10 @ 0x0000058e # libc.so.6
Cs 10 @ 0x00000598 # GLIBC_2.3
Cs 10 @ 0x000005a2 # GLIBC_2.4
Cs 12 @ 0x000005ac # GLIBC_2.2.5
Cs 11 @ 0x000005b8 # GLIBC_2.34
Cs 28 @ 0x000005c3 # _ITM_deregisterTMCloneTable
Cs 15 @ 0x000005df # __gmon_start__
Cs 26 @ 0x000005ee # _ITM_registerTMCloneTable
CCu base64:WzA4XSAtci0tIHNlY3Rpb24gc2l6ZSAyOCBuYW1lZCAuZ251LnZlcnNpb24= @ 0x00000608
CCu base64:WzA5XSAtci0tIHNlY3Rpb24gc2l6ZSA4MCBuYW1lZCAuZ251LnZlcnNpb25fcg== @ 0x00000628
CCu base64:WzEwXSAtci0tIHNlY3Rpb24gc2l6ZSAyMTYgbmFtZWQgLnJlbGEuZHlu @ 0x00000678
Cd 8 @ 0x00000678
Cd 8 @ 0x00000680
Cd 8 @ 0x00000688
Cd 8 @ 0x00000690
Cd 8 @ 0x00000698
Cd 8 @ 0x000006a0
Cd 8 @ 0x000006a8
Cd 8 @ 0x000006b0
Cd 8 @ 0x000006b8
Cd 8 @ 0x000006c0
Cd 8 @ 0x000006c8
Cd 8 @ 0x000006d0
Cd 8 @ 0x000006d8
Cd 8 @ 0x000006e0
Cd 8 @ 0x000006e8
Cd 8 @ 0x000006f0
Cd 8 @ 0x000006f8
Cd 8 @ 0x00000700
Cd 8 @ 0x00000708
Cd 8 @ 0x00000710
Cd 8 @ 0x00000718
Cd 8 @ 0x00000720
Cd 8 @ 0x00000728
Cd 8 @ 0x00000730
Cd 8 @ 0x00000738
Cd 8 @ 0x00000740
Cd 8 @ 0x00000748
CCu base64:WzExXSAtci0tIHNlY3Rpb24gc2l6ZSAxNjggbmFtZWQgLnJlbGEucGx0 @ 0x00000750
Cd 8 @ 0x00000750
Cd 8 @ 0x00000758
Cd 8 @ 0x00000760
Cd 8 @ 0x00000768
Cd 8 @ 0x00000770
Cd 8 @ 0x00000778
Cd 8 @ 0x00000780
Cd 8 @ 0x00000788
Cd 8 @ 0x00000790
Cd 8 @ 0x00000798
Cd 8 @ 0x000007a0
Cd 8 @ 0x000007a8
Cd 8 @ 0x000007b0
Cd 8 @ 0x000007b8
Cd 8 @ 0x000007c0
Cd 8 @ 0x000007c8
Cd 8 @ 0x000007d0
Cd 8 @ 0x000007d8
Cd 8 @ 0x000007e0
Cd 8 @ 0x000007e8
Cd 8 @ 0x000007f0
CCu base64:WzEyXSAtci14IHNlY3Rpb24gc2l6ZSAyNyBuYW1lZCAuaW5pdA== @ 0x00001000
CCu base64:WzEzXSAtci14IHNlY3Rpb24gc2l6ZSAxMjggbmFtZWQgLnBsdA== @ 0x00001020
CCu base64:WzE0XSAtci14IHNlY3Rpb24gc2l6ZSAxNiBuYW1lZCAucGx0LmdvdA== @ 0x000010a0
CCu base64:WzE1XSAtci14IHNlY3Rpb24gc2l6ZSAxMTIgbmFtZWQgLnBsdC5zZWM= @ 0x000010b0
CCu base64:WzE2XSAtci14IHNlY3Rpb24gc2l6ZSAxMjUyIG5hbWVkIC50ZXh0 @ 0x00001120
Ct arg3 @ 0x00001126
Ct arg1 @ 0x00001215
Ct arg1 @ 0x00001351
Ct const char *s @ 0x000014c1
Ct FILE *stream @ 0x000014d0
Ct int size @ 0x000014d3
Ct char *s @ 0x000014df
Ct const char *s @ 0x000014ee
Ct int status @ 0x00001501
Ct size_t  n @ 0x0000153c
Ct const char *src @ 0x00001548
Ct char *dest @ 0x00001552
Ct int64_t arg1 @ 0x00001568
Ct const char *s @ 0x0000157c
Ct int status @ 0x00001584
Ct int status @ 0x00001599
Ct size_t  n @ 0x000015aa
Ct const char *src @ 0x000015af
Ct char *dest @ 0x000015b9
Ct int64_t arg1 @ 0x000015c8
Ct const char *s @ 0x000015dc
Ct int status @ 0x000015e4
Ct const char *s @ 0x000015f5
CCu base64:WzE3XSAtci14IHNlY3Rpb24gc2l6ZSAxMyBuYW1lZCAuZmluaQ== @ 0x00001604
CCu base64:WzE4XSAtci0tIHNlY3Rpb24gc2l6ZSA5OCBuYW1lZCAucm9kYXRh @ 0x00002000
Cs 51 @ 0x00002008 # Please enter your license key to use this program!
Cs 5 @ 0x0000203b # Nope
Cs 34 @ 0x00002040 # Congrats! Get the flag on remote.
CCu base64:WzE5XSAtci0tIHNlY3Rpb24gc2l6ZSA2OCBuYW1lZCAuZWhfZnJhbWVfaGRy @ 0x00002064
CCu base64:WzIwXSAtci0tIHNlY3Rpb24gc2l6ZSAyMzYgbmFtZWQgLmVoX2ZyYW1l @ 0x000020a8
Cd 8 @ 0x00003d88
CCu base64:WzIxXSAtcnctIHNlY3Rpb24gc2l6ZSA4IG5hbWVkIC5pbml0X2FycmF5 @ 0x00003d88
Cd 8 @ 0x00003d90
CCu base64:WzIyXSAtcnctIHNlY3Rpb24gc2l6ZSA4IG5hbWVkIC5maW5pX2FycmF5 @ 0x00003d90
CCu base64:WzIzXSAtcnctIHNlY3Rpb24gc2l6ZSA0OTYgbmFtZWQgLmR5bmFtaWM= @ 0x00003d98
Cd 8 @ 0x00003d98
Cd 8 @ 0x00003da0
Cd 8 @ 0x00003da8
Cd 8 @ 0x00003db0
Cd 8 @ 0x00003db8
Cd 8 @ 0x00003dc0
Cd 8 @ 0x00003dc8
Cd 8 @ 0x00003dd0
Cd 8 @ 0x00003dd8
Cd 8 @ 0x00003de0
Cd 8 @ 0x00003de8
Cd 8 @ 0x00003df0
Cd 8 @ 0x00003df8
Cd 8 @ 0x00003e00
Cd 8 @ 0x00003e08
Cd 8 @ 0x00003e10
Cd 8 @ 0x00003e18
Cd 8 @ 0x00003e20
Cd 8 @ 0x00003e28
Cd 8 @ 0x00003e30
Cd 8 @ 0x00003e38
Cd 8 @ 0x00003e40
Cd 8 @ 0x00003e48
Cd 8 @ 0x00003e50
Cd 8 @ 0x00003e58
Cd 8 @ 0x00003e60
Cd 8 @ 0x00003e68
Cd 8 @ 0x00003e70
Cd 8 @ 0x00003e78
Cd 8 @ 0x00003e80
Cd 8 @ 0x00003e88
Cd 8 @ 0x00003e90
Cd 8 @ 0x00003e98
Cd 8 @ 0x00003ea0
Cd 8 @ 0x00003ea8
Cd 8 @ 0x00003eb0
Cd 8 @ 0x00003eb8
Cd 8 @ 0x00003ec0
Cd 8 @ 0x00003ec8
Cd 8 @ 0x00003ed0
Cd 8 @ 0x00003ed8
Cd 8 @ 0x00003ee0
Cd 8 @ 0x00003ee8
Cd 8 @ 0x00003ef0
Cd 8 @ 0x00003ef8
Cd 8 @ 0x00003f00
Cd 8 @ 0x00003f08
Cd 8 @ 0x00003f10
Cd 8 @ 0x00003f18
Cd 8 @ 0x00003f20
Cd 8 @ 0x00003f28
Cd 8 @ 0x00003f30
Cd 8 @ 0x00003f38
Cd 8 @ 0x00003f40
Cd 8 @ 0x00003f48
Cd 8 @ 0x00003f50
Cd 8 @ 0x00003f58
Cd 8 @ 0x00003f60
Cd 8 @ 0x00003f68
Cd 8 @ 0x00003f70
Cd 8 @ 0x00003f78
Cd 8 @ 0x00003f80
CCu base64:WzI0XSAtcnctIHNlY3Rpb24gc2l6ZSAxMjAgbmFtZWQgLmdvdA== @ 0x00003f88
Cd 8 @ 0x00003f88
Cd 8 @ 0x00003f90
Cd 8 @ 0x00003f98
Cd 8 @ 0x00003fa0
Cd 8 @ 0x00003fa8
Cd 8 @ 0x00003fb0
Cd 8 @ 0x00003fb8
Cd 8 @ 0x00003fc0
Cd 8 @ 0x00003fc8
Cd 8 @ 0x00003fd0
Cd 8 @ 0x00003fd8
Cd 8 @ 0x00003fe0
Cd 8 @ 0x00003fe8
Cd 8 @ 0x00003ff0
Cd 8 @ 0x00003ff8
CCu base64:WzI1XSAtcnctIHNlY3Rpb24gc2l6ZSA0MSBuYW1lZCAuZGF0YQ== @ 0x00004000
Cd 8 @ 0x00004008
Cs 9 @ 0x00004010 # Xsl3BDxP
Cs 9 @ 0x00004020 # mzXaPLzR
CCu base64:WzI2XSAtcnctIHNlY3Rpb24gc2l6ZSA5NiBuYW1lZCAuYnNz @ 0x00004040
Cd 8 @ 0x00004040
axd 0x3fe8 0x1008
axc 0x1016 0x1012
axc 0x3f98 0x1026
axc 0x1020 0x1039
axd 0x1 0x1044
axc 0x1020 0x1049
axd 0x2 0x1054
axc 0x1020 0x1059
axd 0x3 0x1064
axc 0x1020 0x1069
axd 0x4 0x1074
axc 0x1020 0x1079
axd 0x5 0x1084
axc 0x1020 0x1089
axd 0x6 0x1094
axc 0x1020 0x1099
axc 0x3ff8 0x10a4
axc 0x3fa0 0x10b4
axc 0x3fa8 0x10c4
axc 0x3fb0 0x10d4
axc 0x3fb8 0x10e4
axc 0x3fc0 0x10f4
axc 0x3fc8 0x1104
axc 0x3fd0 0x1114
axd 0x14ae 0x1138
axC 0x3fd8 0x113f
axd 0x4030 0x1150
axd 0x4030 0x1157
axc 0x1178 0x1161
axd 0x3fe0 0x1163
axc 0x1178 0x116d
axd 0x4030 0x1180
axd 0x4030 0x1187
axc 0x11b8 0x11a2
axd 0x3ff0 0x11a4
axc 0x11b8 0x11ae
axd 0x4048 0x11c4
axc 0x11f8 0x11cb
axd 0x3ff8 0x11ce
axc 0x11e7 0x11d9
axd 0x4008 0x11db
axC 0x10a0 0x11e2
axC 0x1150 0x11e7
axd 0x4048 0x11ec
axc 0x1180 0x1204
axc 0x12e2 0x122f
axd 0x2 0x1256
axc 0x12a9 0x1259
axd 0x2 0x125b
axc 0x12c6 0x125e
axc 0x126b 0x1262
axd 0x1 0x1264
axc 0x128b 0x1267
axc 0x12c6 0x1269
axd 0x5a 0x127b
axc 0x12c6 0x1289
axc 0x12c6 0x12a7
axd 0x33 0x12d0
axc 0x1234 0x12e6
axc 0x1324 0x12f3
axd 0x4010 0x1307
axc 0x1320 0x1317
axc 0x132f 0x131e
axc 0x12f5 0x1328
axc 0x1343 0x133c
axC 0x10e0 0x133e
axc 0x145f 0x135c
axC 0x1110 0x1361
axd 0x200 0x1389
axc 0x13df 0x1390
axd 0x5c 0x13a5
axc 0x145b 0x13dd
axC 0x1110 0x13df
axd 0x100 0x1407
axc 0x145b 0x140e
axd 0x30 0x1423
axc 0x1361 0x1463
axc 0x14a1 0x1470
axd 0x4020 0x1487
axc 0x149d 0x1494
axc 0x14ac 0x149b
axc 0x1472 0x14a5
axd 0x2008 0x14ba
axC 0x10c0 0x14c4
axd 0x4040 0x14c9
axd 0x12 0x14d3
axd 0x4060 0x14d8
axC 0x10f0 0x14e2
axd 0x4060 0x14e7
axC 0x10d0 0x14f1
axc 0x150b 0x14ff
axC 0x1100 0x1506
axc 0x153c 0x1510
axd 0x4060 0x151a
axd 0xa 0x1525
axc 0x153c 0x1527
axd 0x4060 0x1531
axd 0x4060 0x1541
axd 0x4080 0x154b
axC 0x10b0 0x1555
axd 0x4088 0x155a
axd 0x4080 0x1561
axC 0x1209 0x156b
axd 0x1 0x1570
axc 0x158e 0x1573
axd 0x203b 0x1575
axC 0x10c0 0x157f
axC 0x1100 0x1589
axd 0x4068 0x158e
axd 0x2d 0x1595
axc 0x15a3 0x1597
axC 0x1100 0x159e
axd 0x4069 0x15a3
axd 0x4090 0x15b2
axC 0x10b0 0x15bc
axd 0x4090 0x15c1
axC 0x1345 0x15cb
axd 0x1 0x15d0
axc 0x15ee 0x15d3
axd 0x203b 0x15d5
axC 0x10c0 0x15df
axC 0x1100 0x15e9
axd 0x2040 0x15ee
axC 0x10c0 0x15f8
# types
"tk *aligned_alloc=func"
"tk FILE=type"
"tk _Exit=func"
"tk __assert_fail=func"
"tk __bzero=func"
"tk __cxa_throw=func"
"tk __error=func"
"tk __libc_init=func"
"tk __libc_init_array=func"
"tk __libc_start_main=func"
"tk __maskrune=func"
"tk __stack_chk_fail=func"
"tk __tolower=func"
"tk __toupper=func"
"tk __uClibc_main=func"
"tk _exit=func"
"tk _sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF=func"
"tk abort=func"
"tk abs=func"
"tk access=func"
"tk acos=func"
"tk acosf=func"
"tk acosh=func"
"tk acoshf=func"
"tk acoshl=func"
"tk acosl=func"
"tk arc4random=func"
"tk asctime=func"
"tk asin=func"
"tk asinf=func"
"tk asinh=func"
"tk asinhf=func"
"tk asinhl=func"
"tk asinl=func"
"tk at_quick_exit=func"
"tk atan=func"
"tk atan2=func"
"tk atan2f=func"
"tk atan2l=func"
"tk atanf=func"
"tk atanh=func"
"tk atanhf=func"
"tk atanhl=func"
"tk atanl=func"
"tk atexit=func"
"tk atof=func"
"tk atoi=func"
"tk atol=func"
"tk atoll=func"
"tk basename=func"
"tk bind=func"
"tk bindtextdomain=func"
"tk bsearch=func"
"tk btowc=func"
"tk bzero=func"
"tk calloc=func"
"tk cbrt=func"
"tk cbrtf=func"
"tk cbrtl=func"
"tk ceil=func"
"tk ceilf=func"
"tk ceill=func"
"tk char=type"
"tk char *=type"
"tk char **=type"
"tk chmod=func"
"tk clearerr=func"
"tk clock=func"
"tk close=func"
"tk compat_mode=func"
"tk connect=func"
"tk copysign=func"
"tk copysignf=func"
"tk copysignl=func"
"tk cos=func"
"tk cosf=func"
"tk cosh=func"
"tk coshf=func"
"tk coshl=func"
"tk cosl=func"
"tk ctime=func"
"tk difftime=func"
"tk div=func"
"tk double=type"
"tk elf_class=enum"
"tk elf_data=enum"
"tk elf_hdr_version=enum"
"tk elf_machine=enum"
"tk elf_obj_version=enum"
"tk elf_p_flags=enum"
"tk elf_p_type=enum"
"tk elf_s_flags_64=enum"
"tk elf_s_type=enum"
"tk elf_type=enum"
"tk enum.elf_class=ELFCLASSNONE,ELFCLASS32,ELFCLASS64"
"tk enum.elf_class.0x0=ELFCLASSNONE"
"tk enum.elf_class.0x1=ELFCLASS32"
"tk enum.elf_class.0x2=ELFCLASS64"
"tk enum.elf_class.ELFCLASS32=0x1"
"tk enum.elf_class.ELFCLASS64=0x2"
"tk enum.elf_class.ELFCLASSNONE=0x0"
"tk enum.elf_data=ELFDATANONE,ELFDATA2LSB,ELFDATA2MSB"
"tk enum.elf_data.0x0=ELFDATANONE"
"tk enum.elf_data.0x1=ELFDATA2LSB"
"tk enum.elf_data.0x2=ELFDATA2MSB"
"tk enum.elf_data.ELFDATA2LSB=0x1"
"tk enum.elf_data.ELFDATA2MSB=0x2"
"tk enum.elf_data.ELFDATANONE=0x0"
"tk enum.elf_hdr_version=EV_NONE,EV_CURRENT"
"tk enum.elf_hdr_version.0x0=EV_NONE"
"tk enum.elf_hdr_version.0x1=EV_CURRENT"
"tk enum.elf_hdr_version.EV_CURRENT=0x1"
"tk enum.elf_hdr_version.EV_NONE=0x0"
"tk enum.elf_machine=EM_NONE,EM_M32,EM_SPARC,EM_386,EM_68K,EM_88K,EM_IAMCU,EM_860,EM_MIPS,EM_S370,EM_MIPS_RS3_LE,EM_RS6000,EM_PARISC,EM_nCUBE,EM_VPP500,EM_SPARC32PLUS,EM_960,EM_PPC,EM_PPC64,EM_S390,EM_SPU,EM_V800,EM_FR20,EM_RH32,EM_RCE,EM_ARM,EM_ALPHA,EM_SH,EM_SPARCV9,EM_TRICORE,EM_ARC,EM_H8_300,EM_H8_300H,EM_H8S,EM_H8_500,EM_IA_64,EM_MIPS_X,EM_COLDFIRE,EM_68HC12,EM_MMA,EM_PCP,EM_NCPU,EM_NDR1,EM_STARCORE,EM_ME16,EM_ST100,EM_TINYJ,EM_X86_64,EM_PDSP,EM_PDP10,EM_PDP11,EM_FX66,EM_ST9PLUS,EM_ST7,EM_68HC16,EM_68HC11,EM_68HC08,EM_68HC05,EM_SVX,EM_ST19,EM_VAX,EM_CRIS,EM_JAVELIN,EM_FIREPATH,EM_ZSP,EM_MMIX,EM_HUANY,EM_PRISM,EM_AVR,EM_FR30,EM_D10V,EM_D30V,EM_V850,EM_M32R,EM_MN10300,EM_MN10200,EM_PJ,EM_OPENRISC,EM_ARC_COMPACT,EM_XTENSA,EM_VIDEOCORE,EM_TMM_GPP,EM_NS32K,EM_TPC,EM_SNP1K,EM_ST200,EM_IP2K,EM_MAX,EM_CR,EM_F2MC16,EM_MSP430,EM_BLACKFIN,EM_SE_C33,EM_SEP,EM_ARCA,EM_UNICORE,EM_EXCESS,EM_DXP,EM_ALTERA_NIOS2,EM_CRX,EM_XGATE,EM_C166,EM_M16C,EM_DSPIC30F,EM_CE,EM_M32C,EM_TSK3000,EM_RS08,EM_SHARC,EM_ECOG2,EM_SCORE7,EM_DSP24,EM_VIDEOCORE3,EM_LATTICEMICO32,EM_SE_C17,EM_TI_C6000,EM_TI_C2000,EM_TI_C5500,EM_TI_ARP32,EM_TI_PRU,EM_MMDSP_PLUS,EM_CYPRESS_M8C,EM_R32C,EM_TRIMEDIA,EM_QDSP6,EM_8051,EM_STXP7X,EM_NDS32,EM_ECOG1X,EM_MAXQ30,EM_XIMO16,EM_MANIK,EM_CRAYNV2,EM_RX,EM_METAG,EM_MCST_ELBRUS,EM_ECOG16,EM_CR16,EM_ETPU,EM_SLE9X,EM_L10M,EM_K10M,EM_AARCH64,EM_AVR32,EM_STM8,EM_TILE64,EM_TILEPRO,EM_CUDA,EM_TILEGX,EM_CLOUDSHIELD,EM_COREA_1ST,EM_COREA_2ND,EM_ARC_COMPACT2,EM_OPEN8,EM_RL78,EM_VIDEOCORE5,EM_78KOR,EM_56800EX,EM_BA1,EM_BA2,EM_XCORE,EM_MCHP_PIC,EM_INTEL205,EM_INTEL206,EM_INTEL207,EM_INTEL208,EM_INTEL209,EM_KM32,EM_KMX32,EM_KMX16,EM_KMX8,EM_KVARC,EM_CDP,EM_COGE,EM_COOL,EM_NORC,EM_CSR_KALIMBA,EM_AMDGPU,EM_RISCV,EM_LANAI,EM_BPF,EM_CSKY,EM_KVX,EM_LOONGARCH"
"tk enum.elf_machine.0x0=EM_NONE"
"tk enum.elf_machine.0x1=EM_M32"
"tk enum.elf_machine.0x10=EM_nCUBE"
"tk enum.elf_machine.0x100=EM_KVX"
"tk enum.elf_machine.0x102=EM_LOONGARCH"
"tk enum.elf_machine.0x11=EM_VPP500"
"tk enum.elf_machine.0x12=EM_SPARC32PLUS"
"tk enum.elf_machine.0x13=EM_960"
"tk enum.elf_machine.0x14=EM_PPC"
"tk enum.elf_machine.0x15=EM_PPC64"
"tk enum.elf_machine.0x16=EM_S390"
"tk enum.elf_machine.0x17=EM_SPU"
"tk enum.elf_machine.0x2=EM_SPARC"
"tk enum.elf_machine.0x24=EM_V800"
"tk enum.elf_machine.0x25=EM_FR20"
"tk enum.elf_machine.0x26=EM_RH32"
"tk enum.elf_machine.0x27=EM_RCE"
"tk enum.elf_machine.0x28=EM_ARM"
"tk enum.elf_machine.0x29=EM_ALPHA"
"tk enum.elf_machine.0x2a=EM_SH"
"tk enum.elf_machine.0x2b=EM_SPARCV9"
"tk enum.elf_machine.0x2c=EM_TRICORE"
"tk enum.elf_machine.0x2d=EM_ARC"
"tk enum.elf_machine.0x2e=EM_H8_300"
"tk enum.elf_machine.0x2f=EM_H8_300H"
"tk enum.elf_machine.0x3=EM_386"
"tk enum.elf_machine.0x30=EM_H8S"
"tk enum.elf_machine.0x31=EM_H8_500"
"tk enum.elf_machine.0x32=EM_IA_64"
"tk enum.elf_machine.0x33=EM_MIPS_X"
"tk enum.elf_machine.0x34=EM_COLDFIRE"
"tk enum.elf_machine.0x35=EM_68HC12"
"tk enum.elf_machine.0x36=EM_MMA"
"tk enum.elf_machine.0x37=EM_PCP"
"tk enum.elf_machine.0x38=EM_NCPU"
"tk enum.elf_machine.0x39=EM_NDR1"
"tk enum.elf_machine.0x3a=EM_STARCORE"
"tk enum.elf_machine.0x3b=EM_ME16"
"tk enum.elf_machine.0x3c=EM_ST100"
"tk enum.elf_machine.0x3d=EM_TINYJ"
"tk enum.elf_machine.0x3e=EM_X86_64"
"tk enum.elf_machine.0x3f=EM_PDSP"
"tk enum.elf_machine.0x4=EM_68K"
"tk enum.elf_machine.0x40=EM_PDP10"
"tk enum.elf_machine.0x41=EM_PDP11"
"tk enum.elf_machine.0x42=EM_FX66"
"tk enum.elf_machine.0x43=EM_ST9PLUS"
"tk enum.elf_machine.0x44=EM_ST7"
"tk enum.elf_machine.0x45=EM_68HC16"
"tk enum.elf_machine.0x46=EM_68HC11"
"tk enum.elf_machine.0x47=EM_68HC08"
"tk enum.elf_machine.0x48=EM_68HC05"
"tk enum.elf_machine.0x49=EM_SVX"
"tk enum.elf_machine.0x4a=EM_ST19"
"tk enum.elf_machine.0x4b=EM_VAX"
"tk enum.elf_machine.0x4c=EM_CRIS"
"tk enum.elf_machine.0x4d=EM_JAVELIN"
"tk enum.elf_machine.0x4e=EM_FIREPATH"
"tk enum.elf_machine.0x4f=EM_ZSP"
"tk enum.elf_machine.0x5=EM_88K"
"tk enum.elf_machine.0x50=EM_MMIX"
"tk enum.elf_machine.0x51=EM_HUANY"
"tk enum.elf_machine.0x52=EM_PRISM"
"tk enum.elf_machine.0x53=EM_AVR"
"tk enum.elf_machine.0x54=EM_FR30"
"tk enum.elf_machine.0x55=EM_D10V"
"tk enum.elf_machine.0x56=EM_D30V"
"tk enum.elf_machine.0x57=EM_V850"
"tk enum.elf_machine.0x58=EM_M32R"
"tk enum.elf_machine.0x59=EM_MN10300"
"tk enum.elf_machine.0x5a=EM_MN10200"
"tk enum.elf_machine.0x5b=EM_PJ"
"tk enum.elf_machine.0x5c=EM_OPENRISC"
"tk enum.elf_machine.0x5d=EM_ARC_COMPACT"
"tk enum.elf_machine.0x5e=EM_XTENSA"
"tk enum.elf_machine.0x5f=EM_VIDEOCORE"
"tk enum.elf_machine.0x6=EM_IAMCU"
"tk enum.elf_machine.0x60=EM_TMM_GPP"
"tk enum.elf_machine.0x61=EM_NS32K"
"tk enum.elf_machine.0x62=EM_TPC"
"tk enum.elf_machine.0x63=EM_SNP1K"
"tk enum.elf_machine.0x64=EM_ST200"
"tk enum.elf_machine.0x65=EM_IP2K"
"tk enum.elf_machine.0x66=EM_MAX"
"tk enum.elf_machine.0x67=EM_CR"
"tk enum.elf_machine.0x68=EM_F2MC16"
"tk enum.elf_machine.0x69=EM_MSP430"
"tk enum.elf_machine.0x6a=EM_BLACKFIN"
"tk enum.elf_machine.0x6b=EM_SE_C33"
"tk enum.elf_machine.0x6c=EM_SEP"
"tk enum.elf_machine.0x6d=EM_ARCA"
"tk enum.elf_machine.0x6e=EM_UNICORE"
"tk enum.elf_machine.0x6f=EM_EXCESS"
"tk enum.elf_machine.0x7=EM_860"
"tk enum.elf_machine.0x70=EM_DXP"
"tk enum.elf_machine.0x71=EM_ALTERA_NIOS2"
"tk enum.elf_machine.0x72=EM_CRX"
"tk enum.elf_machine.0x73=EM_XGATE"
"tk enum.elf_machine.0x74=EM_C166"
"tk enum.elf_machine.0x75=EM_M16C"
"tk enum.elf_machine.0x76=EM_DSPIC30F"
"tk enum.elf_machine.0x77=EM_CE"
"tk enum.elf_machine.0x78=EM_M32C"
"tk enum.elf_machine.0x8=EM_MIPS"
"tk enum.elf_machine.0x83=EM_TSK3000"
"tk enum.elf_machine.0x84=EM_RS08"
"tk enum.elf_machine.0x85=EM_SHARC"
"tk enum.elf_machine.0x86=EM_ECOG2"
"tk enum.elf_machine.0x87=EM_SCORE7"
"tk enum.elf_machine.0x88=EM_DSP24"
"tk enum.elf_machine.0x89=EM_VIDEOCORE3"
"tk enum.elf_machine.0x8a=EM_LATTICEMICO32"
"tk enum.elf_machine.0x8b=EM_SE_C17"
"tk enum.elf_machine.0x8c=EM_TI_C6000"
"tk enum.elf_machine.0x8d=EM_TI_C2000"
"tk enum.elf_machine.0x8e=EM_TI_C5500"
"tk enum.elf_machine.0x8f=EM_TI_ARP32"
"tk enum.elf_machine.0x9=EM_S370"
"tk enum.elf_machine.0x90=EM_TI_PRU"
"tk enum.elf_machine.0xa=EM_MIPS_RS3_LE"
"tk enum.elf_machine.0xa0=EM_MMDSP_PLUS"
"tk enum.elf_machine.0xa1=EM_CYPRESS_M8C"
"tk enum.elf_machine.0xa2=EM_R32C"
"tk enum.elf_machine.0xa3=EM_TRIMEDIA"
"tk enum.elf_machine.0xa4=EM_QDSP6"
"tk enum.elf_machine.0xa5=EM_8051"
"tk enum.elf_machine.0xa6=EM_STXP7X"
"tk enum.elf_machine.0xa7=EM_NDS32"
"tk enum.elf_machine.0xa8=EM_ECOG1X"
"tk enum.elf_machine.0xa9=EM_MAXQ30"
"tk enum.elf_machine.0xaa=EM_XIMO16"
"tk enum.elf_machine.0xab=EM_MANIK"
"tk enum.elf_machine.0xac=EM_CRAYNV2"
"tk enum.elf_machine.0xad=EM_RX"
"tk enum.elf_machine.0xae=EM_METAG"
"tk enum.elf_machine.0xaf=EM_MCST_ELBRUS"
"tk enum.elf_machine.0xb=EM_RS6000"
"tk enum.elf_machine.0xb0=EM_ECOG16"
"tk enum.elf_machine.0xb1=EM_CR16"
"tk enum.elf_machine.0xb2=EM_ETPU"
"tk enum.elf_machine.0xb3=EM_SLE9X"
"tk enum.elf_machine.0xb4=EM_L10M"
"tk enum.elf_machine.0xb5=EM_K10M"
"tk enum.elf_machine.0xb7=EM_AARCH64"
"tk enum.elf_machine.0xb9=EM_AVR32"
"tk enum.elf_machine.0xba=EM_STM8"
"tk enum.elf_machine.0xbb=EM_TILE64"
"tk enum.elf_machine.0xbc=EM_TILEPRO"
"tk enum.elf_machine.0xbe=EM_CUDA"
"tk enum.elf_machine.0xbf=EM_TILEGX"
"tk enum.elf_machine.0xc0=EM_CLOUDSHIELD"
"tk enum.elf_machine.0xc1=EM_COREA_1ST"
"tk enum.elf_machine.0xc2=EM_COREA_2ND"
"tk enum.elf_machine.0xc3=EM_ARC_COMPACT2"
"tk enum.elf_machine.0xc4=EM_OPEN8"
"tk enum.elf_machine.0xc5=EM_RL78"
"tk enum.elf_machine.0xc6=EM_VIDEOCORE5"
"tk enum.elf_machine.0xc7=EM_78KOR"
"tk enum.elf_machine.0xc8=EM_56800EX"
"tk enum.elf_machine.0xc9=EM_BA1"
"tk enum.elf_machine.0xca=EM_BA2"
"tk enum.elf_machine.0xcb=EM_XCORE"
"tk enum.elf_machine.0xcc=EM_MCHP_PIC"
"tk enum.elf_machine.0xcd=EM_INTEL205"
"tk enum.elf_machine.0xce=EM_INTEL206"
"tk enum.elf_machine.0xcf=EM_INTEL207"
"tk enum.elf_machine.0xd0=EM_INTEL208"
"tk enum.elf_machine.0xd1=EM_INTEL209"
"tk enum.elf_machine.0xd2=EM_KM32"
"tk enum.elf_machine.0xd3=EM_KMX32"
"tk enum.elf_machine.0xd4=EM_KMX16"
"tk enum.elf_machine.0xd5=EM_KMX8"
"tk enum.elf_machine.0xd6=EM_KVARC"
"tk enum.elf_machine.0xd7=EM_CDP"
"tk enum.elf_machine.0xd8=EM_COGE"
"tk enum.elf_machine.0xd9=EM_COOL"
"tk enum.elf_machine.0xda=EM_NORC"
"tk enum.elf_machine.0xdb=EM_CSR_KALIMBA"
"tk enum.elf_machine.0xe0=EM_AMDGPU"
"tk enum.elf_machine.0xf=EM_PARISC"
"tk enum.elf_machine.0xf3=EM_RISCV"
"tk enum.elf_machine.0xf4=EM_LANAI"
"tk enum.elf_machine.0xf7=EM_BPF"
"tk enum.elf_machine.0xfc=EM_CSKY"
"tk enum.elf_machine.EM_386=0x3"
"tk enum.elf_machine.EM_56800EX=0xc8"
"tk enum.elf_machine.EM_68HC05=0x48"
"tk enum.elf_machine.EM_68HC08=0x47"
"tk enum.elf_machine.EM_68HC11=0x46"
"tk enum.elf_machine.EM_68HC12=0x35"
"tk enum.elf_machine.EM_68HC16=0x45"
"tk enum.elf_machine.EM_68K=0x4"
"tk enum.elf_machine.EM_78KOR=0xc7"
"tk enum.elf_machine.EM_8051=0xa5"
"tk enum.elf_machine.EM_860=0x7"
"tk enum.elf_machine.EM_88K=0x5"
"tk enum.elf_machine.EM_960=0x13"
"tk enum.elf_machine.EM_AARCH64=0xb7"
"tk enum.elf_machine.EM_ALPHA=0x29"
"tk enum.elf_machine.EM_ALTERA_NIOS2=0x71"
"tk enum.elf_machine.EM_AMDGPU=0xe0"
"tk enum.elf_machine.EM_ARC=0x2d"
"tk enum.elf_machine.EM_ARCA=0x6d"
"tk enum.elf_machine.EM_ARC_COMPACT=0x5d"
"tk enum.elf_machine.EM_ARC_COMPACT2=0xc3"
"tk enum.elf_machine.EM_ARM=0x28"
"tk enum.elf_machine.EM_AVR=0x53"
"tk enum.elf_machine.EM_AVR32=0xb9"
"tk enum.elf_machine.EM_BA1=0xc9"
"tk enum.elf_machine.EM_BA2=0xca"
"tk enum.elf_machine.EM_BLACKFIN=0x6a"
"tk enum.elf_machine.EM_BPF=0xf7"
"tk enum.elf_machine.EM_C166=0x74"
"tk enum.elf_machine.EM_CDP=0xd7"
"tk enum.elf_machine.EM_CE=0x77"
"tk enum.elf_machine.EM_CLOUDSHIELD=0xc0"
"tk enum.elf_machine.EM_COGE=0xd8"
"tk enum.elf_machine.EM_COLDFIRE=0x34"
"tk enum.elf_machine.EM_COOL=0xd9"
"tk enum.elf_machine.EM_COREA_1ST=0xc1"
"tk enum.elf_machine.EM_COREA_2ND=0xc2"
"tk enum.elf_machine.EM_CR=0x67"
"tk enum.elf_machine.EM_CR16=0xb1"
"tk enum.elf_machine.EM_CRAYNV2=0xac"
"tk enum.elf_machine.EM_CRIS=0x4c"
"tk enum.elf_machine.EM_CRX=0x72"
"tk enum.elf_machine.EM_CSKY=0xfc"
"tk enum.elf_machine.EM_CSR_KALIMBA=0xdb"
"tk enum.elf_machine.EM_CUDA=0xbe"
"tk enum.elf_machine.EM_CYPRESS_M8C=0xa1"
"tk enum.elf_machine.EM_D10V=0x55"
"tk enum.elf_machine.EM_D30V=0x56"
"tk enum.elf_machine.EM_DSP24=0x88"
"tk enum.elf_machine.EM_DSPIC30F=0x76"
"tk enum.elf_machine.EM_DXP=0x70"
"tk enum.elf_machine.EM_ECOG16=0xb0"
"tk enum.elf_machine.EM_ECOG1X=0xa8"
"tk enum.elf_machine.EM_ECOG2=0x86"
"tk enum.elf_machine.EM_ETPU=0xb2"
"tk enum.elf_machine.EM_EXCESS=0x6f"
"tk enum.elf_machine.EM_F2MC16=0x68"
"tk enum.elf_machine.EM_FIREPATH=0x4e"
"tk enum.elf_machine.EM_FR20=0x25"
"tk enum.elf_machine.EM_FR30=0x54"
"tk enum.elf_machine.EM_FX66=0x42"
"tk enum.elf_machine.EM_H8S=0x30"
"tk enum.elf_machine.EM_H8_300=0x2e"
"tk enum.elf_machine.EM_H8_300H=0x2f"
"tk enum.elf_machine.EM_H8_500=0x31"
"tk enum.elf_machine.EM_HUANY=0x51"
"tk enum.elf_machine.EM_IAMCU=0x6"
"tk enum.elf_machine.EM_IA_64=0x32"
"tk enum.elf_machine.EM_INTEL205=0xcd"
"tk enum.elf_machine.EM_INTEL206=0xce"
"tk enum.elf_machine.EM_INTEL207=0xcf"
"tk enum.elf_machine.EM_INTEL208=0xd0"
"tk enum.elf_machine.EM_INTEL209=0xd1"
"tk enum.elf_machine.EM_IP2K=0x65"
"tk enum.elf_machine.EM_JAVELIN=0x4d"
"tk enum.elf_machine.EM_K10M=0xb5"
"tk enum.elf_machine.EM_KM32=0xd2"
"tk enum.elf_machine.EM_KMX16=0xd4"
"tk enum.elf_machine.EM_KMX32=0xd3"
"tk enum.elf_machine.EM_KMX8=0xd5"
"tk enum.elf_machine.EM_KVARC=0xd6"
"tk enum.elf_machine.EM_KVX=0x100"
"tk enum.elf_machine.EM_L10M=0xb4"
"tk enum.elf_machine.EM_LANAI=0xf4"
"tk enum.elf_machine.EM_LATTICEMICO32=0x8a"
"tk enum.elf_machine.EM_LOONGARCH=0x102"
"tk enum.elf_machine.EM_M16C=0x75"
"tk enum.elf_machine.EM_M32=0x1"
"tk enum.elf_machine.EM_M32C=0x78"
"tk enum.elf_machine.EM_M32R=0x58"
"tk enum.elf_machine.EM_MANIK=0xab"
"tk enum.elf_machine.EM_MAX=0x66"
"tk enum.elf_machine.EM_MAXQ30=0xa9"
"tk enum.elf_machine.EM_MCHP_PIC=0xcc"
"tk enum.elf_machine.EM_MCST_ELBRUS=0xaf"
"tk enum.elf_machine.EM_ME16=0x3b"
"tk enum.elf_machine.EM_METAG=0xae"
"tk enum.elf_machine.EM_MIPS=0x8"
"tk enum.elf_machine.EM_MIPS_RS3_LE=0xa"
"tk enum.elf_machine.EM_MIPS_X=0x33"
"tk enum.elf_machine.EM_MMA=0x36"
"tk enum.elf_machine.EM_MMDSP_PLUS=0xa0"
"tk enum.elf_machine.EM_MMIX=0x50"
"tk enum.elf_machine.EM_MN10200=0x5a"
"tk enum.elf_machine.EM_MN10300=0x59"
"tk enum.elf_machine.EM_MSP430=0x69"
"tk enum.elf_machine.EM_NCPU=0x38"
"tk enum.elf_machine.EM_NDR1=0x39"
"tk enum.elf_machine.EM_NDS32=0xa7"
"tk enum.elf_machine.EM_NONE=0x0"
"tk enum.elf_machine.EM_NORC=0xda"
"tk enum.elf_machine.EM_NS32K=0x61"
"tk enum.elf_machine.EM_OPEN8=0xc4"
"tk enum.elf_machine.EM_OPENRISC=0x5c"
"tk enum.elf_machine.EM_PARISC=0xf"
"tk enum.elf_machine.EM_PCP=0x37"
"tk enum.elf_machine.EM_PDP10=0x40"
"tk enum.elf_machine.EM_PDP11=0x41"
"tk enum.elf_machine.EM_PDSP=0x3f"
"tk enum.elf_machine.EM_PJ=0x5b"
"tk enum.elf_machine.EM_PPC=0x14"
"tk enum.elf_machine.EM_PPC64=0x15"
"tk enum.elf_machine.EM_PRISM=0x52"
"tk enum.elf_machine.EM_QDSP6=0xa4"
"tk enum.elf_machine.EM_R32C=0xa2"
"tk enum.elf_machine.EM_RCE=0x27"
"tk enum.elf_machine.EM_RH32=0x26"
"tk enum.elf_machine.EM_RISCV=0xf3"
"tk enum.elf_machine.EM_RL78=0xc5"
"tk enum.elf_machine.EM_RS08=0x84"
"tk enum.elf_machine.EM_RS6000=0xb"
"tk enum.elf_machine.EM_RX=0xad"
"tk enum.elf_machine.EM_S370=0x9"
"tk enum.elf_machine.EM_S390=0x16"
"tk enum.elf_machine.EM_SCORE7=0x87"
"tk enum.elf_machine.EM_SEP=0x6c"
"tk enum.elf_machine.EM_SE_C17=0x8b"
"tk enum.elf_machine.EM_SE_C33=0x6b"
"tk enum.elf_machine.EM_SH=0x2a"
"tk enum.elf_machine.EM_SHARC=0x85"
"tk enum.elf_machine.EM_SLE9X=0xb3"
"tk enum.elf_machine.EM_SNP1K=0x63"
"tk enum.elf_machine.EM_SPARC=0x2"
"tk enum.elf_machine.EM_SPARC32PLUS=0x12"
"tk enum.elf_machine.EM_SPARCV9=0x2b"
"tk enum.elf_machine.EM_SPU=0x17"
"tk enum.elf_machine.EM_ST100=0x3c"
"tk enum.elf_machine.EM_ST19=0x4a"
"tk enum.elf_machine.EM_ST200=0x64"
"tk enum.elf_machine.EM_ST7=0x44"
"tk enum.elf_machine.EM_ST9PLUS=0x43"
"tk enum.elf_machine.EM_STARCORE=0x3a"
"tk enum.elf_machine.EM_STM8=0xba"
"tk enum.elf_machine.EM_STXP7X=0xa6"
"tk enum.elf_machine.EM_SVX=0x49"
"tk enum.elf_machine.EM_TILE64=0xbb"
"tk enum.elf_machine.EM_TILEGX=0xbf"
"tk enum.elf_machine.EM_TILEPRO=0xbc"
"tk enum.elf_machine.EM_TINYJ=0x3d"
"tk enum.elf_machine.EM_TI_ARP32=0x8f"
"tk enum.elf_machine.EM_TI_C2000=0x8d"
"tk enum.elf_machine.EM_TI_C5500=0x8e"
"tk enum.elf_machine.EM_TI_C6000=0x8c"
"tk enum.elf_machine.EM_TI_PRU=0x90"
"tk enum.elf_machine.EM_TMM_GPP=0x60"
"tk enum.elf_machine.EM_TPC=0x62"
"tk enum.elf_machine.EM_TRICORE=0x2c"
"tk enum.elf_machine.EM_TRIMEDIA=0xa3"
"tk enum.elf_machine.EM_TSK3000=0x83"
"tk enum.elf_machine.EM_UNICORE=0x6e"
"tk enum.elf_machine.EM_V800=0x24"
"tk enum.elf_machine.EM_V850=0x57"
"tk enum.elf_machine.EM_VAX=0x4b"
"tk enum.elf_machine.EM_VIDEOCORE=0x5f"
"tk enum.elf_machine.EM_VIDEOCORE3=0x89"
"tk enum.elf_machine.EM_VIDEOCORE5=0xc6"
"tk enum.elf_machine.EM_VPP500=0x11"
"tk enum.elf_machine.EM_X86_64=0x3e"
"tk enum.elf_machine.EM_XCORE=0xcb"
"tk enum.elf_machine.EM_XGATE=0x73"
"tk enum.elf_machine.EM_XIMO16=0xaa"
"tk enum.elf_machine.EM_XTENSA=0x5e"
"tk enum.elf_machine.EM_ZSP=0x4f"
"tk enum.elf_machine.EM_nCUBE=0x10"
"tk enum.elf_obj_version=EV_NONE,EV_CURRENT"
"tk enum.elf_obj_version.0x0=EV_NONE"
"tk enum.elf_obj_version.0x1=EV_CURRENT"
"tk enum.elf_obj_version.EV_CURRENT=0x1"
"tk enum.elf_obj_version.EV_NONE=0x0"
"tk enum.elf_p_flags=PF_None,PF_Exec,PF_Write,PF_Write_Exec,PF_Read,PF_Read_Exec,PF_Read_Write,PF_Read_Write_Exec"
"tk enum.elf_p_flags.0x0=PF_None"
"tk enum.elf_p_flags.0x1=PF_Exec"
"tk enum.elf_p_flags.0x2=PF_Write"
"tk enum.elf_p_flags.0x3=PF_Write_Exec"
"tk enum.elf_p_flags.0x4=PF_Read"
"tk enum.elf_p_flags.0x5=PF_Read_Exec"
"tk enum.elf_p_flags.0x6=PF_Read_Write"
"tk enum.elf_p_flags.0x7=PF_Read_Write_Exec"
"tk enum.elf_p_flags.PF_Exec=0x1"
"tk enum.elf_p_flags.PF_None=0x0"
"tk enum.elf_p_flags.PF_Read=0x4"
"tk enum.elf_p_flags.PF_Read_Exec=0x5"
"tk enum.elf_p_flags.PF_Read_Write=0x6"
"tk enum.elf_p_flags.PF_Read_Write_Exec=0x7"
"tk enum.elf_p_flags.PF_Write=0x2"
"tk enum.elf_p_flags.PF_Write_Exec=0x3"
"tk enum.elf_p_type=PT_NULL,PT_LOAD,PT_DYNAMIC,PT_INTERP,PT_NOTE,PT_SHLIB,PT_PHDR,PT_LOOS,PT_HIOS,PT_LOPROC,PT_HIPROC"
"tk enum.elf_p_type.0x0=PT_NULL"
"tk enum.elf_p_type.0x1=PT_LOAD"
"tk enum.elf_p_type.0x2=PT_DYNAMIC"
"tk enum.elf_p_type.0x3=PT_INTERP"
"tk enum.elf_p_type.0x4=PT_NOTE"
"tk enum.elf_p_type.0x5=PT_SHLIB"
"tk enum.elf_p_type.0x6=PT_PHDR"
"tk enum.elf_p_type.0x60000000=PT_LOOS"
"tk enum.elf_p_type.0x6fffffff=PT_HIOS"
"tk enum.elf_p_type.0x70000000=PT_LOPROC"
"tk enum.elf_p_type.0x7fffffff=PT_HIPROC"
"tk enum.elf_p_type.PT_DYNAMIC=0x2"
"tk enum.elf_p_type.PT_HIOS=0x6fffffff"
"tk enum.elf_p_type.PT_HIPROC=0x7fffffff"
"tk enum.elf_p_type.PT_INTERP=0x3"
"tk enum.elf_p_type.PT_LOAD=0x1"
"tk enum.elf_p_type.PT_LOOS=0x60000000"
"tk enum.elf_p_type.PT_LOPROC=0x70000000"
"tk enum.elf_p_type.PT_NOTE=0x4"
"tk enum.elf_p_type.PT_NULL=0x0"
"tk enum.elf_p_type.PT_PHDR=0x6"
"tk enum.elf_p_type.PT_SHLIB=0x5"
"tk enum.elf_s_flags_64=SF64_None,SF64_Exec,SF64_Alloc,SF64_Alloc_Exec,SF64_Write,SF64_Write_Exec,SF64_Write_Alloc,SF64_Write_Alloc_Exec"
"tk enum.elf_s_flags_64.0x0=SF64_None"
"tk enum.elf_s_flags_64.0x1=SF64_Exec"
"tk enum.elf_s_flags_64.0x2=SF64_Alloc"
"tk enum.elf_s_flags_64.0x3=SF64_Alloc_Exec"
"tk enum.elf_s_flags_64.0x4=SF64_Write"
"tk enum.elf_s_flags_64.0x5=SF64_Write_Exec"
"tk enum.elf_s_flags_64.0x6=SF64_Write_Alloc"
"tk enum.elf_s_flags_64.0x7=SF64_Write_Alloc_Exec"
"tk enum.elf_s_flags_64.SF64_Alloc=0x2"
"tk enum.elf_s_flags_64.SF64_Alloc_Exec=0x3"
"tk enum.elf_s_flags_64.SF64_Exec=0x1"
"tk enum.elf_s_flags_64.SF64_None=0x0"
"tk enum.elf_s_flags_64.SF64_Write=0x4"
"tk enum.elf_s_flags_64.SF64_Write_Alloc=0x6"
"tk enum.elf_s_flags_64.SF64_Write_Alloc_Exec=0x7"
"tk enum.elf_s_flags_64.SF64_Write_Exec=0x5"
"tk enum.elf_s_type=SHT_NULL,SHT_PROGBITS,SHT_SYMTAB,SHT_STRTAB,SHT_RELA,SHT_HASH,SHT_DYNAMIC,SHT_NOTE,SHT_NOBITS,SHT_REL,SHT_SHLIB,SHT_DYNSYM,SHT_LOOS,SHT_HIOS,SHT_LOPROC,SHT_HIPROC"
"tk enum.elf_s_type.0x0=SHT_NULL"
"tk enum.elf_s_type.0x1=SHT_PROGBITS"
"tk enum.elf_s_type.0x2=SHT_SYMTAB"
"tk enum.elf_s_type.0x3=SHT_STRTAB"
"tk enum.elf_s_type.0x4=SHT_RELA"
"tk enum.elf_s_type.0x5=SHT_HASH"
"tk enum.elf_s_type.0x6=SHT_DYNAMIC"
"tk enum.elf_s_type.0x60000000=SHT_LOOS"
"tk enum.elf_s_type.0x6fffffff=SHT_HIOS"
"tk enum.elf_s_type.0x7=SHT_NOTE"
"tk enum.elf_s_type.0x70000000=SHT_LOPROC"
"tk enum.elf_s_type.0x7fffffff=SHT_HIPROC"
"tk enum.elf_s_type.0x8=SHT_NOBITS"
"tk enum.elf_s_type.0x9=SHT_REL"
"tk enum.elf_s_type.0xa=SHT_SHLIB"
"tk enum.elf_s_type.0xb=SHT_DYNSYM"
"tk enum.elf_s_type.SHT_DYNAMIC=0x6"
"tk enum.elf_s_type.SHT_DYNSYM=0xb"
"tk enum.elf_s_type.SHT_HASH=0x5"
"tk enum.elf_s_type.SHT_HIOS=0x6fffffff"
"tk enum.elf_s_type.SHT_HIPROC=0x7fffffff"
"tk enum.elf_s_type.SHT_LOOS=0x60000000"
"tk enum.elf_s_type.SHT_LOPROC=0x70000000"
"tk enum.elf_s_type.SHT_NOBITS=0x8"
"tk enum.elf_s_type.SHT_NOTE=0x7"
"tk enum.elf_s_type.SHT_NULL=0x0"
"tk enum.elf_s_type.SHT_PROGBITS=0x1"
"tk enum.elf_s_type.SHT_REL=0x9"
"tk enum.elf_s_type.SHT_RELA=0x4"
"tk enum.elf_s_type.SHT_SHLIB=0xa"
"tk enum.elf_s_type.SHT_STRTAB=0x3"
"tk enum.elf_s_type.SHT_SYMTAB=0x2"
"tk enum.elf_type=ET_NONE,ET_REL,ET_EXEC,ET_DYN,ET_CORE,ET_LOOS,ET_HIOS,ET_LOPROC,ET_HIPROC"
"tk enum.elf_type.0x0=ET_NONE"
"tk enum.elf_type.0x1=ET_REL"
"tk enum.elf_type.0x2=ET_EXEC"
"tk enum.elf_type.0x3=ET_DYN"
"tk enum.elf_type.0x4=ET_CORE"
"tk enum.elf_type.0xfe00=ET_LOOS"
"tk enum.elf_type.0xfeff=ET_HIOS"
"tk enum.elf_type.0xff00=ET_LOPROC"
"tk enum.elf_type.0xffff=ET_HIPROC"
"tk enum.elf_type.ET_CORE=0x4"
"tk enum.elf_type.ET_DYN=0x3"
"tk enum.elf_type.ET_EXEC=0x2"
"tk enum.elf_type.ET_HIOS=0xfeff"
"tk enum.elf_type.ET_HIPROC=0xffff"
"tk enum.elf_type.ET_LOOS=0xfe00"
"tk enum.elf_type.ET_LOPROC=0xff00"
"tk enum.elf_type.ET_NONE=0x0"
"tk enum.elf_type.ET_REL=0x1"
"tk erf=func"
"tk erfc=func"
"tk erfcf=func"
"tk erfcl=func"
"tk erff=func"
"tk erfl=func"
"tk err=func"
"tk errc=func"
"tk error=func"
"tk errx=func"
"tk exit=func"
"tk exp=func"
"tk exp2=func"
"tk exp2f=func"
"tk exp2l=func"
"tk expf=func"
"tk expl=func"
"tk expm1=func"
"tk expm1f=func"
"tk expm1l=func"
"tk fabs=func"
"tk fabsf=func"
"tk fabsl=func"
"tk fchmod=func"
"tk fclose=func"
"tk fdim=func"
"tk fdimf=func"
"tk fdiml=func"
"tk feclearexcept=func"
"tk fegetenv=func"
"tk fegetexceptflag=func"
"tk fegetround=func"
"tk feholdexcept=func"
"tk feof=func"
"tk feraiseexcept=func"
"tk ferror=func"
"tk fesetenv=func"
"tk fesetexceptflag=func"
"tk fesetround=func"
"tk fetestexcept=func"
"tk feupdateenv=func"
"tk fflagtostr=func"
"tk fflush=func"
"tk fflush_unlocked=func"
"tk fgetc=func"
"tk fgetpos=func"
"tk fgets=func"
"tk fgetwc=func"
"tk fgetws=func"
"tk fileno=func"
"tk float=type"
"tk floor=func"
"tk floorf=func"
"tk floorl=func"
"tk fma=func"
"tk fmaf=func"
"tk fmal=func"
"tk fmax=func"
"tk fmaxf=func"
"tk fmaxl=func"
"tk fmin=func"
"tk fminf=func"
"tk fminl=func"
"tk fmod=func"
"tk fmodf=func"
"tk fmodl=func"
"tk fopen=func"
"tk fpclassify=func"
"tk fprintf=func"
"tk fputc=func"
"tk fputs=func"
"tk fputwc=func"
"tk fputws=func"
"tk fread=func"
"tk free=func"
"tk freopen=func"
"tk frexp=func"
"tk frexpf=func"
"tk frexpl=func"
"tk fscanf=func"
"tk fseek=func"
"tk fsetpos=func"
"tk fstat=func"
"tk ftell=func"
"tk fts_children_INODE64=func"
"tk fts_close_INODE64=func"
"tk fts_open_INODE64=func"
"tk fts_read_INODE64=func"
"tk fts_set_INODE64=func"
"tk func.*aligned_alloc.arg.0=size_t,alignment"
"tk func.*aligned_alloc.arg.1=size_t,size"
"tk func.*aligned_alloc.args=2"
"tk func.*aligned_alloc.ret=void"
"tk func._Exit.arg.0=int,status"
"tk func._Exit.args=1"
"tk func._Exit.noreturn=true"
"tk func._Exit.ret=void"
"tk func.__assert_fail.arg.0=const char *,assertion"
"tk func.__assert_fail.arg.1=const char *,file"
"tk func.__assert_fail.arg.2=unsigned int,line"
"tk func.__assert_fail.arg.3=const char *,function"
"tk func.__assert_fail.args=4"
"tk func.__assert_fail.noreturn=true"
"tk func.__assert_fail.ret=void"
"tk func.__bzero.arg.0=void *,s"
"tk func.__bzero.arg.1=size_t,n"
"tk func.__bzero.args=2"
"tk func.__bzero.ret=void"
"tk func.__cxa_throw.arg.0=void *,thrown_exception"
"tk func.__cxa_throw.arg.1=struct std::type_info *,tinfo"
"tk func.__cxa_throw.arg.2=void *,dest"
"tk func.__cxa_throw.args=3"
"tk func.__cxa_throw.noreturn=true"
"tk func.__cxa_throw.ret=void"
"tk func.__error.arg.0=int,status"
"tk func.__error.arg.1=int,errname"
"tk func.__error.arg.2=char *,format"
"tk func.__error.args=3"
"tk func.__error.ret=void"
"tk func.__libc_init.arg.0=int,argc"
"tk func.__libc_init.arg.1=char **,argv"
"tk func.__libc_init.arg.2=char **,envp"
"tk func.__libc_init.args=3"
"tk func.__libc_init.noreturn=true"
"tk func.__libc_init.ret=void"
"tk func.__libc_init_array.args=0"
"tk func.__libc_init_array.ret=void"
"tk func.__libc_start_main.arg.0=func,main"
"tk func.__libc_start_main.arg.1=int,argc"
"tk func.__libc_start_main.arg.2=char **,ubp_av"
"tk func.__libc_start_main.arg.3=func,init"
"tk func.__libc_start_main.arg.4=func,fini"
"tk func.__libc_start_main.arg.5=func,rtld_fini"
"tk func.__libc_start_main.arg.6=void *,stack_end"
"tk func.__libc_start_main.args=7"
"tk func.__libc_start_main.noreturn=true"
"tk func.__libc_start_main.ret=int"
"tk func.__maskrune.arg.0=long,c"
"tk func.__maskrune.arg.1=long,f"
"tk func.__maskrune.args=2"
"tk func.__maskrune.ret=int"
"tk func.__stack_chk_fail.args=0"
"tk func.__stack_chk_fail.noreturn=true"
"tk func.__stack_chk_fail.ret=void"
"tk func.__tolower.arg.0=int,c"
"tk func.__tolower.args=1"
"tk func.__tolower.ret=int"
"tk func.__toupper.arg.0=int,c"
"tk func.__toupper.args=1"
"tk func.__toupper.ret=int"
"tk func.__uClibc_main.arg.0=func,main"
"tk func.__uClibc_main.arg.1=int,argc"
"tk func.__uClibc_main.arg.2=char **,argv"
"tk func.__uClibc_main.arg.3=func,app_init"
"tk func.__uClibc_main.arg.4=func,app_fini"
"tk func.__uClibc_main.arg.5=func,rtld_fini"
"tk func.__uClibc_main.arg.6=void *,stack_end"
"tk func.__uClibc_main.args=7"
"tk func.__uClibc_main.noreturn=true"
"tk func.__uClibc_main.ret=int"
"tk func._exit.arg.0=int,status"
"tk func._exit.args=1"
"tk func._exit.noreturn=true"
"tk func._exit.ret=void"
"tk func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.arg.0=void *"
"tk func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.args=1"
"tk func._sSS10FoundationE19_bridgeToObjectiveCSo8NSStringCyF.ret=void *"
"tk func.abort.args=0"
"tk func.abort.noreturn=true"
"tk func.abort.ret=void"
"tk func.abs.arg.0=int,j"
"tk func.abs.args=1"
"tk func.abs.ret=int"
"tk func.access.arg.0=const char *,path"
"tk func.access.arg.1=int,mode"
"tk func.access.args=2"
"tk func.access.ret=int"
"tk func.acos.arg.0=arithmetic,x"
"tk func.acos.args=1"
"tk func.acos.ret=floating_point"
"tk func.acosf.arg.0=float,x"
"tk func.acosf.args=1"
"tk func.acosf.ret=float"
"tk func.acosh.arg.0=arithmetic,x"
"tk func.acosh.args=1"
"tk func.acosh.ret=floating_point"
"tk func.acoshf.arg.0=float,x"
"tk func.acoshf.args=1"
"tk func.acoshf.ret=float"
"tk func.acoshl.arg.0=long double,x"
"tk func.acoshl.args=1"
"tk func.acoshl.ret=long double"
"tk func.acosl.arg.0=long double,x"
"tk func.acosl.args=1"
"tk func.acosl.ret=long double"
"tk func.arc4random.args=0"
"tk func.arc4random.ret=uint32_t"
"tk func.asctime.arg.0=const tm *,timeptr"
"tk func.asctime.args=1"
"tk func.asctime.ret=char *"
"tk func.asin.arg.0=arithmetic,x"
"tk func.asin.args=1"
"tk func.asin.ret=floating_point"
"tk func.asinf.arg.0=float,x"
"tk func.asinf.args=1"
"tk func.asinf.ret=float"
"tk func.asinh.arg.0=arithmetic,x"
"tk func.asinh.args=1"
"tk func.asinh.ret=floating_point"
"tk func.asinhf.arg.0=float,x"
"tk func.asinhf.args=1"
"tk func.asinhf.ret=float"
"tk func.asinhl.arg.0=long double,x"
"tk func.asinhl.args=1"
"tk func.asinhl.ret=long double"
"tk func.asinl.arg.0=long double,x"
"tk func.asinl.args=1"
"tk func.asinl.ret=long double"
"tk func.at_quick_exit.args=0"
"tk func.at_quick_exit.ret=int"
"tk func.atan.arg.0=arithmetic,x"
"tk func.atan.args=1"
"tk func.atan.ret=floating_point"
"tk func.atan2.arg.0=arithmetic,y"
"tk func.atan2.arg.1=arithmetic,x"
"tk func.atan2.args=2"
"tk func.atan2.ret=floating_point"
"tk func.atan2f.arg.0=float,y"
"tk func.atan2f.arg.1=float,x"
"tk func.atan2f.args=2"
"tk func.atan2f.ret=float"
"tk func.atan2l.arg.0=long double,y"
"tk func.atan2l.arg.1=long double,x"
"tk func.atan2l.args=2"
"tk func.atan2l.ret=long double"
"tk func.atanf.arg.0=float,x"
"tk func.atanf.args=1"
"tk func.atanf.ret=float"
"tk func.atanh.arg.0=arithmetic,x"
"tk func.atanh.args=1"
"tk func.atanh.ret=floating_point"
"tk func.atanhf.arg.0=float,x"
"tk func.atanhf.args=1"
"tk func.atanhf.ret=float"
"tk func.atanhl.arg.0=long double,x"
"tk func.atanhl.args=1"
"tk func.atanhl.ret=long double"
"tk func.atanl.arg.0=long double,x"
"tk func.atanl.args=1"
"tk func.atanl.ret=long double"
"tk func.atexit.arg.0=func,function"
"tk func.atexit.args=1"
"tk func.atexit.ret=int"
"tk func.atof.arg.0=const char *,str"
"tk func.atof.args=1"
"tk func.atof.ret=double"
"tk func.atoi.arg.0=const char *,str"
"tk func.atoi.args=1"
"tk func.atoi.ret=int"
"tk func.atol.arg.0=const char *,str"
"tk func.atol.args=1"
"tk func.atol.ret=long"
"tk func.atoll.arg.0=const char *,str"
"tk func.atoll.args=1"
"tk func.atoll.ret=long long"
"tk func.basename.arg.0=char *,path"
"tk func.basename.args=1"
"tk func.basename.ret=char *"
"tk func.bind.arg.0=int,socket"
"tk func.bind.arg.1=struct sockaddr*,address"
"tk func.bind.arg.2=socklen_t,address_len"
"tk func.bind.args=3"
"tk func.bind.ret=int"
"tk func.bindtextdomain.arg.0=char *,domainname"
"tk func.bindtextdomain.arg.1=char *,dirname"
"tk func.bindtextdomain.args=2"
"tk func.bindtextdomain.ret=char *"
"tk func.bsearch.arg.0=const void *,key"
"tk func.bsearch.arg.1=const void *,base"
"tk func.bsearch.arg.2=size_t,nmemb"
"tk func.bsearch.arg.3=size_t,size"
"tk func.bsearch.arg.4=int,(*compar)(const void *,const void *)"
"tk func.bsearch.args=5"
"tk func.btowc.arg.0=int,c"
"tk func.btowc.args=1"
"tk func.btowc.ret=wint_t"
"tk func.bzero.arg.0=void *,s"
"tk func.bzero.arg.1=size_t,n"
"tk func.bzero.args=2"
"tk func.bzero.ret=void"
"tk func.calloc.arg.0=size_t,nmeb"
"tk func.calloc.arg.1=size_t,size"
"tk func.calloc.args=2"
"tk func.calloc.ret=void *"
"tk func.cbrt.arg.0=arithmetic,x"
"tk func.cbrt.args=1"
"tk func.cbrt.ret=floating_point"
"tk func.cbrtf.arg.0=float,x"
"tk func.cbrtf.args=1"
"tk func.cbrtf.ret=float"
"tk func.cbrtl.arg.0=long double,x"
"tk func.cbrtl.args=1"
"tk func.cbrtl.ret=long double"
"tk func.ceil.arg.0=arithmetic,x"
"tk func.ceil.args=1"
"tk func.ceil.ret=floating_point"
"tk func.ceilf.arg.0=float,x"
"tk func.ceilf.args=1"
"tk func.ceilf.ret=float"
"tk func.ceill.arg.0=long double,x"
"tk func.ceill.args=1"
"tk func.ceill.ret=long double"
"tk func.check1.arg.0=int64_t,arg1"
"tk func.check1.args=1"
"tk func.check2.arg.0=int64_t,arg1"
"tk func.check2.args=1"
"tk func.chmod.arg.0=const char *,path"
"tk func.chmod.arg.1=int,mode"
"tk func.chmod.args=2"
"tk func.chmod.ret=int"
"tk func.clearerr.arg.0=FILE *,stream"
"tk func.clearerr.args=1"
"tk func.clearerr.ret=void"
"tk func.clock.args=0"
"tk func.clock.ret=clock_t"
"tk func.close.arg.0=int,fildes"
"tk func.close.args=1"
"tk func.close.ret=int"
"tk func.compat_mode.arg.0=const char *,function"
"tk func.compat_mode.arg.1=const char *,mode"
"tk func.compat_mode.args=2"
"tk func.compat_mode.ret=bool"
"tk func.connect.arg.0=int,socket"
"tk func.connect.arg.1=void *,addr"
"tk func.connect.arg.2=size_t,addrlen"
"tk func.connect.args=3"
"tk func.connect.ret=ssize_t"
"tk func.copysign.arg.0=arithmetic,x"
"tk func.copysign.arg.1=arithmetic,y"
"tk func.copysign.args=2"
"tk func.copysign.ret=floating_point"
"tk func.copysignf.arg.0=float,x"
"tk func.copysignf.arg.1=float,y"
"tk func.copysignf.args=2"
"tk func.copysignf.ret=float"
"tk func.copysignl.arg.0=long double,x"
"tk func.copysignl.arg.1=long double,y"
"tk func.copysignl.args=2"
"tk func.copysignl.ret=long double"
"tk func.cos.arg.0=arithmetic,x"
"tk func.cos.args=1"
"tk func.cos.ret=floating_point"
"tk func.cosf.arg.0=float,x"
"tk func.cosf.args=1"
"tk func.cosf.ret=float"
"tk func.cosh.arg.0=arithmetic,x"
"tk func.cosh.args=1"
"tk func.cosh.ret=floating_point"
"tk func.coshf.arg.0=float,x"
"tk func.coshf.args=1"
"tk func.coshf.ret=float"
"tk func.coshl.arg.0=long double,x"
"tk func.coshl.args=1"
"tk func.coshl.ret=long double"
"tk func.cosl.arg.0=long double,x"
"tk func.cosl.args=1"
"tk func.cosl.ret=long double"
"tk func.ctime.arg.0=const time_t *,timer"
"tk func.ctime.args=1"
"tk func.ctime.ret=char *"
"tk func.difftime.arg.0=time_t,time1"
"tk func.difftime.arg.1=time_t,time0"
"tk func.difftime.args=2"
"tk func.difftime.ret=double"
"tk func.div.arg.0=int,numer"
"tk func.div.arg.1=int,denom"
"tk func.div.args=2"
"tk func.div.ret=div_t"
"tk func.entry0.arg.0=int64_t,arg3"
"tk func.entry0.args=1"
"tk func.erf.arg.0=arithmetic,x"
"tk func.erf.args=1"
"tk func.erf.ret=floating_point"
"tk func.erfc.arg.0=arithmetic,x"
"tk func.erfc.args=1"
"tk func.erfc.ret=floating_point"
"tk func.erfcf.arg.0=float,x"
"tk func.erfcf.args=1"
"tk func.erfcf.ret=float"
"tk func.erfcl.arg.0=long double,x"
"tk func.erfcl.args=1"
"tk func.erfcl.ret=long double"
"tk func.erff.arg.0=float,x"
"tk func.erff.args=1"
"tk func.erff.ret=float"
"tk func.erfl.arg.0=long double,x"
"tk func.erfl.args=1"
"tk func.erfl.ret=long double"
"tk func.err.arg.0=int,eval"
"tk func.err.arg.1=const char *,fmt"
"tk func.err.args=2"
"tk func.err.noreturn=true"
"tk func.err.ret=void"
"tk func.errc.arg.0=int,eval"
"tk func.errc.arg.1=int,code"
"tk func.errc.arg.2=const char *,fmt"
"tk func.errc.args=3"
"tk func.errc.noreturn=true"
"tk func.errc.ret=void"
"tk func.error.arg.0=int,status"
"tk func.error.arg.1=int,errname"
"tk func.error.arg.2=char *,format"
"tk func.error.args=3"
"tk func.error.ret=void"
"tk func.errx.arg.0=int,eval"
"tk func.errx.arg.1=const char *,fmt"
"tk func.errx.args=2"
"tk func.errx.noreturn=true"
"tk func.errx.ret=void"
"tk func.exit.arg.0=int,status"
"tk func.exit.args=1"
"tk func.exit.noreturn=true"
"tk func.exit.ret=void"
"tk func.exp.arg.0=arithmetic,x"
"tk func.exp.args=1"
"tk func.exp.ret=floating_point"
"tk func.exp2.arg.0=arithmetic,x"
"tk func.exp2.args=1"
"tk func.exp2.ret=floating_point"
"tk func.exp2f.arg.0=float,x"
"tk func.exp2f.args=1"
"tk func.exp2f.ret=float"
"tk func.exp2l.arg.0=long double,x"
"tk func.exp2l.args=1"
"tk func.exp2l.ret=long double"
"tk func.expf.arg.0=float,x"
"tk func.expf.args=1"
"tk func.expf.ret=float"
"tk func.expl.arg.0=long double,x"
"tk func.expl.args=1"
"tk func.expl.ret=long double"
"tk func.expm1.arg.0=arithmetic,x"
"tk func.expm1.args=1"
"tk func.expm1.ret=floating_point"
"tk func.expm1f.arg.0=float,x"
"tk func.expm1f.args=1"
"tk func.expm1f.ret=float"
"tk func.expm1l.arg.0=long double,x"
"tk func.expm1l.args=1"
"tk func.expm1l.ret=long double"
"tk func.fabs.arg.0=arithmetic,x"
"tk func.fabs.args=1"
"tk func.fabs.ret=floating_point"
"tk func.fabsf.arg.0=float,x"
"tk func.fabsf.args=1"
"tk func.fabsf.ret=float"
"tk func.fabsl.arg.0=long double,x"
"tk func.fabsl.args=1"
"tk func.fabsl.ret=long double"
"tk func.fchmod.arg.0=int,fd"
"tk func.fchmod.arg.1=int,mode"
"tk func.fchmod.args=2"
"tk func.fchmod.ret=int"
"tk func.fclose.arg.0=FILE *,stream"
"tk func.fclose.args=1"
"tk func.fclose.ret=int"
"tk func.fdim.arg.0=arithmetic,x"
"tk func.fdim.arg.1=arithmetic,y"
"tk func.fdim.args=2"
"tk func.fdim.ret=floating_point"
"tk func.fdimf.arg.0=float,x"
"tk func.fdimf.arg.1=float,y"
"tk func.fdimf.args=2"
"tk func.fdimf.ret=float"
"tk func.fdiml.arg.0=long double,x"
"tk func.fdiml.arg.1=long double,y"
"tk func.fdiml.args=2"
"tk func.fdiml.ret=long double"
"tk func.feclearexcept.arg.0=int,excepts"
"tk func.feclearexcept.args=1"
"tk func.feclearexcept.ret=int"
"tk func.fegetenv.arg.0=fenv_t *,envp"
"tk func.fegetenv.args=1"
"tk func.fegetenv.ret=int"
"tk func.fegetexceptflag.arg.0=fexcept_t *,flagp"
"tk func.fegetexceptflag.arg.1=int,excepts"
"tk func.fegetexceptflag.args=2"
"tk func.fegetexceptflag.ret=int"
"tk func.fegetround.args=0"
"tk func.fegetround.ret=int"
"tk func.feholdexcept.arg.0=fenv_t *,envp"
"tk func.feholdexcept.args=1"
"tk func.feholdexcept.ret=int"
"tk func.feof.arg.0=FILE *,stream"
"tk func.feof.args=1"
"tk func.feof.ret=int"
"tk func.feraiseexcept.arg.0=int,excepts"
"tk func.feraiseexcept.args=1"
"tk func.feraiseexcept.ret=int"
"tk func.ferror.arg.0=FILE *,stream"
"tk func.ferror.args=1"
"tk func.ferror.ret=int"
"tk func.fesetenv.arg.0=const,fenv_t*"
"tk func.fesetenv.args=1"
"tk func.fesetenv.ret=int"
"tk func.fesetexceptflag.arg.0=const,fexcept_t*"
"tk func.fesetexceptflag.arg.1=int,excepts"
"tk func.fesetexceptflag.args=2"
"tk func.fesetexceptflag.ret=int"
"tk func.fesetround.arg.0=int,round"
"tk func.fesetround.args=1"
"tk func.fesetround.ret=int"
"tk func.fetestexcept.arg.0=int,excepts"
"tk func.fetestexcept.args=1"
"tk func.fetestexcept.ret=int"
"tk func.feupdateenv.arg.0=const,fenv_t*"
"tk func.feupdateenv.args=1"
"tk func.feupdateenv.ret=int"
"tk func.fflagtostr.arg.0=int,flags"
"tk func.fflagtostr.args=1"
"tk func.fflagtostr.ret=char*"
"tk func.fflush.arg.0=FILE *,stream"
"tk func.fflush.args=1"
"tk func.fflush.ret=int"
"tk func.fflush_unlocked.arg.0=FILE *,stream"
"tk func.fflush_unlocked.args=1"
"tk func.fflush_unlocked.ret=int"
"tk func.fgetc.arg.0=FILE *,stream"
"tk func.fgetc.args=1"
"tk func.fgetc.ret=int"
"tk func.fgetpos.arg.0=FILE *,stream"
"tk func.fgetpos.arg.1=fpos_t*,pos"
"tk func.fgetpos.args=2"
"tk func.fgetpos.ret=int"
"tk func.fgets.arg.0=char *,s"
"tk func.fgets.arg.1=int,size"
"tk func.fgets.arg.2=FILE *,stream"
"tk func.fgets.args=3"
"tk func.fgets.ret=char *"
"tk func.fgetwc.arg.0=FILE *,stream"
"tk func.fgetwc.args=1"
"tk func.fgetwc.ret=wint_t"
"tk func.fgetws.arg.0=wchar_t *,s"
"tk func.fgetws.arg.1=int,n"
"tk func.fgetws.arg.2=FILE *,stream"
"tk func.fgetws.args=3"
"tk func.fgetws.ret=wchar_t*"
"tk func.fileno.arg.0=FILE *,stream"
"tk func.fileno.args=1"
"tk func.fileno.ret=int"
"tk func.floor.arg.0=arithmetic,x"
"tk func.floor.args=1"
"tk func.floor.ret=floating_point"
"tk func.floorf.arg.0=float,x"
"tk func.floorf.args=1"
"tk func.floorf.ret=float"
"tk func.floorl.arg.0=long double,x"
"tk func.floorl.args=1"
"tk func.floorl.ret=long double"
"tk func.fma.arg.0=arithmetic,x"
"tk func.fma.arg.1=arithmetic,y"
"tk func.fma.arg.2=arithmetic,z"
"tk func.fma.args=3"
"tk func.fma.ret=floating_point"
"tk func.fmaf.arg.0=float,x"
"tk func.fmaf.arg.1=float,y"
"tk func.fmaf.arg.2=float,z"
"tk func.fmaf.args=3"
"tk func.fmaf.ret=float"
"tk func.fmal.arg.0=long double,x"
"tk func.fmal.arg.1=long double,y"
"tk func.fmal.arg.2=long double,z"
"tk func.fmal.args=3"
"tk func.fmal.ret=long double"
"tk func.fmax.arg.0=arithmetic,x"
"tk func.fmax.arg.1=arithmetic,y"
"tk func.fmax.args=2"
"tk func.fmax.ret=floating_point"
"tk func.fmaxf.arg.0=float,x"
"tk func.fmaxf.arg.1=float,y"
"tk func.fmaxf.args=2"
"tk func.fmaxf.ret=float"
"tk func.fmaxl.arg.0=long double,x"
"tk func.fmaxl.arg.1=long double,y"
"tk func.fmaxl.args=2"
"tk func.fmaxl.ret=long double"
"tk func.fmin.arg.0=arithmetic,x"
"tk func.fmin.arg.1=arithmetic,y"
"tk func.fmin.args=2"
"tk func.fmin.ret=floating_point"
"tk func.fminf.arg.0=float,x"
"tk func.fminf.arg.1=float,y"
"tk func.fminf.args=2"
"tk func.fminf.ret=float"
"tk func.fminl.arg.0=long double,x"
"tk func.fminl.arg.1=long double,y"
"tk func.fminl.args=2"
"tk func.fminl.ret=long double"
"tk func.fmod.arg.0=arithmetic,x"
"tk func.fmod.arg.1=arithmetic,y"
"tk func.fmod.args=2"
"tk func.fmod.ret=floating_point"
"tk func.fmodf.arg.0=float,x"
"tk func.fmodf.arg.1=float,y"
"tk func.fmodf.args=2"
"tk func.fmodf.ret=float"
"tk func.fmodl.arg.0=long double,x"
"tk func.fmodl.arg.1=long double,y"
"tk func.fmodl.args=2"
"tk func.fmodl.ret=long double"
"tk func.fopen.arg.0=const char *,filename"
"tk func.fopen.arg.1=const char *,mode"
"tk func.fopen.args=2"
"tk func.fopen.ret=file*"
"tk func.fpclassify.arg.0=arithmetic,x"
"tk func.fpclassify.args=1"
"tk func.fpclassify.ret=int"
"tk func.fprintf.arg.0=FILE *,stream"
"tk func.fprintf.arg.1=const char *,format"
"tk func.fprintf.arg.2= ,..."
"tk func.fprintf.args=3"
"tk func.fprintf.ret=int"
"tk func.fputc.arg.0=int,c"
"tk func.fputc.arg.1=FILE *,stream"
"tk func.fputc.args=2"
"tk func.fputc.ret=int"
"tk func.fputs.arg.0=const char *,s"
"tk func.fputs.arg.1=FILE *,stream"
"tk func.fputs.args=2"
"tk func.fputs.ret=int"
"tk func.fputwc.arg.0=wchar_t,c"
"tk func.fputwc.arg.1=FILE *,stream"
"tk func.fputwc.args=2"
"tk func.fputwc.ret=wint_t"
"tk func.fputws.arg.0=const wchar_t *,s"
"tk func.fputws.arg.1=FILE *,stream"
"tk func.fputws.args=2"
"tk func.fputws.ret=int"
"tk func.fread.arg.0=void *,ptr"
"tk func.fread.arg.1=size_t,size"
"tk func.fread.arg.2=size_t,nmemb"
"tk func.fread.arg.3=FILE *,stream"
"tk func.fread.args=4"
"tk func.fread.ret=size_t"
"tk func.free.arg.0=void *,ptr"
"tk func.free.args=1"
"tk func.free.ret=void"
"tk func.freopen.arg.0=const char *,filename"
"tk func.freopen.arg.1=const char *,mode"
"tk func.freopen.arg.2=FILE *,stream"
"tk func.freopen.args=3"
"tk func.freopen.ret=file*"
"tk func.frexp.arg.0=arithmetic,value"
"tk func.frexp.arg.1=int *,exp"
"tk func.frexp.args=2"
"tk func.frexp.ret=floating_point"
"tk func.frexpf.arg.0=float,value"
"tk func.frexpf.arg.1=int *,exp"
"tk func.frexpf.args=2"
"tk func.frexpf.ret=float"
"tk func.frexpl.arg.0=long double,value"
"tk func.frexpl.arg.1=int *,exp"
"tk func.frexpl.args=2"
"tk func.frexpl.ret=long double"
"tk func.fscanf.arg.0=FILE *,stream"
"tk func.fscanf.arg.1=const char *,format"
"tk func.fscanf.arg.2=,..."
"tk func.fscanf.args=3"
"tk func.fscanf.ret=int"
"tk func.fseek.arg.0=FILE *,stream"
"tk func.fseek.arg.1=long,offset"
"tk func.fseek.arg.2=int,whence"
"tk func.fseek.args=3"
"tk func.fseek.ret=int"
"tk func.fsetpos.arg.0=FILE *,stream"
"tk func.fsetpos.arg.1=const fpos_t*,pos"
"tk func.fsetpos.args=2"
"tk func.fsetpos.ret=int"
"tk func.fstat.arg.0=int,fildes"
"tk func.fstat.arg.1=void *,buf"
"tk func.fstat.args=2"
"tk func.fstat.ret=int"
"tk func.ftell.arg.0=FILE *,stream"
"tk func.ftell.args=1"
"tk func.ftell.ret=long"
"tk func.fts_children_INODE64.arg.0=void*,ftsp"
"tk func.fts_children_INODE64.arg.1=int,opotions"
"tk func.fts_children_INODE64.args=2"
"tk func.fts_children_INODE64.ret=void *"
"tk func.fts_close_INODE64.arg.0=void*,ftsp"
"tk func.fts_close_INODE64.args=1"
"tk func.fts_close_INODE64.ret=int"
"tk func.fts_open_INODE64.arg.0=const char *,path_argv"
"tk func.fts_open_INODE64.arg.1=int,options"
"tk func.fts_open_INODE64.arg.2=void *,compar"
"tk func.fts_open_INODE64.arg.3=void *,ftsen$INODE64t"
"tk func.fts_open_INODE64.args=4"
"tk func.fts_open_INODE64.ret=void *"
"tk func.fts_read_INODE64.arg.0=void*,ftsp"
"tk func.fts_read_INODE64.args=1"
"tk func.fts_read_INODE64.ret=void *"
"tk func.fts_set_INODE64.arg.0=void*,ftsp"
"tk func.fts_set_INODE64.arg.1=void*,f"
"tk func.fts_set_INODE64.arg.2=int,options"
"tk func.fts_set_INODE64.args=3"
"tk func.fts_set_INODE64.ret=int"
"tk func.fwide.arg.0=FILE *,stream"
"tk func.fwide.arg.1=int,mode"
"tk func.fwide.args=2"
"tk func.fwide.ret=int"
"tk func.fwprintf.arg.0=FILE *,stream"
"tk func.fwprintf.arg.1=const wchar_t *,format"
"tk func.fwprintf.args=2"
"tk func.fwprintf.ret=int"
"tk func.fwrite.arg.0=const void *,ptr"
"tk func.fwrite.arg.1=size_t,size"
"tk func.fwrite.arg.2=size_t,nitems"
"tk func.fwrite.arg.3=FILE *,stream"
"tk func.fwrite.args=4"
"tk func.fwrite.ret=size_t"
"tk func.fwscanf.arg.0=FILE *,stream"
"tk func.fwscanf.arg.1=const wchar_t *,format"
"tk func.fwscanf.args=2"
"tk func.fwscanf.ret=int"
"tk func.getbsize.arg.0=int *,hdrlenp"
"tk func.getbsize.arg.1=int *,bsizep"
"tk func.getbsize.args=2"
"tk func.getbsize.ret=char *"
"tk func.getc.arg.0=FILE *,stream"
"tk func.getc.args=1"
"tk func.getc.ret=int"
"tk func.getchar.args=0"
"tk func.getchar.ret=int"
"tk func.getenv.arg.0=const char *,name"
"tk func.getenv.args=1"
"tk func.getenv.ret=char *"
"tk func.geteuid.args=0"
"tk func.geteuid.ret=uid_t"
"tk func.getopt.arg.0=int,argc"
"tk func.getopt.arg.1=const char * *,argv"
"tk func.getopt.arg.2=const char *,optstring"
"tk func.getopt.args=3"
"tk func.getopt.ret=int"
"tk func.getopt_long.arg.0=int,argc"
"tk func.getopt_long.arg.1=char **,argv"
"tk func.getopt_long.arg.2=const char*,optstring"
"tk func.getopt_long.arg.3=void *,longopts"
"tk func.getopt_long.arg.4=int,longidx"
"tk func.getopt_long.args=5"
"tk func.getopt_long.ret=int"
"tk func.getpid.args=0"
"tk func.getpid.ret=int"
"tk func.getprogname.args=0"
"tk func.getprogname.ret=const char *"
"tk func.gets.arg.0=char *,s"
"tk func.gets.args=1"
"tk func.gets.ret=char *"
"tk func.getsockname.arg.0=int,sockfd"
"tk func.getsockname.arg.1=struct sockaddr *,addr"
"tk func.getsockname.arg.2=socklen_t *,addrlen"
"tk func.getsockname.args=3"
"tk func.getsockname.ret=int"
"tk func.getsockopt.arg.0=int,sockfd"
"tk func.getsockopt.arg.1=int,level"
"tk func.getsockopt.arg.2=int,optname"
"tk func.getsockopt.arg.3=void *,optval"
"tk func.getsockopt.arg.4=socklen_t *,optlen"
"tk func.getsockopt.args=5"
"tk func.getsockopt.ret=int"
"tk func.getuid.args=0"
"tk func.getuid.ret=uid_t"
"tk func.getwc.arg.0=FILE *,stream"
"tk func.getwc.args=1"
"tk func.getwc.ret=wint_t"
"tk func.getwchar.args=0"
"tk func.getwchar.ret=wint_t"
"tk func.gmtime.arg.0=const time_t *,timer"
"tk func.gmtime.args=1"
"tk func.gmtime.ret=tm*"
"tk func.group_from_gid.arg.0=gid_t,gid"
"tk func.group_from_gid.arg.1=int,nogroup"
"tk func.group_from_gid.args=2"
"tk func.group_from_gid.ret=char *"
"tk func.group_from_uid.include=grp.h"
"tk func.humanize_number.arg.0=char *,buf"
"tk func.humanize_number.arg.1=size_t,len"
"tk func.humanize_number.arg.2=int64_t,number"
"tk func.humanize_number.arg.3=const char *,suffix"
"tk func.humanize_number.arg.4=int,scale"
"tk func.humanize_number.arg.5=int,flags"
"tk func.humanize_number.args=1"
"tk func.humanize_number.ret=int"
"tk func.hypot.arg.0=arithmetic,x"
"tk func.hypot.arg.1=arithmetic,y"
"tk func.hypot.args=2"
"tk func.hypot.ret=floating_point"
"tk func.hypotf.arg.0=float,x"
"tk func.hypotf.arg.1=float,y"
"tk func.hypotf.args=2"
"tk func.hypotf.ret=float"
"tk func.hypotl.arg.0=long double,x"
"tk func.hypotl.arg.1=long double,y"
"tk func.hypotl.args=2"
"tk func.hypotl.ret=long double"
"tk func.ilogb.arg.0=arithmetic,x"
"tk func.ilogb.args=1"
"tk func.ilogb.ret=int"
"tk func.ilogbf.arg.0=float,x"
"tk func.ilogbf.args=1"
"tk func.ilogbf.ret=int"
"tk func.ilogbl.arg.0=long double,x"
"tk func.ilogbl.args=1"
"tk func.ilogbl.ret=int"
"tk func.imaxabs.arg.0=intmax_t,j"
"tk func.imaxabs.args=1"
"tk func.imaxabs.ret=intmax_t"
"tk func.imaxdiv.arg.0=intmax_t,numer"
"tk func.imaxdiv.arg.1=intmax_t,denom"
"tk func.imaxdiv.args=2"
"tk func.imaxdiv.ret=imaxdiv_t"
"tk func.inet_aton.arg.0=const char *,cp"
"tk func.inet_aton.arg.1=void *,pin"
"tk func.inet_aton.args=2"
"tk func.inet_aton.ret=int"
"tk func.inet_ntoa.arg.0=void *,in"
"tk func.inet_ntoa.args=1"
"tk func.inet_ntoa.ret=char *"
"tk func.initstate.arg.0=uint32_t,seed"
"tk func.initstate.arg.1=char *,state"
"tk func.initstate.arg.2=size_t,size"
"tk func.initstate.args=3"
"tk func.initstate.ret=char *"
"tk func.ioctl.arg.0=int,fd"
"tk func.ioctl.arg.1=unsigned long,request"
"tk func.ioctl.args=2"
"tk func.ioctl.ret=int"
"tk func.isalnum.arg.0=int,c"
"tk func.isalnum.args=1"
"tk func.isalnum.ret=int"
"tk func.isalpha.arg.0=int,c"
"tk func.isalpha.args=1"
"tk func.isalpha.ret=int"
"tk func.isatty.arg.0=int,fd"
"tk func.isatty.args=1"
"tk func.isatty.ret=int"
"tk func.isblank.arg.0=int,c"
"tk func.isblank.args=1"
"tk func.isblank.ret=int"
"tk func.iscntrl.arg.0=int,c"
"tk func.iscntrl.args=1"
"tk func.iscntrl.ret=int"
"tk func.isdigit.arg.0=int,c"
"tk func.isdigit.args=1"
"tk func.isdigit.ret=int"
"tk func.isfinite.arg.0=arithmetic,x"
"tk func.isfinite.args=1"
"tk func.isfinite.ret=bool"
"tk func.isgraph.arg.0=int,c"
"tk func.isgraph.args=1"
"tk func.isgraph.ret=int"
"tk func.isgreater.arg.0=arithmetic,x"
"tk func.isgreater.arg.1=arithmetic,y"
"tk func.isgreater.args=2"
"tk func.isgreater.ret=bool"
"tk func.isgreaterequal.arg.0=arithmetic,x"
"tk func.isgreaterequal.arg.1=arithmetic,y"
"tk func.isgreaterequal.args=2"
"tk func.isgreaterequal.ret=bool"
"tk func.isinf.arg.0=arithmetic,x"
"tk func.isinf.args=1"
"tk func.isinf.ret=bool"
"tk func.isless.arg.0=arithmetic,x"
"tk func.isless.arg.1=arithmetic,y"
"tk func.isless.args=2"
"tk func.isless.ret=bool"
"tk func.islessequal.arg.0=arithmetic,x"
"tk func.islessequal.arg.1=arithmetic,y"
"tk func.islessequal.args=2"
"tk func.islessequal.ret=bool"
"tk func.islessgreater.arg.0=arithmetic,x"
"tk func.islessgreater.arg.1=arithmetic,y"
"tk func.islessgreater.args=2"
"tk func.islessgreater.ret=bool"
"tk func.islower.arg.0=int,c"
"tk func.islower.args=1"
"tk func.islower.ret=int"
"tk func.isnan.arg.0=arithmetic,x"
"tk func.isnan.args=1"
"tk func.isnan.ret=bool"
"tk func.isnormal.arg.0=arithmetic,x"
"tk func.isnormal.args=1"
"tk func.isnormal.ret=bool"
"tk func.isprint.arg.0=int,c"
"tk func.isprint.args=1"
"tk func.isprint.ret=int"
"tk func.ispunct.arg.0=int,c"
"tk func.ispunct.args=1"
"tk func.ispunct.ret=int"
"tk func.isspace.arg.0=int,c"
"tk func.isspace.args=1"
"tk func.isspace.ret=int"
"tk func.isunordered.arg.0=arithmetic,x"
"tk func.isunordered.arg.1=arithmetic,y"
"tk func.isunordered.args=2"
"tk func.isunordered.ret=bool"
"tk func.isupper.arg.0=int,c"
"tk func.isupper.args=1"
"tk func.isupper.ret=int"
"tk func.iswalnum.arg.0=wint_t,wc"
"tk func.iswalnum.args=1"
"tk func.iswalnum.ret=int"
"tk func.iswalpha.arg.0=wint_t,wc"
"tk func.iswalpha.args=1"
"tk func.iswalpha.ret=int"
"tk func.iswblank.arg.0=wint_t,wc"
"tk func.iswblank.args=1"
"tk func.iswblank.ret=int"
"tk func.iswcntrl.arg.0=wint_t,wc"
"tk func.iswcntrl.args=1"
"tk func.iswcntrl.ret=int"
"tk func.iswctype.arg.0=wint_t,wc"
"tk func.iswctype.arg.1=wctype_t,desc"
"tk func.iswctype.args=2"
"tk func.iswctype.ret=int"
"tk func.iswdigit.arg.0=wint_t,wc"
"tk func.iswdigit.args=1"
"tk func.iswdigit.ret=int"
"tk func.iswgraph.arg.0=wint_t,wc"
"tk func.iswgraph.args=1"
"tk func.iswgraph.ret=int"
"tk func.iswlower.arg.0=wint_t,wc"
"tk func.iswlower.args=1"
"tk func.iswlower.ret=int"
"tk func.iswprint.arg.0=wint_t,wc"
"tk func.iswprint.args=1"
"tk func.iswprint.ret=int"
"tk func.iswpunct.arg.0=wint_t,wc"
"tk func.iswpunct.args=1"
"tk func.iswpunct.ret=int"
"tk func.iswspace.arg.0=wint_t,wc"
"tk func.iswspace.args=1"
"tk func.iswspace.ret=int"
"tk func.iswupper.arg.0=wint_t,wc"
"tk func.iswupper.args=1"
"tk func.iswupper.ret=int"
"tk func.iswxdigit.arg.0=wint_t,wc"
"tk func.iswxdigit.args=1"
"tk func.iswxdigit.ret=int"
"tk func.isxdigit.arg.0=int,c"
"tk func.isxdigit.args=1"
"tk func.isxdigit.ret=int"
"tk func.kill.arg.0=pid_t,pid"
"tk func.kill.arg.1=int,sig"
"tk func.kill.args=2"
"tk func.kill.ret=int"
"tk func.labs.arg.0=long,j"
"tk func.labs.args=1"
"tk func.labs.ret=long"
"tk func.ldexp.arg.0=arithmetic,value"
"tk func.ldexp.arg.1=int,exp"
"tk func.ldexp.args=2"
"tk func.ldexp.ret=floating_point"
"tk func.ldexpf.arg.0=float,value"
"tk func.ldexpf.arg.1=int,exp"
"tk func.ldexpf.args=2"
"tk func.ldexpf.ret=float"
"tk func.ldexpl.arg.0=long double,value"
"tk func.ldexpl.arg.1=int,exp"
"tk func.ldexpl.args=2"
"tk func.ldexpl.ret=long double"
"tk func.ldiv.arg.0=long,numer"
"tk func.ldiv.arg.1=long,denom"
"tk func.ldiv.args=2"
"tk func.ldiv.ret=ldiv_t"
"tk func.lgamma.arg.0=arithmetic,x"
"tk func.lgamma.args=1"
"tk func.lgamma.ret=floating_point"
"tk func.lgammaf.arg.0=float,x"
"tk func.lgammaf.args=1"
"tk func.lgammaf.ret=float"
"tk func.lgammal.arg.0=long double,x"
"tk func.lgammal.args=1"
"tk func.lgammal.ret=long double"
"tk func.listxattr.arg.0=const char *,path"
"tk func.listxattr.arg.1=char*,namebuf"
"tk func.listxattr.arg.2=int,fsize"
"tk func.listxattr.arg.3=int,options"
"tk func.listxattr.args=4"
"tk func.listxattr.ret=int"
"tk func.llabs.arg.0=long long,j"
"tk func.llabs.args=1"
"tk func.llabs.ret=long long"
"tk func.lldiv.arg.0=long long,numer"
"tk func.lldiv.arg.1=long long,denom"
"tk func.lldiv.args=2"
"tk func.lldiv.ret=lldiv_t"
"tk func.llrint.arg.0=arithmetic,x"
"tk func.llrint.args=1"
"tk func.llrint.ret=long long"
"tk func.llrintf.arg.0=float,x"
"tk func.llrintf.args=1"
"tk func.llrintf.ret=long long"
"tk func.llrintl.arg.0=long double,x"
"tk func.llrintl.args=1"
"tk func.llrintl.ret=long long"
"tk func.llround.arg.0=arithmetic,x"
"tk func.llround.args=1"
"tk func.llround.ret=long long"
"tk func.llroundf.arg.0=float,x"
"tk func.llroundf.args=1"
"tk func.llroundf.ret=long long"
"tk func.llroundl.arg.0=long double,x"
"tk func.llroundl.args=1"
"tk func.llroundl.ret=long long"
"tk func.localeconv.args=0"
"tk func.localeconv.ret=lconv*"
"tk func.localtime.arg.0=const time_t *,timer"
"tk func.localtime.args=1"
"tk func.localtime.ret=tm*"
"tk func.log.arg.0=arithmetic,x"
"tk func.log.args=1"
"tk func.log.ret=floating_point"
"tk func.log10.arg.0=arithmetic,x"
"tk func.log10.args=1"
"tk func.log10.ret=floating_point"
"tk func.log10f.arg.0=float,x"
"tk func.log10f.args=1"
"tk func.log10f.ret=float"
"tk func.log10l.arg.0=long double,x"
"tk func.log10l.args=1"
"tk func.log10l.ret=long double"
"tk func.log1p.arg.0=arithmetic,x"
"tk func.log1p.args=1"
"tk func.log1p.ret=floating_point"
"tk func.log1pf.arg.0=float,x"
"tk func.log1pf.args=1"
"tk func.log1pf.ret=float"
"tk func.log1pl.arg.0=long double,x"
"tk func.log1pl.args=1"
"tk func.log1pl.ret=long double"
"tk func.log2.arg.0=arithmetic,x"
"tk func.log2.args=1"
"tk func.log2.ret=floating_point"
"tk func.log2f.arg.0=float,x"
"tk func.log2f.args=1"
"tk func.log2f.ret=float"
"tk func.log2l.arg.0=long double,x"
"tk func.log2l.args=1"
"tk func.log2l.ret=long double"
"tk func.logb.arg.0=arithmetic,x"
"tk func.logb.args=1"
"tk func.logb.ret=floating_point"
"tk func.logbf.arg.0=float,x"
"tk func.logbf.args=1"
"tk func.logbf.ret=float"
"tk func.logbl.arg.0=long double,x"
"tk func.logbl.args=1"
"tk func.logbl.ret=long double"
"tk func.logf.arg.0=float,x"
"tk func.logf.args=1"
"tk func.logf.ret=float"
"tk func.logl.arg.0=long double,x"
"tk func.logl.args=1"
"tk func.logl.ret=long double"
"tk func.longjmp.arg.0=jmp_buf,env"
"tk func.longjmp.arg.1=int,val"
"tk func.longjmp.args=2"
"tk func.longjmp.ret=void"
"tk func.lrint.arg.0=arithmetic,x"
"tk func.lrint.args=1"
"tk func.lrint.ret=long"
"tk func.lrintf.arg.0=float,x"
"tk func.lrintf.args=1"
"tk func.lrintf.ret=long"
"tk func.lrintl.arg.0=long double,x"
"tk func.lrintl.args=1"
"tk func.lrintl.ret=long"
"tk func.lround.arg.0=arithmetic,x"
"tk func.lround.args=1"
"tk func.lround.ret=long"
"tk func.lroundf.arg.0=float,x"
"tk func.lroundf.args=1"
"tk func.lroundf.ret=long"
"tk func.lroundl.arg.0=long double,x"
"tk func.lroundl.args=1"
"tk func.lroundl.ret=long"
"tk func.lstat.arg.0=const char *,path"
"tk func.lstat.arg.1=void *,buf"
"tk func.lstat.args=2"
"tk func.lstat.ret=void"
"tk func.main.arg.0=int,argc"
"tk func.main.arg.1=char **,argv"
"tk func.main.arg.2=char **,envp"
"tk func.main.args=3"
"tk func.main.ret=int"
"tk func.malloc.arg.0=size_t,size"
"tk func.malloc.args=1"
"tk func.malloc.ret= void *"
"tk func.maskrune.arg.0=uint32_t,c"
"tk func.maskrune.arg.1=unsigned long,f"
"tk func.maskrune.args=2"
"tk func.maskrune.ret=int"
"tk func.mblen.arg.0=const char *,s"
"tk func.mblen.arg.1=size_t,n"
"tk func.mblen.args=2"
"tk func.mblen.ret=int"
"tk func.mbrlen.arg.0=const char *,s"
"tk func.mbrlen.arg.1=size_t,n"
"tk func.mbrlen.arg.2=mbstate_t *,ps"
"tk func.mbrlen.args=3"
"tk func.mbrlen.ret=size_t"
"tk func.mbrtowc.arg.0=wchar_t *,pwc"
"tk func.mbrtowc.arg.1=const char *,s"
"tk func.mbrtowc.arg.2=size_t,n"
"tk func.mbrtowc.arg.3=mbstate_t *,ps"
"tk func.mbrtowc.args=4"
"tk func.mbrtowc.ret=size_t"
"tk func.mbsinit.arg.0=const mbstate_t *,ps"
"tk func.mbsinit.args=1"
"tk func.mbsinit.ret=int"
"tk func.mbsrtowcs.arg.0=wchar_t *,dst"
"tk func.mbsrtowcs.arg.1=const char * *,src"
"tk func.mbsrtowcs.arg.2=size_t,len"
"tk func.mbsrtowcs.arg.3=mbstate_t *,ps"
"tk func.mbsrtowcs.args=4"
"tk func.mbsrtowcs.ret=size_t"
"tk func.mbstowcs.arg.0=wchar_t *,pwcs"
"tk func.mbstowcs.arg.1=const char *,s"
"tk func.mbstowcs.arg.2=size_t,n"
"tk func.mbstowcs.args=3"
"tk func.mbstowcs.ret=size_t"
"tk func.mbtowc.arg.0=wchar_t *,pwc"
"tk func.mbtowc.arg.1=const char *,s"
"tk func.mbtowc.arg.2=size_t,n"
"tk func.mbtowc.args=3"
"tk func.mbtowc.ret=int"
"tk func.memchr.arg.0=void *,s"
"tk func.memchr.arg.1=int,c"
"tk func.memchr.arg.2=size_t,n"
"tk func.memchr.args=3"
"tk func.memchr.ret=void *"
"tk func.memcmp.arg.0=const void *,s1"
"tk func.memcmp.arg.1=const void *,s2"
"tk func.memcmp.arg.2=size_t,n"
"tk func.memcmp.args=3"
"tk func.memcmp.ret=int"
"tk func.memcpy.arg.0=void *,s1"
"tk func.memcpy.arg.1=const void *,s2"
"tk func.memcpy.arg.2=size_t,n"
"tk func.memcpy.args=3"
"tk func.memcpy.ret=void *"
"tk func.memmem.arg.0=const void *,big"
"tk func.memmem.arg.1=int,big_len"
"tk func.memmem.arg.2=const void *,little"
"tk func.memmem.arg.3=int,little_len"
"tk func.memmem.args=4"
"tk func.memmem.ret=void *"
"tk func.memmove.arg.0=void *,s1"
"tk func.memmove.arg.1=const void *,s2"
"tk func.memmove.arg.2=size_t,n"
"tk func.memmove.args=3"
"tk func.memmove.ret=void *"
"tk func.memset.arg.0=void *,s"
"tk func.memset.arg.1=int,c"
"tk func.memset.arg.2=size_t,n"
"tk func.memset.args=3"
"tk func.memset.ret=void *"
"tk func.mkstemp.arg.0=char *,template"
"tk func.mkstemp.args=1"
"tk func.mkstemp.ret=int"
"tk func.mktemp.arg.0=char *,template"
"tk func.mktemp.args=1"
"tk func.mktemp.ret=char *"
"tk func.mktime.arg.0=tm *,timeptr"
"tk func.mktime.args=1"
"tk func.mktime.ret=time_t"
"tk func.mmap.arg.0=void*,addr"
"tk func.mmap.arg.1=size_t,length"
"tk func.mmap.arg.2=int,prot"
"tk func.mmap.arg.3=int,flags"
"tk func.mmap.arg.4=int,fd"
"tk func.mmap.arg.5=size_t,offset"
"tk func.mmap.args=6"
"tk func.mmap.ret=void*"
"tk func.modf.arg.0=floating_point,value"
"tk func.modf.arg.1=floating_point *,iptr"
"tk func.modf.args=2"
"tk func.modf.ret=floating_point"
"tk func.modff.arg.0=float,value"
"tk func.modff.arg.1=float *,iptr"
"tk func.modff.args=2"
"tk func.modff.ret=float"
"tk func.modfl.arg.0=long double,value"
"tk func.modfl.arg.1=long double *,iptr"
"tk func.modfl.args=2"
"tk func.modfl.ret=long double"
"tk func.munmap.arg.0=void*,addr"
"tk func.munmap.arg.1=size_t,length"
"tk func.munmap.args=2"
"tk func.munmap.ret=int"
"tk func.nan.arg.0=const char *,str"
"tk func.nan.args=1"
"tk func.nan.ret=double"
"tk func.nanf.arg.0=const char *,str"
"tk func.nanf.args=1"
"tk func.nanf.ret=float"
"tk func.nanl.arg.0=const char *,str"
"tk func.nanl.args=1"
"tk func.nanl.ret=long double"
"tk func.nanosleep.arg.0=const struct timespec *,req"
"tk func.nanosleep.arg.1=struct timespec *,rem"
"tk func.nanosleep.args=2"
"tk func.nanosleep.ret=int"
"tk func.nearbyint.arg.0=arithmetic,x"
"tk func.nearbyint.args=1"
"tk func.nearbyint.ret=floating_point"
"tk func.nearbyintf.arg.0=float,x"
"tk func.nearbyintf.args=1"
"tk func.nearbyintf.ret=float"
"tk func.nearbyintl.arg.0=long double,x"
"tk func.nearbyintl.args=1"
"tk func.nearbyintl.ret=long double"
"tk func.nextafter.arg.0=arithmetic,x"
"tk func.nextafter.arg.1=arithmetic,y"
"tk func.nextafter.args=2"
"tk func.nextafter.ret=floating_point"
"tk func.nextafterf.arg.0=float,x"
"tk func.nextafterf.arg.1=float,y"
"tk func.nextafterf.args=2"
"tk func.nextafterf.ret=float"
"tk func.nextafterl.arg.0=long double,x"
"tk func.nextafterl.arg.1=long double,y"
"tk func.nextafterl.args=2"
"tk func.nextafterl.ret=long double"
"tk func.nexttoward.arg.0=arithmetic,x"
"tk func.nexttoward.arg.1=long double,y"
"tk func.nexttoward.args=2"
"tk func.nexttoward.ret=floating_point"
"tk func.nexttowardf.arg.0=float,x"
"tk func.nexttowardf.arg.1=long double,y"
"tk func.nexttowardf.args=2"
"tk func.nexttowardf.ret=float"
"tk func.nexttowardl.arg.0=long double,x"
"tk func.nexttowardl.arg.1=long double,y"
"tk func.nexttowardl.args=2"
"tk func.nexttowardl.ret=long double"
"tk func.nl_langinfo.arg.0=nl_item,item"
"tk func.nl_langinfo.args=1"
"tk func.nl_langinfo.ret=char *"
"tk func.nl_langinfo_l.arg.0=nl_item,item"
"tk func.nl_langinfo_l.arg.1=locale_t locale"
"tk func.nl_langinfo_l.args=2"
"tk func.nl_langinfo_l.ret=char *"
"tk func.objc_allocWithZone.arg.0=void *"
"tk func.objc_allocWithZone.args=1"
"tk func.objc_allocWithZone.ret=void *"
"tk func.objc_enumerationMutation.arg.0=void *,instance"
"tk func.objc_enumerationMutation.args=1"
"tk func.objc_enumerationMutation.ret=void"
"tk func.objc_msgSend.arg.0=void *,instance"
"tk func.objc_msgSend.arg.1=char *,selector"
"tk func.objc_msgSend.args=2"
"tk func.objc_msgSend.ret=void *"
"tk func.objc_msgSendSuper2.arg.0=void *,instance"
"tk func.objc_msgSendSuper2.arg.1=char *,selector"
"tk func.objc_msgSendSuper2.args=2"
"tk func.objc_msgSendSuper2.ret=void *"
"tk func.objc_opt_self.arg.0=void *"
"tk func.objc_opt_self.args=1"
"tk func.objc_opt_self.ret=void *"
"tk func.objc_release.arg.0=void *,instance"
"tk func.objc_release.args=1"
"tk func.objc_release.ret=void"
"tk func.objc_retain.arg.0=void *,instance"
"tk func.objc_retain.args=1"
"tk func.objc_retain.ret=void"
"tk func.objc_retainAutoreleasedReturnValue.arg.0=void *,instance"
"tk func.objc_retainAutoreleasedReturnValue.args=1"
"tk func.objc_retainAutoreleasedReturnValue.ret=void"
"tk func.objc_storeStrong.arg.0=void *,instance"
"tk func.objc_storeStrong.arg.1=int,type"
"tk func.objc_storeStrong.args=2"
"tk func.objc_storeStrong.ret=void *"
"tk func.open.arg.0=const char *,path"
"tk func.open.arg.1=int,oflag"
"tk func.open.args=2"
"tk func.open.ret=int"
"tk func.openat.arg.0=int,fd"
"tk func.openat.arg.1=const char *,path"
"tk func.openat.arg.2=int,oflag"
"tk func.openat.args=3"
"tk func.openat.ret=int"
"tk func.pclose.arg.0=FILE *,stream"
"tk func.pclose.args=1"
"tk func.pclose.ret=int"
"tk func.perror.arg.0=const char *,s"
"tk func.perror.args=1"
"tk func.perror.ret=void"
"tk func.popen.arg.0=const char *,filename"
"tk func.popen.arg.1=const char *,mode"
"tk func.popen.args=2"
"tk func.popen.ret=file*"
"tk func.pow.arg.0=arithmetic,x"
"tk func.pow.arg.1=arithmetic,y"
"tk func.pow.args=2"
"tk func.pow.ret=floating_point"
"tk func.powf.arg.0=float,x"
"tk func.powf.arg.1=float,y"
"tk func.powf.args=2"
"tk func.powf.ret=float"
"tk func.powl.arg.0=long double,x"
"tk func.powl.arg.1=long double,y"
"tk func.powl.args=2"
"tk func.powl.ret=long double"
"tk func.prctl.arg.0=int,option"
"tk func.prctl.arg.1=unsigned long,v2"
"tk func.prctl.arg.2=unsigned long,v3"
"tk func.prctl.arg.3=unsigned long,v4"
"tk func.prctl.arg.4=unsigned long,v5"
"tk func.prctl.args=5"
"tk func.prctl.ret=int"
"tk func.printf.arg.0=const char *,format"
"tk func.printf.args=1"
"tk func.printf.ret=int"
"tk func.ptrace.arg.0=__ptrace_request,request"
"tk func.ptrace.arg.1=pid_t,pid"
"tk func.ptrace.arg.2=void*,addr"
"tk func.ptrace.arg.3=void*,data"
"tk func.ptrace.args=4"
"tk func.ptrace.ret=long"
"tk func.putc.arg.0=int,c"
"tk func.putc.arg.1=FILE *,stream"
"tk func.putc.args=2"
"tk func.putc.ret=int"
"tk func.putchar.arg.0=int,c"
"tk func.putchar.args=1"
"tk func.putchar.ret=int"
"tk func.puts.arg.0=const char *,s"
"tk func.puts.args=1"
"tk func.puts.ret=int"
"tk func.pututxline.arg.0=void *,utx"
"tk func.pututxline.args=1"
"tk func.pututxline.ret=void *"
"tk func.putwc.arg.0=wchar_t,c"
"tk func.putwc.arg.1=FILE *,stream"
"tk func.putwc.args=2"
"tk func.putwc.ret=wint_t"
"tk func.putwchar.arg.0=wchar_t,c"
"tk func.putwchar.args=1"
"tk func.putwchar.ret=wint_t"
"tk func.qsort.arg.0=void *,base"
"tk func.qsort.arg.1=size_t,nmemb"
"tk func.qsort.arg.2=size_t,size"
"tk func.qsort.arg.3=int(*compar)(const void *,const void *)"
"tk func.qsort.args=4"
"tk func.quick_exit.arg.0=int,status"
"tk func.quick_exit.args=1"
"tk func.quick_exit.ret=void"
"tk func.raise.arg.0=int,sig"
"tk func.raise.args=1"
"tk func.raise.ret=int"
"tk func.rand.args=0"
"tk func.rand.ret=int"
"tk func.random.args=0"
"tk func.random.ret=uint32_t"
"tk func.read.arg.0=int,fildes"
"tk func.read.arg.1=void *,buf"
"tk func.read.arg.2=size_t,nbyte"
"tk func.read.args=3"
"tk func.read.ret=ssize_t"
"tk func.readlink.arg.0=const char *,path"
"tk func.readlink.arg.1=char *,buf"
"tk func.readlink.arg.2=int,bufsize"
"tk func.readlink.args=3"
"tk func.readlink.ret=int"
"tk func.realloc.arg.0=void *,ptr"
"tk func.realloc.arg.1=size_t,size"
"tk func.realloc.args=2"
"tk func.realloc.ret=void *"
"tk func.reallocf.arg.0=void *,ptr"
"tk func.reallocf.arg.1=size_t,size"
"tk func.reallocf.args=2"
"tk func.reallocf.ret=void *"
"tk func.recv.arg.0=int,socket"
"tk func.recv.arg.1=void *,buffer"
"tk func.recv.arg.2=size_t,length"
"tk func.recv.arg.3=int,flags"
"tk func.recv.args=4"
"tk func.recv.ret=ssize_t"
"tk func.remainder.arg.0=arithmetic,x"
"tk func.remainder.arg.1=arithmetic,y"
"tk func.remainder.args=2"
"tk func.remainder.ret=floating_point"
"tk func.remainderf.arg.0=float,x"
"tk func.remainderf.arg.1=float,y"
"tk func.remainderf.args=2"
"tk func.remainderf.ret=float"
"tk func.remainderl.arg.0=long double,x"
"tk func.remainderl.arg.1=long double,y"
"tk func.remainderl.args=2"
"tk func.remainderl.ret=long double"
"tk func.remove.arg.0=const char *,filename"
"tk func.remove.args=1"
"tk func.remove.ret=int"
"tk func.remquo.arg.0=arithmetic,x"
"tk func.remquo.arg.1=arithmetic,y"
"tk func.remquo.arg.2=int *,pquo"
"tk func.remquo.args=3"
"tk func.remquo.ret=floating_point"
"tk func.remquof.arg.0=float,x"
"tk func.remquof.arg.1=float,y"
"tk func.remquof.arg.2=int *,pquo"
"tk func.remquof.args=3"
"tk func.remquof.ret=float"
"tk func.remquol.arg.0=long double,x"
"tk func.remquol.arg.1=long double,y"
"tk func.remquol.arg.2=int *,pquo"
"tk func.remquol.args=3"
"tk func.remquol.ret=long double"
"tk func.rename.arg.0=const char *,oldpath"
"tk func.rename.arg.1=const char *,newpath"
"tk func.rename.args=2"
"tk func.rename.ret=int"
"tk func.rewind.arg.0=FILE *,stream"
"tk func.rewind.args=1"
"tk func.rewind.ret=void"
"tk func.rint.arg.0=arithmetic,x"
"tk func.rint.args=1"
"tk func.rint.ret=floating_point"
"tk func.rintf.arg.0=float,x"
"tk func.rintf.args=1"
"tk func.rintf.ret=float"
"tk func.rintl.arg.0=long double,x"
"tk func.rintl.args=1"
"tk func.rintl.ret=long double"
"tk func.round.arg.0=arithmetic,x"
"tk func.round.args=1"
"tk func.round.ret=floating_point"
"tk func.roundf.arg.0=float,x"
"tk func.roundf.args=1"
"tk func.roundf.ret=float"
"tk func.roundl.arg.0=long double,x"
"tk func.roundl.args=1"
"tk func.roundl.ret=long double"
"tk func.scalbln.arg.0=arithmetic,x"
"tk func.scalbln.arg.1=long,ex"
"tk func.scalbln.args=2"
"tk func.scalbln.ret=floating_point"
"tk func.scalblnf.arg.0=float,x"
"tk func.scalblnf.arg.1=long,ex"
"tk func.scalblnf.args=2"
"tk func.scalblnf.ret=float"
"tk func.scalblnl.arg.0=long double,x"
"tk func.scalblnl.arg.1=long,ex"
"tk func.scalblnl.args=2"
"tk func.scalblnl.ret=long double"
"tk func.scalbn.arg.0=arithmetic,x"
"tk func.scalbn.arg.1=int,ex"
"tk func.scalbn.args=2"
"tk func.scalbn.ret=floating_point"
"tk func.scalbnf.arg.0=float,x"
"tk func.scalbnf.arg.1=int,ex"
"tk func.scalbnf.args=2"
"tk func.scalbnf.ret=float"
"tk func.scalbnl.arg.0=long double,x"
"tk func.scalbnl.arg.1=int,ex"
"tk func.scalbnl.args=2"
"tk func.scalbnl.ret=long double"
"tk func.scanf.arg.0=const char *,format"
"tk func.scanf.args=1"
"tk func.scanf.ret=int"
"tk func.select.arg.0=int,nfds"
"tk func.select.arg.1=fd_set *,readfds"
"tk func.select.arg.2=fd_set *,writefds"
"tk func.select.arg.3=fd_set *,exceptfds"
"tk func.select.arg.4=struct timeval *,timeout"
"tk func.select.args=5"
"tk func.select.ret=int"
"tk func.send.arg.0=int,socket"
"tk func.send.arg.1=void *,buffer"
"tk func.send.arg.2=size_t,length"
"tk func.send.arg.3=int,flags"
"tk func.send.args=4"
"tk func.send.ret=ssize_t"
"tk func.setbuf.arg.0=FILE *,stream"
"tk func.setbuf.arg.1=char *,buf"
"tk func.setbuf.args=2"
"tk func.setbuf.ret=void"
"tk func.setenv.arg.0=const char *,name"
"tk func.setenv.arg.1=const char *,value"
"tk func.setenv.arg.2=int,overwrite"
"tk func.setenv.args=3"
"tk func.setenv.ret=int"
"tk func.setjmp.arg.0=jmpbuf,env"
"tk func.setjmp.args=1"
"tk func.setjmp.ret=int"
"tk func.setlocale.arg.0=int,category"
"tk func.setlocale.arg.1=const char *,locale"
"tk func.setlocale.args=2"
"tk func.setlocale.ret=char *"
"tk func.setsockopt.arg.0=int,sockfd"
"tk func.setsockopt.arg.1=int,level"
"tk func.setsockopt.arg.2=int,optname"
"tk func.setsockopt.arg.3=void *,optval"
"tk func.setsockopt.arg.4=socklen_t,optlen"
"tk func.setsockopt.args=5"
"tk func.setsockopt.ret=int"
"tk func.setstate.arg.0=const char *,state"
"tk func.setstate.args=1"
"tk func.setstate.ret=const char *"
"tk func.setvbuf.arg.0=FILE*,stream"
"tk func.setvbuf.arg.1=char *,buf"
"tk func.setvbuf.arg.2=int,mode"
"tk func.setvbuf.arg.3=size_t,size"
"tk func.setvbuf.args=4"
"tk func.setvbuf.ret=int"
"tk func.sigaction.arg.0=int,signum"
"tk func.sigaction.arg.1=const struct sigaction *,act"
"tk func.sigaction.arg.2=struct sigaction *,oldact"
"tk func.sigaction.args=3"
"tk func.sigaction.ret=int"
"tk func.signal.arg.0=int,sig"
"tk func.signal.arg.1=void *,func"
"tk func.signal.args=2"
"tk func.signal.ret=void"
"tk func.signbit.arg.0=arithmetic,x"
"tk func.signbit.args=1"
"tk func.signbit.ret=bool"
"tk func.sigprocmask.arg.0=int,how"
"tk func.sigprocmask.arg.1=void *,set"
"tk func.sigprocmask.arg.2=void *,oldset"
"tk func.sigprocmask.args=3"
"tk func.sigprocmask.ret=pid_t"
"tk func.sin.arg.0=arithmetic,x"
"tk func.sin.args=1"
"tk func.sin.ret=floating_point"
"tk func.sinf.arg.0=float,x"
"tk func.sinf.args=1"
"tk func.sinf.ret=float"
"tk func.sinh.arg.0=arithmetic,x"
"tk func.sinh.args=1"
"tk func.sinh.ret=floating_point"
"tk func.sinhf.arg.0=float,x"
"tk func.sinhf.args=1"
"tk func.sinhf.ret=float"
"tk func.sinhl.arg.0=long double,x"
"tk func.sinhl.args=1"
"tk func.sinhl.ret=long double"
"tk func.sinl.arg.0=long double,x"
"tk func.sinl.args=1"
"tk func.sinl.ret=long double"
"tk func.sleep.arg.0=int,s"
"tk func.sleep.args=1"
"tk func.sleep.ret=int"
"tk func.snprintf.arg.0=char *,s"
"tk func.snprintf.arg.1=size_t,size"
"tk func.snprintf.arg.2=const char *,format"
"tk func.snprintf.arg.3=,..."
"tk func.snprintf.args=4"
"tk func.snprintf.ret=int"
"tk func.snprintf_chk.arg.0=char *,s"
"tk func.snprintf_chk.arg.1=size_t,size"
"tk func.snprintf_chk.arg.2=const char *,format"
"tk func.snprintf_chk.arg.3=,..."
"tk func.snprintf_chk.args=4"
"tk func.snprintf_chk.ret=int"
"tk func.socket.arg.0=int,domain"
"tk func.socket.arg.1=int,type"
"tk func.socket.arg.2=int,protocol"
"tk func.socket.args=3"
"tk func.socket.ret=int"
"tk func.sprintf.arg.0=char *,s"
"tk func.sprintf.arg.1=const char *,format"
"tk func.sprintf.arg.2=,..."
"tk func.sprintf.args=3"
"tk func.sprintf.ret=int"
"tk func.sprintf_chk.arg.0=char *,s"
"tk func.sprintf_chk.arg.1=const char *,format"
"tk func.sprintf_chk.arg.2=,..."
"tk func.sprintf_chk.args=3"
"tk func.sprintf_chk.ret=int"
"tk func.sqrt.arg.0=arithmetic,x"
"tk func.sqrt.args=1"
"tk func.sqrt.ret=floating_point"
"tk func.sqrtf.arg.0=float,x"
"tk func.sqrtf.args=1"
"tk func.sqrtf.ret=float"
"tk func.sqrtl.arg.0=long double,x"
"tk func.sqrtl.args=1"
"tk func.sqrtl.ret=long double"
"tk func.srand.arg.0=int,seed"
"tk func.srand.args=1"
"tk func.srand.ret=void"
"tk func.srandom.arg.0=uint32_t,seed"
"tk func.srandom.args=1"
"tk func.srandom.ret=uint32_t"
"tk func.srandomdev.args=0"
"tk func.srandomdev.ret=void"
"tk func.sscanf.arg.0=const char *,s"
"tk func.sscanf.arg.1=const char *,format"
"tk func.sscanf.arg.2= ,..."
"tk func.sscanf.args=3"
"tk func.sscanf.ret=int"
"tk func.strcasecmp.arg.0=const char *,s1"
"tk func.strcasecmp.arg.1=const char *,s2"
"tk func.strcasecmp.args=2"
"tk func.strcasecmp.ret=int"
"tk func.strcat.arg.0=char *,s1"
"tk func.strcat.arg.1=const char *,s2"
"tk func.strcat.args=2"
"tk func.strcat.ret=char *"
"tk func.strchr.arg.0=const char *,s"
"tk func.strchr.arg.1=int,c"
"tk func.strchr.args=2"
"tk func.strchr.ret=char *"
"tk func.strcmp.arg.0=const char *,s1"
"tk func.strcmp.arg.1=const char *,s2"
"tk func.strcmp.args=2"
"tk func.strcmp.ret=int"
"tk func.strcoll.arg.0=const char *,s1"
"tk func.strcoll.arg.1=const char *,s2"
"tk func.strcoll.args=2"
"tk func.strcoll.ret=int"
"tk func.strcpy.arg.0=char *,dest"
"tk func.strcpy.arg.1=const char *,src"
"tk func.strcpy.args=2"
"tk func.strcpy.ret=char *"
"tk func.strcpy_chk.arg.0=char *,dest"
"tk func.strcpy_chk.arg.1=const char *,src"
"tk func.strcpy_chk.args=2"
"tk func.strcpy_chk.ret=char *"
"tk func.strcspn.arg.0=const char *,s1"
"tk func.strcspn.arg.1=const char *,s2"
"tk func.strcspn.args=2"
"tk func.strcspn.ret=size_t"
"tk func.strdup.arg.0=const char *,src"
"tk func.strdup.args=1"
"tk func.strdup.ret=char *"
"tk func.strerror.arg.0=int,errnum"
"tk func.strerror.args=1"
"tk func.strerror.ret=char *"
"tk func.strftime.arg.0=char *,s"
"tk func.strftime.arg.1=size_t,maxsize"
"tk func.strftime.arg.2=const char *,format"
"tk func.strftime.arg.3=const tm *,timeptr"
"tk func.strftime.args=4"
"tk func.strftime.ret=size_t"
"tk func.strlcpy.arg.0=char *,dest"
"tk func.strlcpy.arg.1=const char *,src"
"tk func.strlcpy.arg.2=size_t, n"
"tk func.strlcpy.args=3"
"tk func.strlcpy.ret=char *"
"tk func.strlen.arg.0=const char *,s"
"tk func.strlen.args=1"
"tk func.strlen.ret=size_t"
"tk func.strmode.arg.0=int,mode"
"tk func.strmode.arg.1=char *,bp"
"tk func.strmode.args=2"
"tk func.strmode.ret=void"
"tk func.strncasecmp.arg.0=const char *,s1"
"tk func.strncasecmp.arg.1=const char *,s2"
"tk func.strncasecmp.arg.2=size_t,n"
"tk func.strncasecmp.args=3"
"tk func.strncasecmp.ret=int"
"tk func.strncat.arg.0=char *,s1"
"tk func.strncat.arg.1=const char *,s2"
"tk func.strncat.arg.2=size_t,n"
"tk func.strncat.args=3"
"tk func.strncat.ret=char *"
"tk func.strncmp.arg.0=const char *,s1"
"tk func.strncmp.arg.1=const char *,s2"
"tk func.strncmp.arg.2=size_t,n"
"tk func.strncmp.args=3"
"tk func.strncmp.ret=int"
"tk func.strncpy.arg.0=char *,dest"
"tk func.strncpy.arg.1=const char *,src"
"tk func.strncpy.arg.2=size_t, n"
"tk func.strncpy.args=3"
"tk func.strncpy.ret=char *"
"tk func.strndup.arg.0=const char *,src"
"tk func.strndup.arg.1=int,n"
"tk func.strndup.args=2"
"tk func.strndup.ret=char *"
"tk func.strpbrk.arg.0=const char *,s1"
"tk func.strpbrk.arg.1=const char *,s2"
"tk func.strpbrk.args=2"
"tk func.strpbrk.ret=char *"
"tk func.strrchr.arg.0=const char *,s"
"tk func.strrchr.arg.1=int,c"
"tk func.strrchr.args=2"
"tk func.strrchr.ret=char *"
"tk func.strspn.arg.0=const char *,s1"
"tk func.strspn.arg.1=const char *,s2"
"tk func.strspn.args=2"
"tk func.strspn.ret=size_t"
"tk func.strstr.arg.0=const char *,s1"
"tk func.strstr.arg.1=const char *,s2"
"tk func.strstr.args=2"
"tk func.strstr.ret=char *"
"tk func.strtod.arg.0=const char *,str"
"tk func.strtod.arg.1=char * *,endptr"
"tk func.strtod.args=2"
"tk func.strtod.ret=double"
"tk func.strtof.arg.0=const char *,str"
"tk func.strtof.arg.1=char * *,endptr"
"tk func.strtof.args=2"
"tk func.strtof.ret=float"
"tk func.strtoimax.arg.0=const char *,str"
"tk func.strtoimax.arg.1=char * *,endptr"
"tk func.strtoimax.arg.2=int,base"
"tk func.strtoimax.args=3"
"tk func.strtoimax.ret=intmax_t"
"tk func.strtok.arg.0=char *,s1"
"tk func.strtok.arg.1=const char *,s2"
"tk func.strtok.args=2"
"tk func.strtok.ret=char *"
"tk func.strtol.arg.0=const char *,str"
"tk func.strtol.arg.1=char * *,endptr"
"tk func.strtol.arg.2=int,base"
"tk func.strtol.args=3"
"tk func.strtol.ret=long"
"tk func.strtold.arg.0=const char *,str"
"tk func.strtold.arg.1=char * *,endptr"
"tk func.strtold.args=2"
"tk func.strtold.ret=long double"
"tk func.strtoll.arg.0=const char *,str"
"tk func.strtoll.arg.1=char * *,endptr"
"tk func.strtoll.arg.2=int,base"
"tk func.strtoll.args=3"
"tk func.strtoll.ret=long long"
"tk func.strtonum.arg.0=const char *,str"
"tk func.strtonum.arg.1=long long,minval"
"tk func.strtonum.arg.2=long long,maxval"
"tk func.strtonum.arg.3=const char **,errstr"
"tk func.strtonum.args=4"
"tk func.strtonum.ret=long long"
"tk func.strtoul.arg.0=const char *,str"
"tk func.strtoul.arg.1=char * *,endptr"
"tk func.strtoul.arg.2=int,base"
"tk func.strtoul.args=3"
"tk func.strtoul.ret=long"
"tk func.strtoull.arg.0=const char *,str"
"tk func.strtoull.arg.1=char * *,endptr"
"tk func.strtoull.arg.2=int,base"
"tk func.strtoull.args=3"
"tk func.strtoull.ret=long long"
"tk func.strtoumax.arg.0=const char *,str"
"tk func.strtoumax.arg.1=char * *,endptr"
"tk func.strtoumax.arg.2=int,base"
"tk func.strtoumax.args=3"
"tk func.strtoumax.ret=uintmax_t"
"tk func.strxfrm.arg.0=char *,s1"
"tk func.strxfrm.arg.1=const char *,s2"
"tk func.strxfrm.arg.2=size_t,n"
"tk func.strxfrm.args=3"
"tk func.strxfrm.ret=size_t"
"tk func.swift_beginAccess.arg.0=void *"
"tk func.swift_beginAccess.arg.1=void *"
"tk func.swift_beginAccess.arg.2=void *"
"tk func.swift_beginAccess.arg.3=void *"
"tk func.swift_beginAccess.args=4"
"tk func.swift_beginAccess.ret=void"
"tk func.swift_bridgeObjectRelease.arg.0=void *"
"tk func.swift_bridgeObjectRelease.args=1"
"tk func.swift_bridgeObjectRelease.ret=void"
"tk func.swift_bridgeObjectRetain.arg.0=void *"
"tk func.swift_bridgeObjectRetain.args=1"
"tk func.swift_bridgeObjectRetain.ret=void *"
"tk func.swift_endAccess.arg.0=void *"
"tk func.swift_endAccess.args=1"
"tk func.swift_endAccess.ret=void"
"tk func.swift_getObjCClassFromMetadata.arg.0=void *"
"tk func.swift_getObjCClassFromMetadata.args=1"
"tk func.swift_getObjCClassFromMetadata.ret=void *"
"tk func.swift_initStackObject.arg.0=void *"
"tk func.swift_initStackObject.arg.1=void *"
"tk func.swift_initStackObject.args=2"
"tk func.swift_initStackObject.ret=void *"
"tk func.swift_release.arg.0=void *"
"tk func.swift_release.args=1"
"tk func.swift_release.ret=void"
"tk func.swift_unexpectedError.arg.0=void *"
"tk func.swift_unexpectedError.args=1"
"tk func.swift_unexpectedError.ret=void"
"tk func.swprintf.arg.0=wchar_t *,s"
"tk func.swprintf.arg.1=size_t,n"
"tk func.swprintf.arg.2=const wchar_t *,format"
"tk func.swprintf.args=3"
"tk func.swprintf.ret=int"
"tk func.swscanf.arg.0=const wchar_t *,s"
"tk func.swscanf.arg.1=const wchar_t *,format"
"tk func.swscanf.args=2"
"tk func.swscanf.ret=int"
"tk func.symlink.arg.0=const char *,path1"
"tk func.symlink.arg.1=const char *,path2"
"tk func.symlink.args=2"
"tk func.symlink.ret=int"
"tk func.sysctl.arg.0=const char *,name"
"tk func.sysctl.arg.1=int,namelen"
"tk func.sysctl.arg.2=void *,oldp"
"tk func.sysctl.arg.3=size_t *,oldlenp"
"tk func.sysctl.arg.4=void *,newp"
"tk func.sysctl.arg.5=size_t,newlen"
"tk func.sysctl.args=6"
"tk func.sysctl.ret=int"
"tk func.sysctlbyname.arg.0=const char *,name"
"tk func.sysctlbyname.arg.1=void *,oldp"
"tk func.sysctlbyname.arg.2=size_t *,oldlenp"
"tk func.sysctlbyname.arg.3=void *,newp"
"tk func.sysctlbyname.arg.4=size_t,newlen"
"tk func.sysctlbyname.args=5"
"tk func.sysctlbyname.ret=int"
"tk func.sysctlnametomib.arg.0=const char *,name"
"tk func.sysctlnametomib.arg.1=int *,mib"
"tk func.sysctlnametomib.arg.2=size_t *,sizep"
"tk func.sysctlnametomib.args=3"
"tk func.sysctlnametomib.ret=int"
"tk func.system.arg.0=const char *,string"
"tk func.system.args=1"
"tk func.system.ret=int"
"tk func.tan.arg.0=arithmetic,x"
"tk func.tan.args=1"
"tk func.tan.ret=floating_point"
"tk func.tanf.arg.0=float,x"
"tk func.tanf.args=1"
"tk func.tanf.ret=float"
"tk func.tanh.arg.0=arithmetic,x"
"tk func.tanh.args=1"
"tk func.tanh.ret=floating_point"
"tk func.tanhf.arg.0=float,x"
"tk func.tanhf.args=1"
"tk func.tanhf.ret=float"
"tk func.tanhl.arg.0=long double,x"
"tk func.tanhl.args=1"
"tk func.tanhl.ret=long double"
"tk func.tanl.arg.0=long double,x"
"tk func.tanl.args=1"
"tk func.tanl.ret=long double"
"tk func.tcgetpgrp.arg.0=int,fd"
"tk func.tcgetpgrp.args=1"
"tk func.tcgetpgrp.ret=pid_t"
"tk func.textdomain.arg.0=char *,domainname"
"tk func.textdomain.args=1"
"tk func.textdomain.ret=char *"
"tk func.tgamma.arg.0=arithmetic,x"
"tk func.tgamma.args=1"
"tk func.tgamma.ret=floating_point"
"tk func.tgammaf.arg.0=float,x"
"tk func.tgammaf.args=1"
"tk func.tgammaf.ret=float"
"tk func.tgammal.arg.0=long double,x"
"tk func.tgammal.args=1"
"tk func.tgammal.ret=long double"
"tk func.tgetent.arg.0=const char *,bp"
"tk func.tgetent.arg.1=const char *,name"
"tk func.tgetent.args=2"
"tk func.tgetent.ret=int"
"tk func.tgetflag.arg.0=const char *,id"
"tk func.tgetflag.args=1"
"tk func.tgetflag.ret=int"
"tk func.tgetnum.arg.0=char *,id"
"tk func.tgetnum.args=1"
"tk func.tgetnum.ret=int"
"tk func.tgetstr.arg.0=char *,id"
"tk func.tgetstr.arg.1=char **,area"
"tk func.tgetstr.args=2"
"tk func.tgetstr.ret=char*"
"tk func.tgoto.arg.0=const char *,cap"
"tk func.tgoto.arg.1=int,col"
"tk func.tgoto.arg.2=int,row"
"tk func.tgoto.args=3"
"tk func.tgoto.ret=char *"
"tk func.time.arg.0=time_t *,timer"
"tk func.time.args=1"
"tk func.time.ret=time_t"
"tk func.tmpfile.args=0"
"tk func.tmpfile.ret=file*"
"tk func.tmpnam.arg.0=char *,s"
"tk func.tmpnam.args=1"
"tk func.tmpnam.ret=char *"
"tk func.tolower.arg.0=int,c"
"tk func.tolower.args=1"
"tk func.tolower.ret=int"
"tk func.toupper.arg.0=int,c"
"tk func.toupper.args=1"
"tk func.toupper.ret=int"
"tk func.towctrans.arg.0=wint_t,wc"
"tk func.towctrans.arg.1=wctrans_t,desc"
"tk func.towctrans.args=2"
"tk func.towctrans.ret=wint_t"
"tk func.towlower.arg.0=wint_t,wc"
"tk func.towlower.args=1"
"tk func.towlower.ret=wint_t"
"tk func.towupper.arg.0=wint_t,wc"
"tk func.towupper.args=1"
"tk func.towupper.ret=wint_t"
"tk func.trunc.arg.0=arithmetic,x"
"tk func.trunc.args=1"
"tk func.trunc.ret=floating_point"
"tk func.truncf.arg.0=float,x"
"tk func.truncf.args=1"
"tk func.truncf.ret=float"
"tk func.truncl.arg.0=long double,x"
"tk func.truncl.args=1"
"tk func.truncl.ret=long double"
"tk func.umask.arg.0=int,m"
"tk func.umask.args=1"
"tk func.umask.ret=int"
"tk func.ungetc.arg.0=int,c"
"tk func.ungetc.arg.1=FILE *,stream"
"tk func.ungetc.args=2"
"tk func.ungetc.ret=int"
"tk func.ungetwc.arg.0=wint_t,c"
"tk func.ungetwc.arg.1=FILE *,stream"
"tk func.ungetwc.args=2"
"tk func.ungetwc.ret=wint_t"
"tk func.unlink.arg.0=const char *,path"
"tk func.unlink.args=1"
"tk func.unlink.ret=int"
"tk func.user_from_uid.arg.0=uid_t,uid"
"tk func.user_from_uid.arg.1=int,nouser"
"tk func.user_from_uid.args=2"
"tk func.user_from_uid.include=pwd.h"
"tk func.user_from_uid.ret=char *"
"tk func.usleep.arg.0=int,s"
"tk func.usleep.args=1"
"tk func.usleep.ret=int"
"tk func.vfprintf.arg.0=FILE *,stream"
"tk func.vfprintf.arg.1=const char *,format"
"tk func.vfprintf.arg.2=va_list,ap"
"tk func.vfprintf.args=3"
"tk func.vfprintf.ret=int"
"tk func.vfscanf.arg.0=FILE *,stream"
"tk func.vfscanf.arg.1=const char *,format"
"tk func.vfscanf.arg.2=va_list,ap"
"tk func.vfscanf.args=3"
"tk func.vfscanf.ret=int"
"tk func.vfwprintf.arg.0=FILE *,stream"
"tk func.vfwprintf.arg.1=const wchar_t *,format"
"tk func.vfwprintf.arg.2=va_list,arg"
"tk func.vfwprintf.args=3"
"tk func.vfwprintf.ret=int"
"tk func.vfwscanf.arg.0=FILE *,stream"
"tk func.vfwscanf.arg.1=const wchar_t *,format"
"tk func.vfwscanf.arg.2=va_list,arg"
"tk func.vfwscanf.args=3"
"tk func.vfwscanf.ret=int"
"tk func.vprintf.arg.0=const char *,format"
"tk func.vprintf.arg.1=va_list,ap"
"tk func.vprintf.args=2"
"tk func.vprintf.ret=int"
"tk func.vscanf.arg.0=const char *,format"
"tk func.vscanf.arg.1=va_list,ap"
"tk func.vscanf.args=2"
"tk func.vscanf.ret=int"
"tk func.vsnprintf.arg.0=char *,s"
"tk func.vsnprintf.arg.1=size_t,size"
"tk func.vsnprintf.arg.2=const char *,format"
"tk func.vsnprintf.arg.3=va_list,arg"
"tk func.vsnprintf.args=4"
"tk func.vsnprintf.ret=int"
"tk func.vsprintf.arg.0=char *,s"
"tk func.vsprintf.arg.1=const char *,format"
"tk func.vsprintf.arg.2=va_list,arg"
"tk func.vsprintf.args=3"
"tk func.vsprintf.ret=int"
"tk func.vsscanf.arg.0=const char *,s"
"tk func.vsscanf.arg.1=const char *,format"
"tk func.vsscanf.arg.2=va_list,arg"
"tk func.vsscanf.args=3"
"tk func.vsscanf.ret=int"
"tk func.vswprintf.arg.0=wchar_t *,s"
"tk func.vswprintf.arg.1=size_t,n"
"tk func.vswprintf.arg.2=const wchar_t *,format"
"tk func.vswprintf.arg.3=va_list,arg"
"tk func.vswprintf.args=4"
"tk func.vswprintf.ret=int"
"tk func.vswscanf.arg.0=const wchar_t *,s"
"tk func.vswscanf.arg.1=const wchar_t *,format"
"tk func.vswscanf.arg.2=va_list,arg"
"tk func.vswscanf.args=3"
"tk func.vswscanf.ret=int"
"tk func.vwprintf.arg.0=const wchar_t *,format"
"tk func.vwprintf.arg.1=va_list,arg"
"tk func.vwprintf.args=2"
"tk func.vwprintf.ret=int"
"tk func.vwscanf.arg.0=const wchar_t *,format"
"tk func.vwscanf.arg.1=va_list,arg"
"tk func.vwscanf.args=2"
"tk func.vwscanf.ret=int"
"tk func.wait.arg.0=int *,wstatus"
"tk func.wait.args=1"
"tk func.wait.ret=pid_t"
"tk func.waitid.arg.0=idtype_t,idtype"
"tk func.waitid.arg.1=id_t,id"
"tk func.waitid.arg.2=siginfo_t *,infop"
"tk func.waitid.arg.3=int,options"
"tk func.waitid.args=4"
"tk func.waitid.ret=int"
"tk func.waitpid.arg.0=pid_t,pid"
"tk func.waitpid.arg.1=int *,wstatus"
"tk func.waitpid.arg.2=int,options"
"tk func.waitpid.args=3"
"tk func.waitpid.ret=pid_t"
"tk func.warn.arg.0=int,eval"
"tk func.warn.arg.1=const char *,fmt"
"tk func.warn.args=2"
"tk func.warn.ret=void"
"tk func.warnc.arg.0=int,eval"
"tk func.warnc.arg.1=int,code"
"tk func.warnc.arg.2=const char *,fmt"
"tk func.warnc.args=3"
"tk func.warnc.ret=void"
"tk func.warnx.arg.0=int,eval"
"tk func.warnx.arg.1=const char *,fmt"
"tk func.warnx.args=2"
"tk func.warnx.ret=void"
"tk func.wcrtomb.arg.0=char *,s"
"tk func.wcrtomb.arg.1=wchar_t,wc"
"tk func.wcrtomb.arg.2=mbstate_t *,ps"
"tk func.wcrtomb.args=3"
"tk func.wcrtomb.ret=size_t"
"tk func.wcscat.arg.0=wchar_t *,s1"
"tk func.wcscat.arg.1=const wchar_t *,s2"
"tk func.wcscat.args=2"
"tk func.wcscat.ret=wchar_t*"
"tk func.wcschr.arg.0=wchar_t *,s"
"tk func.wcschr.arg.1=wchar_t,c"
"tk func.wcschr.args=2"
"tk func.wcschr.ret=wchar_t*"
"tk func.wcscmp.arg.0=const wchar_t *,s1"
"tk func.wcscmp.arg.1=const wchar_t *,s2"
"tk func.wcscmp.args=2"
"tk func.wcscmp.ret=int"
"tk func.wcscoll.arg.0=const wchar_t *,s1"
"tk func.wcscoll.arg.1=const wchar_t *,s2"
"tk func.wcscoll.args=2"
"tk func.wcscoll.ret=int"
"tk func.wcscpy.arg.0=wchar_t *,s1"
"tk func.wcscpy.arg.1=const wchar_t *,s2"
"tk func.wcscpy.args=2"
"tk func.wcscpy.ret=wchar_t*"
"tk func.wcscspn.arg.0=const wchar_t *,s1"
"tk func.wcscspn.arg.1=const wchar_t *,s2"
"tk func.wcscspn.args=2"
"tk func.wcscspn.ret=size_t"
"tk func.wcsftime.arg.0=wchar_t *,s"
"tk func.wcsftime.arg.1=size_t,maxsize"
"tk func.wcsftime.arg.2=const wchar_t *,format"
"tk func.wcsftime.arg.3=const tm *,timeptr"
"tk func.wcsftime.args=4"
"tk func.wcsftime.ret=size_t"
"tk func.wcslen.arg.0=const wchar_t *,s"
"tk func.wcslen.args=1"
"tk func.wcslen.ret=size_t"
"tk func.wcsncat.arg.0=wchar_t *,s1"
"tk func.wcsncat.arg.1=const wchar_t *,s2"
"tk func.wcsncat.arg.2=size_t,n"
"tk func.wcsncat.args=3"
"tk func.wcsncat.ret=wchar_t*"
"tk func.wcsncmp.arg.0=const wchar_t *,s1"
"tk func.wcsncmp.arg.1=const wchar_t *,s2"
"tk func.wcsncmp.arg.2=size_t,n"
"tk func.wcsncmp.args=3"
"tk func.wcsncmp.ret=int"
"tk func.wcsncpy.arg.0=wchar_t *,s1"
"tk func.wcsncpy.arg.1=const wchar_t *,s2"
"tk func.wcsncpy.arg.2=size_t,n"
"tk func.wcsncpy.args=3"
"tk func.wcsncpy.ret=wchar_t*"
"tk func.wcspbrk.arg.0=wchar_t *,s1"
"tk func.wcspbrk.arg.1=const wchar_t *,s2"
"tk func.wcspbrk.args=2"
"tk func.wcspbrk.ret=wchar_t*"
"tk func.wcsrchr.arg.0=wchar_t *,s"
"tk func.wcsrchr.arg.1=wchar_t,c"
"tk func.wcsrchr.args=2"
"tk func.wcsrchr.ret=wchar_t*"
"tk func.wcsrtombs.arg.0=char *,dst"
"tk func.wcsrtombs.arg.1=const wchar_t* *,src"
"tk func.wcsrtombs.arg.2=size_t,len"
"tk func.wcsrtombs.arg.3=mbstate_t *,ps"
"tk func.wcsrtombs.args=4"
"tk func.wcsrtombs.ret=size_t"
"tk func.wcsspn.arg.0=const wchar_t *,s1"
"tk func.wcsspn.arg.1=const wchar_t *,s2"
"tk func.wcsspn.args=2"
"tk func.wcsspn.ret=size_t"
"tk func.wcsstr.arg.0=wchar_t *,s1"
"tk func.wcsstr.arg.1=const wchar_t *,s2"
"tk func.wcsstr.args=2"
"tk func.wcsstr.ret=wchar_t*"
"tk func.wcstod.arg.0=const wchar_t *,nptr"
"tk func.wcstod.arg.1=wchar_t* *,endptr"
"tk func.wcstod.args=2"
"tk func.wcstod.ret=double"
"tk func.wcstof.arg.0=const wchar_t *,nptr"
"tk func.wcstof.arg.1=wchar_t* *,endptr"
"tk func.wcstof.args=2"
"tk func.wcstof.ret=float"
"tk func.wcstoimax.arg.0=const,wchar_t*"
"tk func.wcstoimax.arg.1=wchar_t* *,endptr"
"tk func.wcstoimax.arg.2=int,base"
"tk func.wcstoimax.args=3"
"tk func.wcstoimax.ret=intmax_t"
"tk func.wcstok.arg.0=wchar_t *,s1"
"tk func.wcstok.arg.1=const wchar_t *,s2"
"tk func.wcstok.arg.2=wchar_t* *,ptr"
"tk func.wcstok.args=3"
"tk func.wcstok.ret=wchar_t*"
"tk func.wcstol.arg.0=const wchar_t *,nptr"
"tk func.wcstol.arg.1=wchar_t* *,endptr"
"tk func.wcstol.arg.2=int,base"
"tk func.wcstol.args=3"
"tk func.wcstol.ret=long"
"tk func.wcstold.arg.0=const wchar_t *,nptr"
"tk func.wcstold.arg.1=wchar_t* *,endptr"
"tk func.wcstold.args=2"
"tk func.wcstold.ret=long double"
"tk func.wcstoll.arg.0=const wchar_t *,nptr"
"tk func.wcstoll.arg.1=wchar_t* *,endptr"
"tk func.wcstoll.arg.2=int,base"
"tk func.wcstoll.args=3"
"tk func.wcstoll.ret=long long"
"tk func.wcstombs.arg.0=char *,s"
"tk func.wcstombs.arg.1=const wchar_t *,pwcs"
"tk func.wcstombs.arg.2=size_t,n"
"tk func.wcstombs.args=3"
"tk func.wcstombs.ret=size_t"
"tk func.wcstoul.arg.0=const wchar_t *,nptr"
"tk func.wcstoul.arg.1=wchar_t* *,endptr"
"tk func.wcstoul.arg.2=int,base"
"tk func.wcstoul.args=3"
"tk func.wcstoul.ret=long"
"tk func.wcstoull.arg.0=const wchar_t *,nptr"
"tk func.wcstoull.arg.1=wchar_t* *,endptr"
"tk func.wcstoull.arg.2=int,base"
"tk func.wcstoull.args=3"
"tk func.wcstoull.ret=long long"
"tk func.wcstoumax.arg.0=const,wchar_t*"
"tk func.wcstoumax.arg.1=wchar_t* *,endptr"
"tk func.wcstoumax.arg.2=int,base"
"tk func.wcstoumax.args=3"
"tk func.wcstoumax.ret=uintmax_t"
"tk func.wcsxfrm.arg.0=wchar_t *,s1"
"tk func.wcsxfrm.arg.1=const wchar_t *,s2"
"tk func.wcsxfrm.arg.2=size_t,n"
"tk func.wcsxfrm.args=3"
"tk func.wcsxfrm.ret=size_t"
"tk func.wctob.arg.0=wint_t,c"
"tk func.wctob.args=1"
"tk func.wctob.ret=int"
"tk func.wctomb.arg.0=char *,s"
"tk func.wctomb.arg.1=wchar_t,wchar"
"tk func.wctomb.args=2"
"tk func.wctomb.ret=int"
"tk func.wctrans.arg.0=const char *,property"
"tk func.wctrans.args=1"
"tk func.wctrans.ret=wctrans_t"
"tk func.wctype.arg.0=const char *,property"
"tk func.wctype.args=1"
"tk func.wctype.ret=wctype_t"
"tk func.wmemchr.arg.0=wchar_t *,s"
"tk func.wmemchr.arg.1=wchar_t,c"
"tk func.wmemchr.arg.2=size_t,n"
"tk func.wmemchr.args=3"
"tk func.wmemchr.ret=wchar_t*"
"tk func.wmemcmp.arg.0=wchar_t *,s1"
"tk func.wmemcmp.arg.1=const wchar_t *,s2"
"tk func.wmemcmp.arg.2=size_t,n"
"tk func.wmemcmp.args=3"
"tk func.wmemcmp.ret=int"
"tk func.wmemcpy.arg.0=wchar_t *,s1"
"tk func.wmemcpy.arg.1=const wchar_t *,s2"
"tk func.wmemcpy.arg.2=size_t,n"
"tk func.wmemcpy.args=3"
"tk func.wmemcpy.ret=wchar_t*"
"tk func.wmemmove.arg.0=wchar_t *,s1"
"tk func.wmemmove.arg.1=const wchar_t *,s2"
"tk func.wmemmove.arg.2=size_t,n"
"tk func.wmemmove.args=3"
"tk func.wmemmove.ret=wchar_t*"
"tk func.wmemset.arg.0=wchar_t *,s"
"tk func.wmemset.arg.1=wchar_t,c"
"tk func.wmemset.arg.2=size_t,n"
"tk func.wmemset.args=3"
"tk func.wmemset.ret=wchar_t*"
"tk func.wprintf.arg.0=const wchar_t *,format"
"tk func.wprintf.args=1"
"tk func.wprintf.ret=int"
"tk func.write.arg.0=int,fd"
"tk func.write.arg.1=const char *,ptr"
"tk func.write.arg.2=size_t,nbytes"
"tk func.write.args=3"
"tk func.write.ret=ssize_t"
"tk func.wscanf.arg.0=const wchar_t *,format"
"tk func.wscanf.args=1"
"tk func.wscanf.ret=int"
"tk func.xalloc_die.args=0"
"tk func.xalloc_die.noreturn=true"
"tk func.xalloc_die.ret=void"
"tk func.xmalloc.arg.0=size_t,size"
"tk func.xmalloc.args=1"
"tk func.xmalloc.ret= void *"
"tk fwide=func"
"tk fwprintf=func"
"tk fwrite=func"
"tk fwscanf=func"
"tk getbsize=func"
"tk getc=func"
"tk getchar=func"
"tk getenv=func"
"tk geteuid=func"
"tk getopt=func"
"tk getopt_long=func"
"tk getpid=func"
"tk getprogname=func"
"tk gets=func"
"tk getsockname=func"
"tk getsockopt=func"
"tk getuid=func"
"tk getwc=func"
"tk getwchar=func"
"tk gid_t=type"
"tk gmtime=func"
"tk group_from_gid=func"
"tk humanize_number=func"
"tk hypot=func"
"tk hypotf=func"
"tk hypotl=func"
"tk ilogb=func"
"tk ilogbf=func"
"tk ilogbl=func"
"tk imaxabs=func"
"tk imaxdiv=func"
"tk inet_aton=func"
"tk inet_ntoa=func"
"tk initstate=func"
"tk int=type"
"tk int16_t=type"
"tk int32_t=type"
"tk int64_t=type"
"tk int8_t=type"
"tk ioctl=func"
"tk isalnum=func"
"tk isalpha=func"
"tk isatty=func"
"tk isblank=func"
"tk iscntrl=func"
"tk isdigit=func"
"tk isfinite=func"
"tk isgraph=func"
"tk isgreater=func"
"tk isgreaterequal=func"
"tk isinf=func"
"tk isless=func"
"tk islessequal=func"
"tk islessgreater=func"
"tk islower=func"
"tk isnan=func"
"tk isnormal=func"
"tk isprint=func"
"tk ispunct=func"
"tk isspace=func"
"tk isunordered=func"
"tk isupper=func"
"tk iswalnum=func"
"tk iswalpha=func"
"tk iswblank=func"
"tk iswcntrl=func"
"tk iswctype=func"
"tk iswdigit=func"
"tk iswgraph=func"
"tk iswlower=func"
"tk iswprint=func"
"tk iswpunct=func"
"tk iswspace=func"
"tk iswupper=func"
"tk iswxdigit=func"
"tk isxdigit=func"
"tk kill=func"
"tk labs=func"
"tk ldexp=func"
"tk ldexpf=func"
"tk ldexpl=func"
"tk ldiv=func"
"tk lgamma=func"
"tk lgammaf=func"
"tk lgammal=func"
"tk listxattr=func"
"tk llabs=func"
"tk lldiv=func"
"tk llrint=func"
"tk llrintf=func"
"tk llrintl=func"
"tk llround=func"
"tk llroundf=func"
"tk llroundl=func"
"tk localeconv=func"
"tk localtime=func"
"tk log=func"
"tk log10=func"
"tk log10f=func"
"tk log10l=func"
"tk log1p=func"
"tk log1pf=func"
"tk log1pl=func"
"tk log2=func"
"tk log2f=func"
"tk log2l=func"
"tk logb=func"
"tk logbf=func"
"tk logbl=func"
"tk logf=func"
"tk logl=func"
"tk long=type"
"tk long long=type"
"tk longjmp=func"
"tk lrint=func"
"tk lrintf=func"
"tk lrintl=func"
"tk lround=func"
"tk lroundf=func"
"tk lroundl=func"
"tk lstat=func"
"tk main=func"
"tk malloc=func"
"tk maskrune=func"
"tk mblen=func"
"tk mbrlen=func"
"tk mbrtowc=func"
"tk mbsinit=func"
"tk mbsrtowcs=func"
"tk mbstowcs=func"
"tk mbtowc=func"
"tk memchr=func"
"tk memcmp=func"
"tk memcpy=func"
"tk memmem=func"
"tk memmove=func"
"tk memset=func"
"tk mkstemp=func"
"tk mktemp=func"
"tk mktime=func"
"tk mmap=func"
"tk modf=func"
"tk modff=func"
"tk modfl=func"
"tk munmap=func"
"tk nan=func"
"tk nanf=func"
"tk nanl=func"
"tk nanosleep=func"
"tk nearbyint=func"
"tk nearbyintf=func"
"tk nearbyintl=func"
"tk nextafter=func"
"tk nextafterf=func"
"tk nextafterl=func"
"tk nexttoward=func"
"tk nexttowardf=func"
"tk nexttowardl=func"
"tk nl_langinfo=func"
"tk nl_langinfo_l=func"
"tk objc_allocWithZone=func"
"tk objc_enumerationMutation=func"
"tk objc_msgSend=func"
"tk objc_msgSendSuper2=func"
"tk objc_opt_self=func"
"tk objc_release=func"
"tk objc_retain=func"
"tk objc_retainAutoreleasedReturnValue=func"
"tk objc_storeStrong=func"
"tk open=func"
"tk openat=func"
"tk pclose=func"
"tk perror=func"
"tk pid_t=type"
"tk popen=func"
"tk pow=func"
"tk powf=func"
"tk powl=func"
"tk prctl=func"
"tk printf=func"
"tk ptrace=func"
"tk putc=func"
"tk putchar=func"
"tk puts=func"
"tk pututxline=func"
"tk putwc=func"
"tk putwchar=func"
"tk qsort=func"
"tk quick_exit=func"
"tk raise=func"
"tk rand=func"
"tk random=func"
"tk read=func"
"tk readlink=func"
"tk realloc=func"
"tk reallocf=func"
"tk recv=func"
"tk remainder=func"
"tk remainderf=func"
"tk remainderl=func"
"tk remove=func"
"tk remquo=func"
"tk remquof=func"
"tk remquol=func"
"tk rename=func"
"tk rewind=func"
"tk rint=func"
"tk rintf=func"
"tk rintl=func"
"tk round=func"
"tk roundf=func"
"tk roundl=func"
"tk scalbln=func"
"tk scalblnf=func"
"tk scalblnl=func"
"tk scalbn=func"
"tk scalbnf=func"
"tk scalbnl=func"
"tk scanf=func"
"tk select=func"
"tk send=func"
"tk setbuf=func"
"tk setenv=func"
"tk setjmp=func"
"tk setlocale=func"
"tk setsockopt=func"
"tk setstate=func"
"tk setvbuf=func"
"tk short=type"
"tk sigaction=func"
"tk signal=func"
"tk signbit=func"
"tk sigprocmask=func"
"tk sin=func"
"tk sinf=func"
"tk sinh=func"
"tk sinhf=func"
"tk sinhl=func"
"tk sinl=func"
"tk size_t=type"
"tk sleep=func"
"tk snprintf=func"
"tk snprintf_chk=func"
"tk socket=func"
"tk sprintf=func"
"tk sprintf_chk=func"
"tk sqrt=func"
"tk sqrtf=func"
"tk sqrtl=func"
"tk srand=func"
"tk srandom=func"
"tk srandomdev=func"
"tk sscanf=func"
"tk strcasecmp=func"
"tk strcat=func"
"tk strchr=func"
"tk strcmp=func"
"tk strcoll=func"
"tk strcpy=func"
"tk strcpy_chk=func"
"tk strcspn=func"
"tk strdup=func"
"tk strerror=func"
"tk strftime=func"
"tk strlcpy=func"
"tk strlen=func"
"tk strmode=func"
"tk strncasecmp=func"
"tk strncat=func"
"tk strncmp=func"
"tk strncpy=func"
"tk strndup=func"
"tk strpbrk=func"
"tk strrchr=func"
"tk strspn=func"
"tk strstr=func"
"tk strtod=func"
"tk strtof=func"
"tk strtoimax=func"
"tk strtok=func"
"tk strtol=func"
"tk strtold=func"
"tk strtoll=func"
"tk strtonum=func"
"tk strtoul=func"
"tk strtoull=func"
"tk strtoumax=func"
"tk strxfrm=func"
"tk swift_beginAccess=func"
"tk swift_bridgeObjectRelease=func"
"tk swift_bridgeObjectRetain=func"
"tk swift_endAccess=func"
"tk swift_getObjCClassFromMetadata=func"
"tk swift_initStackObject=func"
"tk swift_release=func"
"tk swift_unexpectedError=func"
"tk swprintf=func"
"tk swscanf=func"
"tk symlink=func"
"tk sysctl=func"
"tk sysctlbyname=func"
"tk sysctlnametomib=func"
"tk system=func"
"tk tan=func"
"tk tanf=func"
"tk tanh=func"
"tk tanhf=func"
"tk tanhl=func"
"tk tanl=func"
"tk tcgetpgrp=func"
"tk textdomain=func"
"tk tgamma=func"
"tk tgammaf=func"
"tk tgammal=func"
"tk tgetent=func"
"tk tgetflag=func"
"tk tgetnum=func"
"tk tgetstr=func"
"tk tgoto=func"
"tk time=func"
"tk tmpfile=func"
"tk tmpnam=func"
"tk tolower=func"
"tk toupper=func"
"tk towctrans=func"
"tk towlower=func"
"tk towupper=func"
"tk trunc=func"
"tk truncf=func"
"tk truncl=func"
"tk type.FILE=p"
"tk type.FILE.size=8"
"tk type.char=c"
"tk type.char *=z"
"tk type.char **=*z"
"tk type.char *.size=64"
"tk type.char.size=8"
"tk type.double=F"
"tk type.double.size=64"
"tk type.float=f"
"tk type.float.size=32"
"tk type.gid_t=d"
"tk type.gid_t.uid=64"
"tk type.int=d"
"tk type.int.size=32"
"tk type.int16_t=w"
"tk type.int16_t.size=16"
"tk type.int32_t=d"
"tk type.int32_t.size=32"
"tk type.int64_t=q"
"tk type.int64_t.size=64"
"tk type.int8_t=b"
"tk type.int8_t.size=8"
"tk type.long=x"
"tk type.long long=q"
"tk type.long long.size=64"
"tk type.long.size=64"
"tk type.pid_t=d"
"tk type.pid_t.pid=64"
"tk type.pid_t.size=32"
"tk type.short=w"
"tk type.short.size=16"
"tk type.size_t=x"
"tk type.size_t.size=64"
"tk type.uid_t=d"
"tk type.uid_t.size=64"
"tk type.uid_t.uid=64"
"tk type.uint16_t=w"
"tk type.uint16_t.size=16"
"tk type.uint32_t=d"
"tk type.uint32_t.size=32"
"tk type.uint64_t=q"
"tk type.uint64_t.size=64"
"tk type.uint8_t=b"
"tk type.uint8_t.size=8"
"tk type.unsigned char=b"
"tk type.unsigned char.size=8"
"tk type.unsigned int=i"
"tk type.unsigned int.size=32"
"tk type.unsigned short=w"
"tk type.unsigned short.size=16"
"tk type.void *=p"
"tk type.void *.size=64"
"tk uid_t=type"
"tk uint16_t=type"
"tk uint32_t=type"
"tk uint64_t=type"
"tk uint8_t=type"
"tk umask=func"
"tk ungetc=func"
"tk ungetwc=func"
"tk unlink=func"
"tk unsigned char=type"
"tk unsigned int=type"
"tk unsigned short=type"
"tk user_from_uid=func"
"tk usleep=func"
"tk vfprintf=func"
"tk vfscanf=func"
"tk vfwprintf=func"
"tk vfwscanf=func"
"tk void *=type"
"tk vprintf=func"
"tk vscanf=func"
"tk vsnprintf=func"
"tk vsprintf=func"
"tk vsscanf=func"
"tk vswprintf=func"
"tk vswscanf=func"
"tk vwprintf=func"
"tk vwscanf=func"
"tk wait=func"
"tk waitid=func"
"tk waitpid=func"
"tk warn=func"
"tk warnc=func"
"tk warnx=func"
"tk wcrtomb=func"
"tk wcscat=func"
"tk wcschr=func"
"tk wcscmp=func"
"tk wcscoll=func"
"tk wcscpy=func"
"tk wcscspn=func"
"tk wcsftime=func"
"tk wcslen=func"
"tk wcsncat=func"
"tk wcsncmp=func"
"tk wcsncpy=func"
"tk wcspbrk=func"
"tk wcsrchr=func"
"tk wcsrtombs=func"
"tk wcsspn=func"
"tk wcsstr=func"
"tk wcstod=func"
"tk wcstof=func"
"tk wcstoimax=func"
"tk wcstok=func"
"tk wcstol=func"
"tk wcstold=func"
"tk wcstoll=func"
"tk wcstombs=func"
"tk wcstoul=func"
"tk wcstoull=func"
"tk wcstoumax=func"
"tk wcsxfrm=func"
"tk wctob=func"
"tk wctomb=func"
"tk wctrans=func"
"tk wctype=func"
"tk wmemchr=func"
"tk wmemcmp=func"
"tk wmemcpy=func"
"tk wmemmove=func"
"tk wmemset=func"
"tk wprintf=func"
"tk write=func"
"tk wscanf=func"
"tk xalloc_die=func"
"tk xmalloc=func"
# macros
# aliases
# seek
s 0x000014ac
